<!DOCTYPE html PUBLIC "-//W3C//DTD HTML 4.01 Transitional//EN">
<html><head>
<title>Константы</title>
<meta http-equiv="content-type" content="text/html; charset=utf-8">
<link rel="stylesheet" type="text/css" href="1.css">
<script type="text/javascript" src="1.js"></script>
</head>
<body>
<h2 class=head1>Константы</h2>
<h3 id="1">Анимационные константы</h3>
<h4 id="1.1">Цикличные режимы (loop modes)</h4>
<pre><span class="lnk" onmouseover="show('loop once - одноразовый цикл, т.е.<br>однократное воспроизведение клипа');" onmouseout="hide()">THREE.LoopOnce</span>
<span class="lnk" onmouseover="show('loop repeat - повторяющийся цикл, т.е.<br>клип проигрывается выбранное количество<br>раз (указанное в параметре repetitions),<br>всякий раз переходя с конца клипа<br>непосредственно на его начало');" onmouseout="hide()">THREE.LoopRepeat</span>
<span class="lnk" onmouseover="show('loop pingpong - цикл пинг-понг, т.е. клип<br>воспроизводится выбранное количество раз<br>(указанное в параметре repetitions),<br>проигрывая его поочередно вперед и назад');" onmouseout="hide()">THREE.LoopPingPong</span></pre><br>
<h4 id="1.2">Режимы интерполяции (interpolation modes)</h4>
<pre><a href="#" onclick="return false" onmouseover="show('interpolate discrete - дискретная (т.е. прерывистая, из отдельных частей) интерполяция');" onmouseout="hide()">THREE.InterpolateDiscrete</a>
<a href="#" onclick="return false" onmouseover="show('interpolate linear - линейная интерполяция');" onmouseout="hide()">THREE.InterpolateLinear</a>
<a href="#" onclick="return false" onmouseover="show('interpolate smooth - плавная (гладкая) интерполяция');" onmouseout="hide()">THREE.InterpolateSmooth</a></pre><br>
<h4 id="1.3">Режимы окончания (ending modes)</h4>
<pre><a href="#" onclick="return false" onmouseover="show('zero curvature ending - окончание с нулевой кривизной');" onmouseout="hide()">THREE.ZeroCurvatureEnding</a>
<a href="#" onclick="return false" onmouseover="show('zero slope ending - окончание с нулевым уклоном');" onmouseout="hide()">THREE.ZeroSlopeEnding</a>
<a href="#" onclick="return false" onmouseover="show('wrap around ending - окончание окружением оболочкой');" onmouseout="hide()">THREE.WrapAroundEnding</a></pre><br>
<h4>Исходники</h4>
<div class=blockindent><a href="https://github.com/mrdoob/three.js/blob/master/src/constants.js" target="_blank">constants.js на github.com</a></div><br><br>


<h3 id="2">Константы ядра</h3>
<h4 id="2.1">Номер версии (revision number)</h4>
<pre><a href="#" onclick="return false" onmouseover="show('сокращение от слова revision - ревизия, пересмотр, изменение');" onmouseout="hide()">THREE.REV</a></pre>
<a href="https://github.com/mrdoob/three.js/releases" target="_blank">Номер текущей версии</a> <em>three.js</em>.<br><br>
<h4 id="2.2">Кнопки мышки (mouse buttons)</h4>
<pre><a href="#" onclick="return false" onmouseover="show('mouse left - левая кнопка мышки');" onmouseout="hide()">THREE.MOUSE.LEFT</a>
<a href="#" onclick="return false" onmouseover="show('mouse middle - средняя кнопка мышки');" onmouseout="hide()">THREE.MOUSE.MIDDLE</a>
<a href="#" onclick="return false" onmouseover="show('mouse right - правая кнопка мышки');" onmouseout="hide()">THREE.MOUSE.RIGHT</a></pre><br>
<h4>Исходники</h4>
<div class=blockindent><a href="https://github.com/mrdoob/three.js/blob/master/src/constants.js" target="_blank">constants.js на github.com</a></div><br><br>


<h3 id="3">Константы настраиваемых уравнений смешивания</h3>
<h4>Пример</h4>
<pre><a href="https://threejs.org/examples/webgl_materials_blending_custom" target="_blank">materials / blending / custom</a></pre><br>

<h4>Применение</h4>
Константы работают со всеми типами материалов. Вначале устанавливается режим смешивания материалов (<tt>THREE.CustomBlending</tt>),
затем устанавливается желаемые уравнение смешивания (<tt>Blending Equation</tt>), исходный фактор (<tt>Source Factor</tt>) и целевой фактор (<tt>Destination Factor</tt>).
<pre>var material = new THREE.MeshBasicMaterial( {color: 0x00ff00} );
material.blending = THREE.CustomBlending;
material.blendEquation = THREE.AddEquation; // по умолчанию
material.blendSrc = THREE.SrcAlphaFactor; // по умолчанию
material.blendDst = THREE.OneMinusDstAlphaFactor; // по умолчанию</pre><br>

<h4 id="3.1">Уравнения смешивания (blending equations)</h4>
<pre><a href="#" onclick="return false" onmouseover="show('add equation - уравнение сложения');" onmouseout="hide()">THREE.AddEquation</a>
<a href="#" onclick="return false" onmouseover="show('subtract equation - уравнение вычитания');" onmouseout="hide()">THREE.SubtractEquation</a>
<a href="#" onclick="return false" onmouseover="show('reverse subtract equation - уравнение обратного вычитания');" onmouseout="hide()">THREE.ReverseSubtractEquation</a>
<a href="#" onclick="return false" onmouseover="show('min equation - уравнение минимизации');" onmouseout="hide()">THREE.MinEquation</a>
<a href="#" onclick="return false" onmouseover="show('max equation - уравнение максимизации');" onmouseout="hide()">THREE.MaxEquation</a></pre><br>

<h4 id="3.2">Исходные факторы (source factors)</h4>
<pre><a href="#" onclick="return false" onmouseover="show('zero factor - нулевой фактор');" onmouseout="hide()">THREE.ZeroFactor</a>
<a href="#" onclick="return false" onmouseover="show('one factor - единичный фактор');" onmouseout="hide()">THREE.OneFactor</a>
<a href="#" onclick="return false" onmouseover="show('source color factor - исходный фактор цвета');" onmouseout="hide()">THREE.SrcColorFactor</a>
<a href="#" onclick="return false" onmouseover="show('one minus source color factor - исходный фактор цвета, за вычетом одного');" onmouseout="hide()">THREE.OneMinusSrcColorFactor</a>
<a href="#" onclick="return false" onmouseover="show('source alpha factor - исходный фактор альфа-канала (прозрачность)');" onmouseout="hide()">THREE.SrcAlphaFactor</a>
<a href="#" onclick="return false" onmouseover="show('one minus source alpha factor - исходный фактор альфа-канала (прозрачность), за вычетом одного');" onmouseout="hide()">THREE.OneMinusSrcAlphaFactor</a>
<a href="#" onclick="return false" onmouseover="show('destination alpha factor - целевой фактор альфа-канала (прозрачность)');" onmouseout="hide()">THREE.DstAlphaFactor</a>
<a href="#" onclick="return false" onmouseover="show('one minus destination alpha factor - целевой фактор альфа-канала (прозрачность), за вычетом одного');" onmouseout="hide()">THREE.OneMinusDstAlphaFactor</a>
<a href="#" onclick="return false" onmouseover="show('destination color factor - целевой фактор цвета');" onmouseout="hide()">THREE.DstColorFactor</a>
<a href="#" onclick="return false" onmouseover="show('one minus destination color factor - целевой фактор цвета, за вычетом одного');" onmouseout="hide()">THREE.OneMinusDstColorFactor</a>
<a href="#" onclick="return false" onmouseover="show('source alpha saturate factor - исходный фактор насыщения альфа-канала (прозрачность)');" onmouseout="hide()">THREE.SrcAlphaSaturateFactor</a></pre><br>

<h4 id="3.3">Целевые факторы (destination factors)</h4>
Все исходные факторы работают и как целевые, за исключением <tt>THREE.SrcAlphaSaturateFactor</tt>.<br><br>

<h4>Исходники</h4>
<div class=blockindent><a href="https://github.com/mrdoob/three.js/blob/master/src/constants.js" target="_blank">constants.js на github.com</a></div><br><br>


<h3 id="4">Константы режима рисования</h3>
Это действующие значения для свойства <a href="objects.htm#8drawMode" onmouseover="show('Mesh.drawMode');" onmouseout="hide()">Mesh.drawMode</a>, и управляют тем, как список вершин будет интерпретирован после отправки в графический процессор (GPU).<br>
Обратите внимание, что это все работает только когда <a href="objects.htm#8geometry" onmouseover="show('Mesh.geometry');" onmouseout="hide()">Mesh.geometry</a> является <a href="core.htm#2" onmouseover="show('BufferGeometry');" onmouseout="hide()">BufferGeometry</a>.
Изменение констант, когда <a href="objects.htm#8geometry" onmouseover="show('Mesh.geometry');" onmouseout="hide()">Mesh.geometry</a> является <a href="core.htm#7" onmouseover="show('Geometry');" onmouseout="hide()">Geometry</a>, не окажет никакого влияния.<br><br>

<h4 id="4.1">Режимы рисования (draw modes)</h4>
<pre><a href="#" onclick="return false" onmouseover="show('triangles draw mode - режим рисования треугольников');" onmouseout="hide()">THREE.TrianglesDrawMode</a></pre>
<div class=blockindent>Этот режим устанавливается по умолчанию и приводит к тому, что каждые три последовательные вершины (v0, v1, v2), (v2, v3, v5), ... будут интерпретированы как отдельный треугольник.<br>
Если число вершин не кратно 3, избыточные вершины игнорируются.</div>

<pre><a href="#" onclick="return false" onmouseover="show('triangle strip draw mode - режим рисования ленты треугольников');" onmouseout="hide()">THREE.TriangleStripDrawMode</a></pre>
<div class=blockindent>Этот режим приведет к последовательности треугольников, соединенных в ленту, представленную как (v0, v1, v2), (v2, v1, v3), (v2, v3, v4), ... так что каждый предыдущий треугольник имеет две общие вершины с предыдущим треугольником.</div>

<pre><a href="#" onclick="return false" onmouseover="show('triangle fan draw mode - режим рисования треугольников как лопасти у вентилятора');" onmouseout="hide()">THREE.TriangleFanDrawMode</a></pre>
<div class=blockindent>В результате этого режима появятся последовательности треугольников, в каждом из которых имеется одна общая вершина (подобно лопастям вентилятора - fan), представленные как (v0, v1, v2), (v0, v2, v3), (v0, v3, v4), и т.д.
<div class=note><b>Примечание:</b> Этот режим не поддерживается <a href="https://en.wikipedia.org/wiki/DirectX#DirectX_10" target="_blank">DirectX10</a>. (Вот <a href="https://ru.wikipedia.org/wiki/DirectX" target="_blank">DirectX10 на русском языке</a>.)
Браузеры Chrome и Firefox представляют WebGL на Windows при помощи <a href="https://en.wikipedia.org/wiki/ANGLE_(software)" target="_blank">ANGLE</a>, преобразовывая внутри себя этот режим в поддерживаемый, что, скорее всего приведет к снижению производительности этих браузеров.
<div class=note_trans><b>Примечание переводчика:</b> ANGLE (Almost Native Graphics Layer Engine - практически встроенный движок графического слоя, а перевод самой аббревиатуры ANGLE - угол) это графический движок слоя абстракций, разработанный компанией Google, с открытым исходным кодом под лицензией BSD.
Этот API в основном предназначен для обеспечения высокопроизводительной совместимости OpenGL с компьютерами Windows и веб-браузерами вроде Chromium, путем перевода вызовов OpenGL в Direct3D, который гораздо лучше поддерживается драйверами. Для ANGLE существует два внутренних визуализатора: самый старый использует Direct3D 9.0c, в то время как новый использует Direct3D 11.<br><br>
<span style='float:right; margin-top:-16px; background-color:#ffffe8;'><i>из вышеприведенной статьи англ. Википедии, перевод мой.</i></span></div></div></div>

<h4>Применение</h4>
<pre>var geometry = new THREE.Geometry();<br>
geometry.vertices.push(
	new THREE.Vector3( -10,  10, 0 ),
	new THREE.Vector3( -10, -10, 0 ),
	new THREE.Vector3(  10, -10, 0 ),
	...
);
geometry.faces.push( new THREE.Face3( 0, 1, 2 ), ... );<br>
var material = new THREE.MeshBasicMaterial( { color: 0xffff00 } );<br>
var mesh = new THREE.Mesh( geometry, material );
mesh.drawMode = THREE.TrianglesDrawMode; // default (по умолчанию)<br>
scene.add( mesh );</pre><br>
<h4>Исходники</h4>
<div class=blockindent><a href="https://github.com/mrdoob/three.js/blob/master/src/constants.js" target="_blank">constants.js на github.com</a></div><br>


<h3 id="5">Константы материалов</h3>
Эти константы определяют свойства, общие для всех типов материала, за исключением операций комбинирования текстур (Texture Combine Operations),
которые применяются только к <a href="materials.htm#4combine" onmouseover="show('MeshBasicMaterial.combine');" onmouseout="hide()">MeshBasicMaterial</a>, <a href="materials.htm#6combine" onmouseover="show('MeshLambertMaterial.combine');" onmouseout="hide()">MeshLambertMaterial</a>
и <a href="materials.htm#8combine" onmouseover="show('MeshPhongMaterial.combine');" onmouseout="hide()">MeshPhongMaterial</a>.<br><br>

<h4 id="5.1">Сторона (side)</h4>
<pre><a href="#" onclick="return false" onmouseover="show('front side - лицевая (передняя) сторона');" onmouseout="hide()">THREE.FrontSide</a>
<a href="#" onclick="return false" onmouseover="show('back side - оборотная (задняя) сторона');" onmouseout="hide()">THREE.BackSide</a>
<a href="#" onclick="return false" onmouseover="show('double side - две стороны');" onmouseout="hide()">THREE.DoubleSide</a></pre>
Эти константы определяют какая сторона грани будет отображаться - передняя (front), задняя (back) или обе.
По умолчанию используется <a href="#" onclick="return false" onmouseover="show(type_const);" onmouseout="hide()">FrontSide</a>.<br><br>

<h4 id="5.2">Цвета (colors)</h4>
<pre><a href="#" onclick="return false" onmouseover="show('no colors - нет цвета');" onmouseout="hide()">THREE.NoColors</a>
<a href="#" onclick="return false" onmouseover="show('face colors - цвета граней (сторон)');" onmouseout="hide()">THREE.FaceColors</a>
<a href="#" onclick="return false" onmouseover="show('vertex colors - цвета вершин');" onmouseout="hide()">THREE.VertexColors</a></pre>
<a href="#" onclick="return false" onmouseover="show(type_const);" onmouseout="hide()">NoColors</a> используется по умолчанию и применяет ко всем граням (поверхностям) цвет материала.<br>
<a href="#" onclick="return false" onmouseover="show(type_const);" onmouseout="hide()">FaceColors</a> окрашивает грани (т.е. ячейки каркаса) в соответствии со значением цвета
<a href="math.htm#3" onmouseover="show('Color');" onmouseout="hide()">color</a> каждой треугольной грани <a href="core.htm#5" onmouseover="show('Face3');" onmouseout="hide()">Face3</a>.<br>
<a href="#" onclick="return false" onmouseover="show(type_const);" onmouseout="hide()">VertexColors</a> окрашивает грани в соответствии со значением
<a href="#" onclick="return false" onmouseover="show(type_array);" onmouseout="hide()">vertexColors</a> каждой из вершин грани <a href="core.htm#5" onmouseover="show('Face3');" onmouseout="hide()">Face3</a>.
Это массив из трех значений <a href="math.htm#3" onmouseover="show('Color');" onmouseout="hide()">color</a>, по одному для каждой вершины грани.<br>
Смотрите пример <a href="https://threejs.org/examples/webgl_geometry_colors" target="_blank">geometry / colors</a>.<br><br>

<h4 id="5.3">Режим смешивания (blending mode)</h4>
<pre><a href="#" onclick="return false" onmouseover="show('no blending - нет смешивания');" onmouseout="hide()">THREE.NoBlending</a>
<a href="#" onclick="return false" onmouseover="show('normal blending - обычное смешивание');" onmouseout="hide()">THREE.NormalBlending</a>
<a href="#" onclick="return false" onmouseover="show('additive blending - смешивание с дополнением');" onmouseout="hide()">THREE.AdditiveBlending</a>
<a href="#" onclick="return false" onmouseover="show('subtractive blending - смешивание с вычитанием');" onmouseout="hide()">THREE.SubtractiveBlending</a>
<a href="#" onclick="return false" onmouseover="show('multiply blending - смешивание перемножением');" onmouseout="hide()">THREE.MultiplyBlending</a>
<a href="#" onclick="return false" onmouseover="show('custom blending - настраиваемое смешивание');" onmouseout="hide()">THREE.CustomBlending</a></pre>
Эти константы управляют исходным и целевым уравнениями смешивания для каналов цвета (RGB) и канала прозрачности (Alpha) материала, отправляемых WebGLRenderer'у для использования в WebGL.<br>
<a href="#" onclick="return false" onmouseover="show(type_const);" onmouseout="hide()">NormalBlending</a> используется по умолчанию.<br>
Обратите внимание, что <a href="#" onclick="return false" onmouseover="show(type_const);" onmouseout="hide()">CustomBlending</a> должен быть установлен для использования <a href="#2" onmouseover="show('CustomBlendingEquation');" onmouseout="hide()"> Custom Blending Equations</a>.<br>
Смотрите пример <a href="https://threejs.org/examples/webgl_materials_blending" target="_blank">materials / blending</a>.<br><br>

<h4 id="5.4">Режим глубины (depth mode)</h4>
<pre><a href="#" onclick="return false" onmouseover="show('never depth - никогда нет глубины');" onmouseout="hide()">THREE.NeverDepth</a>
<a href="#" onclick="return false" onmouseover="show('always depth - глубина есть всегда');" onmouseout="hide()">THREE.AlwaysDepth</a>
<a href="#" onclick="return false" onmouseover="show('less depth - ме&#769;ньшая глубина');" onmouseout="hide()">THREE.LessDepth</a>
<a href="#" onclick="return false" onmouseover="show('less equal depth - глубина меньше или равна');" onmouseout="hide()">THREE.LessEqualDepth</a>
<a href="#" onclick="return false" onmouseover="show('greater equal depth - глубина больше или равна');" onmouseout="hide()">THREE.GreaterEqualDepth</a>
<a href="#" onclick="return false" onmouseover="show('greater depth - бо&#769;льшая глубина');" onmouseout="hide()">THREE.GreaterDepth</a>
<a href="#" onclick="return false" onmouseover="show('not equal depth - нет равной глубины');" onmouseout="hide()">THREE.NotEqualDepth</a></pre>
Эти константы определяют функцию, используемую материалом для сравнения значения входящего пиксела глубины (т.е. значения по оси Z) с текущим значением буфера глубины. Если результатом этого сравнения будет значение <tt>true</tt>, пиксель будет прорисован.
<div class=list><span class="lnk" onmouseover="show(type_const+'<br><br>never depth - никогда нет глубины')" onmouseout="hide()">NeverDepth</span> никогда не возвращает значение <tt>true</tt>.</div>
<div class=list><span class="lnk" onmouseover="show(type_const+'<br><br>always depth - глубина есть всегда')" onmouseout="hide()">AlwaysDepth</span> всегда возвращает значение <tt>true</tt>.</div>
<div class=list><span class="lnk" onmouseover="show(type_const+'<br><br>less depth - ме&#769;ньшая глубина')" onmouseout="hide()">LessDepth</span> возвращает значение <tt>true</tt>, если значение входящего пиксела Z-глубины меньше значения текущего буфера Z-глубины.</div>
<div class=list><span class="lnk" onmouseover="show(type_const+'<br><br>less equal depth - глубина меньше или равна')" onmouseout="hide()">LessEqualDepth</span> возвращает значение <tt>true</tt>, если значение входящего пиксела Z-глубины меньше или равно значению текущего буфера Z-глубины. Эта константа применяется по умолчанию.</div>
<div class=list><span class="lnk" onmouseover="show(type_const+'<br><br>greater equal depth - глубина больше или равна')" onmouseout="hide()">GreaterEqualDepth</span>, если значение входящего пиксела Z-глубины больше или равно значению текущего буфера Z-глубины.</div>
<div class=list><span class="lnk" onmouseover="show(type_const+'<br><br>greater depth - бо&#769;льшая глубина')" onmouseout="hide()">GreaterDepth</span> возвращает значение <tt>true</tt>, если значение входящего пиксела Z-глубины меньше или равно значению текущего буфера Z-глубины.</div>
<div class=list><span class="lnk" onmouseover="show(type_const+'<br><br>not equal depth - нет равной глубины')" onmouseout="hide()">NotEqualDepth</span> возвращает значение <tt>true</tt>, если значение входящего пиксела Z-глубины равно значению текущего буфера Z-глубины.</div><br>

<h4 id="5.5">Операции комбинирования (совмещения) текстур</h4>
<pre><a href="#" onclick="return false" onmouseover="show('multiply operation - операция умножения');" onmouseout="hide()">THREE.MultiplyOperation</a>
<a href="#" onclick="return false" onmouseover="show('mix operation - операция смешивания');" onmouseout="hide()">THREE.MixOperation</a>
<a href="#" onclick="return false" onmouseover="show('add operation - операция сложения');" onmouseout="hide()">THREE.AddOperation</a></pre>
Эти операции определяют каков будет результат при совмещении цвета поверхности с картой цвета среды (если существует),
для таких материалов как <a href="materials.htm#4combine" onmouseover="show('MeshBasicMaterial.combine');" onmouseout="hide()">MeshBasicMaterial</a>,
<a href="materials.htm#6combine" onmouseover="show('MeshLambertMaterial.combine');" onmouseout="hide()">MeshLambertMaterial</a> и <a href="materials.htm#8combine" onmouseover="show('MeshPhongMaterial.combine');" onmouseout="hide()">MeshPhongMaterial</a>.
<div class=list><a href="#" onclick="return false" onmouseover="show(type_const);" onmouseout="hide()">MultiplyOperation</a> применяется по умолчанию и перемножает карту цвета среды и цвет поверхности.</div>
<div class=list><a href="#" onclick="return false" onmouseover="show(type_const);" onmouseout="hide()">MixOperation</a> при смешивании двух цветов используется отражение.</div>
<div class=list><a href="#" onclick="return false" onmouseover="show(type_const);" onmouseout="hide()">AddOperation</a> складывает два цвета.</div><br>

<h4 id="5.6">Функции трафарета</h4>
<pre><span class="lnk" onmouseover="show('сокращение от never stencil functions -<br>никогда (не применять) функции трафарета')" onmouseout="hide()">THREE.NeverStencilFunc</span>
<span class="lnk" onmouseover="show('сокращение от less stencil function -<br>функция меньшего трафарета')" onmouseout="hide()">THREE.LessStencilFunc</span>
<span class="lnk" onmouseover="show('сокращение от equal stencil function -<br>функция равного трафарета')" onmouseout="hide()">THREE.EqualStencilFunc</span>
<span class="lnk" onmouseover="show('сокращение от less equal stencil function -<br>функция меньшего (или) равного трафарета')" onmouseout="hide()">THREE.LessEqualStencilFunc</span>
<span class="lnk" onmouseover="show('сокращение от greater stencil function -<br>функция бо&#769;льшего трафарета')" onmouseout="hide()">THREE.GreaterStencilFunc</span>
<span class="lnk" onmouseover="show('сокращение от not equal stencil function -<br>функция неравного трафарета')" onmouseout="hide()">THREE.NotEqualStencilFunc</span>
<span class="lnk" onmouseover="show('сокращение от greater equal stencil function -<br>функция бо&#769;льшего (или) равного трафарета')" onmouseout="hide()">THREE.GreaterEqualStencilFunc</span>
<span class="lnk" onmouseover="show('сокращение от always stencil functions -<br>функции трафарета (выполняются) всегда')" onmouseout="hide()">THREE.AlwaysStencilFunc</span></pre>
Функции трафарета, используемые на материале, для определения выполнения или невыполнения операций трафарета.
<div class=list><span class="lnk" onmouseover="show(type_const+'<br><br>сокращение от never stencil functions -<br>никогда (не применять) функции трафарета')" onmouseout="hide()">NeverStencilFunc</span> никогда не возвращает значение <tt>true</tt>.</div>
<div class=list><span class="lnk" onmouseover="show(type_const+'<br><br>сокращение от less stencil function -<br>функция меньшего трафарета')" onmouseout="hide()">LessStencilFunc</span> возвращает значение <tt>true</tt>, если опорное (исходное) значение трафарета меньше текущего.</div>
<div class=list><span class="lnk" onmouseover="show(type_const+'<br><br>сокращение от equal stencil function -<br>функция равного трафарета')" onmouseout="hide()">EqualStencilFunc</span> возвращает значение <tt>true</tt>, если опорное (исходное) значение трафарета равно текущему значению трафарета.</div>
<div class=list><span class="lnk" onmouseover="show(type_const+'<br><br>сокращение от less equal stencil function -<br>функция меньшего (или) равного трафарета')" onmouseout="hide()">LessEqualStencilFunc</span> возвращает значение <tt>true</tt>, если опорное (исходное) значение трафарета меньше или равно текущему значению трафарета.</div>
<div class=list><span class="lnk" onmouseover="show(type_const+'<br><br>сокращение от greater stencil function -<br>функция бо&#769;льшего трафарета')" onmouseout="hide()">GreaterStencilFunc</span> возвращает значение <tt>true</tt>, если опорное (исходное) значение трафарета больше текущего.</div>
<div class=list><span class="lnk" onmouseover="show(type_const+'<br><br>сокращение от not equal stencil function -<br>функция неравного трафарета')" onmouseout="hide()">NotEqualStencilFunc</span> возвращает значение <tt>true</tt>, если опорное (исходное) значение трафарета неравно текущему значению трафарета.</div>
<div class=list><span class="lnk" onmouseover="show(type_const+'<br><br>сокращение от greater equal stencil function -<br>функция бо&#769;льшего (или) равного трафарета')" onmouseout="hide()">GreaterEqualStencilFunc</span> возвращает значение <tt>true</tt>, если опорное (исходное) значение трафарета больше или равно значению текущего трафарета.</div>
<div class=list><span class="lnk" onmouseover="show(type_const+'<br><br>сокращение от always stencil functions -<br>функции трафарета (выполняются) всегда')" onmouseout="hide()">AlwaysStencilFunc</span> всегда возвращает значение <tt>true</tt>.</div><br>

<h4 id="5.7">Операции трафарета</h4>
<pre><span class="lnk" onmouseover="show('сокращение от zero stencil operation<br>- операция обнуления трафарета')" onmouseout="hide()">THREE.ZeroStencilOp</span>
<span class="lnk" onmouseover="show('сокращение от keep stencil operation<br>- операция сохранения трафарета')" onmouseout="hide()">THREE.KeepStencilOp</span>
<span class="lnk" onmouseover="show('сокращение от replace stencil operation<br>- операция замены трафарета')" onmouseout="hide()">THREE.ReplaceStencilOp</span>
<span class="lnk" onmouseover="show('сокращение от increment stencil operation<br>- операция увеличения трафарета')" onmouseout="hide()">THREE.IncrementStencilOp</span>
<span class="lnk" onmouseover="show('сокращение от decrement stencil operation<br>- операция уменьшения трафарета')" onmouseout="hide()">THREE.DecrementStencilOp</span>
<span class="lnk" onmouseover="show('сокращение от increment wrap stencil operation<br>- операция увеличения оболочки трафарета')" onmouseout="hide()">THREE.IncrementWrapStencilOp</span>
<span class="lnk" onmouseover="show('сокращение от decrement wrap stencil operation<br>- операция уменьшения оболочки трафарета')" onmouseout="hide()">THREE.DecrementWrapStencilOp</span>
<span class="lnk" onmouseover="show('сокращение от invert stencil operation<br>- операция инвертирования трафарета')" onmouseout="hide()">THREE.InvertStencilOp</span></pre>
Операции трафарета, выполняемые материалом, на пикселом буфера трафарета, если проходит представленная функция трафарета.
Which stencil operation the material will perform on the stencil buffer pixel if the provided stencil function passes.
<div class=list><span class="lnk" onmouseover="show(type_const+'<br><br>сокращение от zero stencil operation -<br>операция обнуления трафарета')" onmouseout="hide()">ZeroStencilOp</span> устанавливает значение данного трафарета равным&nbsp;<tt>0</tt>.</div>
<div class=list><span class="lnk" onmouseover="show(type_const+'<br><br>сокращение от keep stencil operation -<br>операция сохранения трафарета')" onmouseout="hide()">KeepStencilOp</span> не изменяет текущее значение трафарета</div>
<div class=list><span class="lnk" onmouseover="show(type_const+'<br><br>сокращение от replace stencil operation -<br>операция замены трафарета')" onmouseout="hide()">ReplaceStencilOp</span> заменяет значение данного трафарета на указанное опорное (исходное) значение трафарета.</div>
<div class=list><span class="lnk" onmouseover="show(type_const+'<br><br>сокращение от increment stencil operation<br>- операция увеличения трафарета')" onmouseout="hide()">IncrementStencilOp</span> увеличивает текущее значение трафарета на&nbsp;<tt>1</tt>.</div>
<div class=list><span class="lnk" onmouseover="show(type_const+'<br><br>сокращение от decrement stencil operation<br>- операция уменьшения трафарета')" onmouseout="hide()">DecrementStencilOp</span> уменьшает текущее значение трафарета на&nbsp;<tt>1</tt></div>
<div class=list><span class="lnk" onmouseover="show(type_const+'<br><br>сокращение от increment wrap stencil operation<br>- операция увеличения оболочки трафарета')" onmouseout="hide()">IncrementWrapStencilOp</span> увеличивает текущее значение оболочки трафарета на&nbsp;<tt>1</tt>. Если значение увеличивается свыше&nbsp;<tt>255</tt>, оно устанавливается как&nbsp;<tt>0</tt>.</div>
<div class=list><span class="lnk" onmouseover="show(type_const+'<br><br>сокращение от decrement wrap stencil operation<br>- операция уменьшения оболочки трафарета')" onmouseout="hide()">DecrementWrapStencilOp</span> уменьшает текущее значение оболочки трафарета на&nbsp;<tt>1</tt>. Если значение становится меньше&nbsp;<tt>0</tt>, оно устанавливается как&nbsp;<tt>255</tt>.</div>
<div class=list><span class="lnk" onmouseover="show(type_const+'<br><br>сокращение от invert stencil operation<br>- операция инвертирования трафарета')" onmouseout="hide()">InvertStencilOp</span> выполнит побитовую инверсию текущего значения трафарета.</div><br>

<h4>Исходники</h4>
<div class=blockindent><a href="https://github.com/mrdoob/three.js/blob/master/src/constants.js" target="_blank">constants.js на github.com</a></div><br>


<h3 id="6">Константы WebGLRenderer</h3>
<h4 id="6.1">Режимы выбраковки граней (cull face modes)</h4>
<pre><a href="#" onclick="return false" onmouseover="show('cull face none - нет выбраковки граней');" onmouseout="hide()">THREE.CullFaceNone</a>
<a href="#" onclick="return false" onmouseover="show('cull face back - отбрасывается задняя грань');" onmouseout="hide()">THREE.CullFaceBack</a>
<a href="#" onclick="return false" onmouseover="show('cull face front - отбрасывается передняя грань');" onmouseout="hide()">THREE.CullFaceFront</a>
<a href="#" onclick="return false" onmouseover="show('cull face front back - отбрасываются грани впереди и сзади');" onmouseout="hide()">THREE.CullFaceFrontBack</a></pre>
Эти константы используются методом <a href="renderers.htm#1setFaceCulling" onmouseover="show('WebGLRenderer.setFaceCulling');" onmouseout="hide()">setFaceCulling</a> WebGLRenderer'а.
<div class=list><a href="#" onclick="return false" onmouseover="show(type_const);" onmouseout="hide()">CullFaceNone</a> отключает выбраковку граней.</div>
<div class=list><a href="#" onclick="return false" onmouseover="show(type_const);" onmouseout="hide()">CullFaceBack</a> отбрасываются задние грани (эта константа применяется по умолчанию).</div>
<div class=list><a href="#" onclick="return false" onmouseover="show(type_const);" onmouseout="hide()">CullFaceFront</a> отбрасываются передние грани.</div>
<div class=list><a href="#" onclick="return false" onmouseover="show(type_const);" onmouseout="hide()">CullFaceFrontBack</a> отбрасываются обе грани, и передняя и задняя.</div><br>

<h4 id="6.2">Направление передней грани (front face direction)</h4>
<pre><a href="#" onclick="return false" onmouseover="show('сокращение от front face direction clockwise - направление передних граней по часовой стрелке');" onmouseout="hide()">THREE.FrontFaceDirectionCW</a>
<a href="#" onclick="return false" onmouseover="show('сокращение от front face direction counter-clockwise - направление передних граней против часовой стрелки');" onmouseout="hide()">THREE.FrontFaceDirectionCCW</a></pre>
Эти константы используются методом <a href="renderers.htm#1setFaceCulling" onmouseover="show('WebGLRenderer.setFaceCulling');" onmouseout="hide()">setFaceCulling</a> WebGLRenderer'а.
<div class=list><a href="#" onclick="return false" onmouseover="show(type_const);" onmouseout="hide()">FrontFaceDirectionCW</a> устанавливает порядок следования многоугольников (полигонов) по часовой стрелке.</div>
<div class=list><a href="#" onclick="return false" onmouseover="show(type_const);" onmouseout="hide()">FrontFaceDirectionCCW</a> устанавливает порядок следования многоугольников (полигонов) против часовой стрелки (значение по умолчанию).</div><br>

<h4 id="6.3">Типы тени (shadow types)</h4>
<pre><a href="#" onclick="return false" onmouseover="show('basic shadow map - базовая карта тени');" onmouseout="hide()">THREE.BasicShadowMap</a>
<a href="#" onclick="return false" onmouseover="show('PCF shadow map - карта тени с фильтром процентного приближения - PCF');" onmouseout="hide()">THREE.PCFShadowMap</a>
<a href="#" onclick="return false" onmouseover="show('PCF soft shadow map - карта мягкой тени с фильтром процентного приближения');" onmouseout="hide()">THREE.PCFSoftShadowMap</a></pre>
Эти константы определяют свойство <a href="renderers.htm#1shadowMap.type" onmouseover="show('WebGLRenderer.shadowMap.type');" onmouseout="hide()">shadowMap.type</a> WebGLRenderer'а.

<div class=list><span onclick="showClick('basic shadow map - базовая карта тени')"><a href="#" onclick="return false" onblur="hideClick()" onmouseover="show(type_const)" onmouseout="hide()">BasicShadowMap</a></span> дает нефильтрованные карты теней - самые быстрые, но и самые низкокачественные.</div>
<div class=list><span onclick="showClick('Работа алгоритма заключается в том, что производится несколько<br>тестов на затенение в окрестностях искомого фрагмента и для<br>затенения используется среднее значение этих тестов, таким<br>образом, граница тени будет более «мягкой».')">
<a href="#" onclick="return false" onblur="hideClick()" onmouseover="show(type_const);" onmouseout="hide()">PCFShadowMap</a></span> фильтры теневых карт используют алгоритм Percentage-Closer Filtering - PCF (значение по умолчанию).</div>
<div class=list><span onclick="showClick('Технология создания теней PCSS позволяет сделать их более<br>реалистичными и приближенными к жизни. Очертания теней<br>растворяются по мере удаления от объекта, отбрасывающего<br>тень. Использование технологии PCSS позволяет сделать<br>очертания теней естественными и избежать «лесенок».')">
<a href="#" onclick="return false" onblur="hideClick()" onmouseover="show(type_const);" onmouseout="hide()">PCFSoftShadowMap</a></span> фильтры теневых карт используют алгоритм Percentage-Closer Soft Shadows (PCSS).</div><br>

<h4 id="6.4">Отображение тона цвета (tone mapping)</h4>
<div class=note_trans>
HDR (High Dynamic Range) — технология широкодиапазонного представления цвета.<a class='link' onclick='javascript:spoiler(this)'>... читать далее</a>
<div style='display:none;'>До недавнего времени стандартно цвет в компьютерной графике представлялся 32 битами, по 8 бит на компонент (красный, зелёный, синий и альфа). Таким образом, каждая цветовая компонента может принимать 256 различных оттенков. Практика показала, что при таком количестве оттенков человеческий глаз не способен различить погрешности отображения. Проще говоря, такой точности хватало.<br>
Однако теперь, в связи с появлением более сложных технологий освещения, появилась необходимость большей точности вычислений. В результате появилась технология HDR. Суть её заключается в использовании 16 бит на компонент (исключение составляет только самый конец конвейера — экран, где используется по-прежнему 8-битная точность, для реализации эффекта HDR применяют 16-битные текстуры специального формата). Кроме того, яркость компонента представляется не числом с фиксированной точкой, а с плавающей, в результате чего появляется возможность работать с очень большими и очень малыми значениями при довольно высокой точности. В итоге, становится возможным работать с такими эффектами, как световые блики, ослепление ярким светом и пр.<br>
Чаще всего термин HDR употребляется в отношении получения, хранения и обработки растровых изображений. Широко используемые на сегодняшний день цифровые технологии исторически основаны на 8-битных целочисленных форматах представления и обработки данных, что даёт весьма узкий динамический диапазон, часто называемый SDR (англ. Standard Dynamic Range) или LDR (англ. Low Dynamic Range). Для сравнения, отношение наиболее яркого к наименее яркому (но ещё не чёрному) цветам для sRGB составляет порядка 3 000:1, в то время как реальные сцены часто имеют динамический диапазон яркости в 1 000 000:1 и выше, при этом и в тенях и в свете глаз способен (из-за световой адаптации к яркости) различить детали. Применение техники HDR позволяет работать с полным диапазоном яркости сцены, устраняя исторические ограничения.</div></div>
Отображение тонов цвета (tone mapping) - это процесс преобразования диапазона яркостей HDR к LDR диапазону, отображаемому устройством вывода, например, монитором или принтером,
так как вывод HDR изображений на них потребует преобразования динамического диапазона и цветового охвата модели HDR в соответствующий динамический диапазон LDR, чаще всего модель RGB.
Ведь диапазон яркости, представленный в HDR, очень широк, это несколько порядков абсолютного динамического диапазона единовременно, в одной сцене.
А диапазон, который можно воспроизвести на привычных устройствах вывода (мониторах, телевизорах), составляет лишь около двух порядков динамического диапазона.<br>
Преобразование из HDR в LDR и называется <span class="lnk" onmouseover="show('тональное отображение (англ. tone mapping), при котором<br>закон преобразования яркости пикселей может быть разным<br>для различных частей изображения (имитация градиентного<br>фильтра). Существуют разные алгоритмы с разными<br>дополнительными эффектами и возможностями по управлению<br>пользователем этим процессом. В результате применения<br>алгоритмов могут образовываться ореолы в районе границ<br>между светлыми и тёмными областями, тёмные по природе<br>объекты могут стать неестественно светлыми.')" onmouseout="hide()">отображением тонов (tone mapping)</span>,
оно выполняется с потерями и имитирует свойства человеческого зрения.
<pre><span onclick="showClick(type_const)"><a href="#" onclick="return false" onblur="hideClick()" onmouseover="show('no tone mapping - нет отображения тонов');" onmouseout="hide()">THREE.NoToneMapping</a></span>
<span onclick="showClick(type_const)"><a href="#" onclick="return false" onblur="hideClick()" onmouseover="show('linear tone mapping - линейное преобразование отображения тонов');" onmouseout="hide()">THREE.LinearToneMapping</a></span>
<span onclick="showClick(type_const)"><a href="#" onclick="return false" onblur="hideClick()" onmouseover="show('Reinhard tone mapping - преобразование отображения тонов по Рейнгарду');" onmouseout="hide()">THREE.ReinhardToneMapping</a></span>
<span onclick="showClick(type_const)"><a href="#" onclick="return false" onblur="hideClick()" onmouseover="show('uncharted 2 tone mapping - uncharted 2 отображение тонов');" onmouseout="hide()">THREE.Uncharted2ToneMapping</a></span>
<span onclick="showClick(type_const)"><a href="#" onclick="return false" onblur="hideClick()" onmouseover="show('cineon tone mapping - преобразование cineon отображения тонов');" onmouseout="hide()">THREE.CineonToneMapping</a></span>
<span onclick="showClick(type_const)"><a href="#" onclick="return false" onblur="hideClick()" onmouseover="show('ACES filmic tone mapping - система кодирования цвета ACES была<br>разработана для бесшовной работы с цветными изображениями независимо<br>от входного или выходного цветового пространства. Она также имеет<br>тщательно продуманную кинематографическую кривую для отображения<br>изображений HDR на устройствах вывода LDR.');" onmouseout="hide()">THREE.ACESFilmicToneMapping</a></span></pre>
Эти константы определяют свойство <a href="renderers.htm#1.1toneMapping" onmouseover="show('WebGLRenderer.toneMapping');" onmouseout="hide()">toneMapping</a> WebGLRenderer'а.
Они используются для приведения внешнего вида изображения в расширенном динамическом диапазоне (high dynamic range - HDR) к возможному отображению их в низком динамическом диапазоне (low dynamic range - LDR) стандартного компьютерного монитора или экрана мобильного устройства.<br>
<span onclick="showClick(type_const)"><a href="#" onclick="return false" onblur="hideClick()" onmouseover="show('no tone mapping - нет отображения тонов');" onmouseout="hide()">NoToneMapping</a></span> отключает отображение тонов.<br>
Значением по умолчанию является <span onclick="showClick(type_const)"><a href="#" onclick="return false" onblur="hideClick()" onmouseover="show('linear tone mapping - линейное отображение тонов');" onmouseout="hide()">LinearToneMapping</a></span>.<br>
Смотрите пример <a href="https://threejs.org/examples/webgl_tonemapping" target="_blank">отображения тонов</a>.<br><br>

<h4>Исходники</h4>
<div class=blockindent><a href="https://github.com/mrdoob/three.js/blob/master/src/constants.js" target="_blank">constants.js на github.com</a></div><br>


<h3 id="7">Константы текстур</h3>
<h4 id="7.1">Режимы картирования (mapping modes)</h4>
<pre><span onclick="showClick(type_const)"><a href="#" onclick="return false" onblur="hideClick()" onmouseover="show('UV mapping - картирование (по координатам) U V');" onmouseout="hide()">THREE.UVMapping</a></span>
<span onclick="showClick(type_const)"><a href="#" onclick="return false" onblur="hideClick()" onmouseover="show('cube reflection mapping - картирование с отражением кубической текстуры');" onmouseout="hide()">THREE.CubeReflectionMapping</a></span>
<span onclick="showClick(type_const)"><a href="#" onclick="return false" onblur="hideClick()" onmouseover="show('cube refraction mapping - картирование с преломлением кубической текстуры');" onmouseout="hide()">THREE.CubeRefractionMapping</a></span>
<span onclick="showClick(type_const)"><a href="#" onclick="return false" onblur="hideClick()" onmouseover="show('equirectangular reflection mapping - картирование с отражением равнопромежуточной проекции');" onmouseout="hide()">THREE.EquirectangularReflectionMapping</a></span>
<span onclick="showClick(type_const)"><a href="#" onclick="return false" onblur="hideClick()" onmouseover="show('equirectangular refraction mapping - картирование с преломлением равнопромежуточной проекции');" onmouseout="hide()">THREE.EquirectangularRefractionMapping</a></span>
<span onclick="showClick(type_const)"><a href="#" onclick="return false" onblur="hideClick()" onmouseover="show('spherical reflection mapping - картирование сферического отражения');" onmouseout="hide()">THREE.SphericalReflectionMapping</a></span>
<span onclick="showClick(type_const)"><a href="#" onclick="return false" onblur="hideClick()" onmouseover="show('cube UV reflection mapping - ');" onmouseout="hide()">THREE.CubeUVReflectionMapping</a></span>
<span onclick="showClick(type_const)"><a href="#" onclick="return false" onblur="hideClick()" onmouseover="show('cube UV refraction mapping - ');" onmouseout="hide()">THREE.CubeUVRefractionMapping</a></span></pre>
Эти константы определяют режим наложения текстуры на поверхность объекта.<br>
Значением по умолчанию является <tt><span onclick="showClick(type_const)"><a href="#" onclick="return false" onblur="hideClick()" onmouseover="show('UV mapping - картирование (по координатам) U V');" onmouseout="hide()">THREE.UVMapping</a></span></tt>, при которой текстура накладывается на поверхность объекта в соответствии с координатами UV сетки (mesh).<br>
Остальные константы определяют типы картирования окружающей обстановки.<br>
<tt>CubeReflectionMapping</tt> и <tt>CubeRefractionMapping</tt> предназначены для использования с <a href="textures.htm#3" onmouseover="show('CubeTexture')" onmouseout="hide()">CubeTexture</a>, состоящей из шести текстур, по одной на каждую грань куба.
Для <a href="textures.htm#3" onmouseover="show('CubeTexture')" onmouseout="hide()">CubeTexture</a> значением по умолчанию является CubeReflectionMapping.<br>
<tt>EquirectangularReflectionMapping</tt> и <tt>EquirectangularRefractionMapping</tt> предназначены для использования с картой равнопромежуточной проекции.
Также она называется картой (lat-long map) с долготой (longitude) и широтой (latitude), равнопромежуточная текстура представляет вид на 360 градусов по горизонтальной оси и на 180 градусов по вертикальной оси,
с верхним и нижним краями изображения соответствующими северному и южному полюсам отображаемой сферы.<br>
Вот статьи Википедии <a href="https://ru.wikipedia.org/wiki/%D0%A0%D0%B0%D0%B2%D0%BD%D0%BE%D0%BF%D1%80%D0%BE%D0%BC%D0%B5%D0%B6%D1%83%D1%82%D0%BE%D1%87%D0%BD%D0%B0%D1%8F_%D0%BF%D1%80%D0%BE%D0%B5%D0%BA%D1%86%D0%B8%D1%8F" target="_blank">Равнопромежуточная проекция</a>
и <a href="https://en.wikipedia.org/wiki/Equirectangular_projection" target="_blank">Equirectangular projection</a>.<br>
<span onclick="showClick(type_const)"><a href="#" onclick="return false" onblur="hideClick()" onmouseover="show('spherical reflection mapping - картирование сферического отражения')" onmouseout="hide()">SphericalReflectionMapping</a></span> предназначена для использования с картой сферического отражения, такой, какая может быть получена путем обрезки фотографии зеркального шара.
Сферические карты будут отображаться лицевой стороной к камере, независимо от её положения относительно объекта с кубическим картированием или поверхности.<br>
Смотрите пример <a href="https://threejs.org/examples/webgl_materials_envmaps" target="_blank">materials / envmaps</a>.<br><br>

<h4 id="7.2">Режимы укладки текстур (wrapping modes)</h4>
<pre><span onclick="showClick(type_const)"><a href="#" onclick="return false" onblur="hideClick()" onmouseover="show('repeat wrapping - повторение оболочки');" onmouseout="hide()">THREE.RepeatWrapping</a></span>
<span onclick="showClick(type_const)"><a href="#" onclick="return false" onblur="hideClick()" onmouseover="show('clamp to edge wrapping - стыковать с краем оболочки');" onmouseout="hide()">THREE.ClampToEdgeWrapping</a></span>
<span onclick="showClick(type_const)"><a href="#" onclick="return false" onblur="hideClick()" onmouseover="show('mirrored repeat wrapping - зеркальное повторение оболочки');" onmouseout="hide()">THREE.MirroredRepeatWrapping</a></span></pre>
Эти константы определяют свойства текстур <tt><a href="textures.htm#6wrapS" onmouseover="show('Texture.wrapS');" onmouseout="hide()">wrapS</a></tt> и <tt><a href="textures.htm#6wrapT" onmouseover="show('Texture.wrapT');" onmouseout="hide()">wrapT</a></tt>,
которые устанавливают стыковку текстур по горизонтали и вертикали.
<div class=blockindent>С константой <tt><span onclick="showClick(type_const)"><a href="#" onclick="return false" onblur="hideClick()" onmouseover="show('repeat wrapping - повторение оболочки');" onmouseout="hide()">RepeatWrapping</a></span></tt> текстура будет попросту повторяться до бесконечности.<br>
По умолчанию применяется константа <tt><span onclick="showClick(type_const)"><a href="#" onclick="return false" onblur="hideClick()" onmouseover="show('clamp to edge wrapping - стыковать с краем оболочки');" onmouseout="hide()">ClampToEdgeWrapping</a></span></tt>.
Последний пиксел текстуры растягивается до края сетки (mesh).<br>
С константой <tt><span onclick="showClick(type_const)"><a href="#" onclick="return false" onblur="hideClick()" onmouseover="show('mirrored repeat wrapping - зеркальное повторение оболочки');" onmouseout="hide()">MirroredRepeatWrapping</a></span></tt> текстура будет повторяться бесконечно, зеркально отображаясь при каждом повторе.</div><br>

<h4 id="7.3">Фильтры увеличения (magnification filters)</h4>
<pre><span class="lnk" onmouseover="show(type_const+'<br><br>nearest filter - ближайший фильтр')" onmouseout="hide()">THREE.NearestFilter</span>
<span class="lnk" onmouseover="show(type_const+'<br><br>linear filter - линейный фильтр')" onmouseout="hide()">THREE.LinearFilter</span></pre>
Эти константы предназначены для свойства текстуры <tt><a href="textures.htm#6magFilter" onmouseover="show('Texture.magFilter')" onmouseout="hide()">magFilter</a></tt>,
они определяют функцию увеличения текстуры, используемую когда пиксель существующей текстуры отображает область меньше или равную одному элементу текстуры (текселю).
<div class=list><span class="lnk" onmouseover="show(type_const+'<br><br>nearest filter - ближайший фильтр')" onmouseout="hide()">NearestFilter</span> возвращает значение элемента текстуры, которое является ближайшим
(по <a href="https://ru.wikipedia.org/wiki/%D0%A0%D0%B0%D1%81%D1%81%D1%82%D0%BE%D1%8F%D0%BD%D0%B8%D0%B5_%D0%B3%D0%BE%D1%80%D0%BE%D0%B4%D1%81%D0%BA%D0%B8%D1%85_%D0%BA%D0%B2%D0%B0%D1%80%D1%82%D0%B0%D0%BB%D0%BE%D0%B2" target="_blank">манхэттенскому расстоянию</a>
- <a href="http://en.wikipedia.org/wiki/Taxicab_geometry" target="_blank">Manhattan distance</a>) к указанным координатам текстуры.</div>
<div class=list><span class="lnk" onmouseover="show(type_const+'<br><br>linear filter - линейный фильтр')" onmouseout="hide()">LinearFilter</span> является значением по умолчанию и
возвращает средневзвешенное значение четырех текстурных элементов, наиболее близких к указанным координатам текстуры, и может включать элементы пристыкованные или повторяющиеся из других частей текстуры,
в зависимости от значений свойств текстуры <tt><a href="textures.htm#6wrapS" onmouseover="show('Texture.wrapS');" onmouseout="hide()">wrapS</a></tt> и <tt><a href="textures.htm#6wrapT" onmouseover="show('Texture.wrapT');" onmouseout="hide()">wrapT</a></tt> и от точности отображения.</div><br>

<h4 id="7.4">Фильтры минимизации (minification filters)</h4>
<pre><span class="lnk" onmouseover="show(type_const+'<br><br>nearest filter - ближайший фильтр')" onmouseout="hide()">THREE.NearestFilter</span>
<span class="lnk" onmouseover="show(type_const+'<br><br>nearest mipmap nearest filter - ближайшая mip-карта, ближайший фильтр')" onmouseout="hide()">THREE.NearestMipMapNearestFilter</span>
<span class="lnk" onmouseover="show(type_const+'<br><br>nearest mipmap linear filter - ближайшая mip-карта, линейный фильтр')" onmouseout="hide()">THREE.NearestMipMapLinearFilter</span>
<span class="lnk" onmouseover="show(type_const+'<br><br>linear filter - линейный фильтр')" onmouseout="hide()">THREE.LinearFilter</span>
<span class="lnk" onmouseover="show(type_const+'<br><br>linear mipmap nearest filter - линейная mip-карта, ближайший фильтр')" onmouseout="hide()">THREE.LinearMipMapNearestFilter</span>
<span class="lnk" onmouseover="show(type_const+'<br><br>linear mipmap linear filter - линейная mip-карта, линейный фильтр')" onmouseout="hide()">THREE.LinearMipMapLinearFilter</span></pre>
Эти константы предназначены для использования со свойством текстуры <tt><a href="textures.htm#6minFilter" onmouseover="show('Texture.minFilter');" onmouseout="hide()">minFilter</a></tt>,
они определяют функцию минимизации текстуры, которая используется всякий раз, когда пиксел существующей текстуры отображает область больше, чем один элемент текстуры (тексель).<br>
В дополнение к <tt>NearestFilter</tt> и <tt>LinearFilter</tt> для минимизации можно использовать следующие четыре функции:
<div class=list><tt><span class="lnk" onmouseover="show(type_const+'<br><br>nearest mipmap nearest filter - ближайшая mip-карта, ближайший фильтр')" onmouseout="hide()">THREE.NearestMipMapNearestFilter</span></tt>
выбирает mip-карту, которая наиболее точно соответствует размеру пиксела существующей текстуры и использует константу <tt>NearestFilter</tt>
(тексель, ближайший к центру пиксела) в качестве условия для получения значения текстуры.</div>
<div class=list><tt><span class="lnk" onmouseover="show(type_const+'<br><br>nearest mipmap linear filter - ближайшая mip-карта, линейный фильтр')" onmouseout="hide()">NearestMipMapLinearFilter</span></tt>
выбирает две mip-карты, которые наиболее точно соответствуют размеру пиксела существующей текстуры и использует константу <tt>NearestFilter</tt> в качестве условия для получения значения текстуры от каждой mip-карты.
Конечным значением текстуры будет средневзвешенное от этих двух значений.</div>
<div class=list><tt><span class="lnk" onmouseover="show(type_const+'<br><br>linear mipmap nearest filter - линейная mip-карта, ближайший фильтр')" onmouseout="hide()">LinearMipMapNearestFilter</span></tt>
выбирает mip-карту, которые наиболее точно соответствующую размеру пиксела существующей текстуры и использует константу <tt>LinearFilter</tt>
(средневзвешенное значение от четырех текселей, ближайших к центру пиксела) в качестве условия для получения значения текстуры.</div>
<div class=list><tt><span class="lnk" onmouseover="show(type_const+'<br><br>linear mipmap linear filter - линейная mip-карта, линейный фильтр')" onmouseout="hide()">LinearMipMapLinearFilter</span></tt> является значением по умолчанию
и выбирает две mip-карты, которые наиболее близко соответствуют размеру пиксела существующей текстуры, и использует константу <tt>LinearFilter</tt> в качестве условия для получения значения текстуры от каждой mip-карты.
Конечным значением текстуры будет средневзвешенное значение от этих двух значений.</div>
Смотрите пример <a href="https://threejs.org/examples/#webgl_materials_texture_filters" target="_blank">materials / texture / filters</a>.<br><br>

<h4 id="7.5">Типы</h4>
<pre><span class="lnk" onmouseover="show('unsigned byte type - тип байта без знака')" onmouseout="hide()">THREE.UnsignedByteType</span>
<span class="lnk" onmouseover="show('byte type - тип байта')" onmouseout="hide()">THREE.ByteType</span>
<span class="lnk" onmouseover="show('short type - тип числа в коротком формате')" onmouseout="hide()">THREE.ShortType</span>
<span class="lnk" onmouseover="show('unsigned short type - тип числа в коротком формате без знака')" onmouseout="hide()">THREE.UnsignedShortType</span>
<span class="lnk" onmouseover="show('int(eger) type - целочисленный тип')" onmouseout="hide()">THREE.IntType</span>
<span class="lnk" onmouseover="show('unsigned int(eger) type - целочисленный тип без знака')" onmouseout="hide()">THREE.UnsignedIntType</span>
<span class="lnk" onmouseover="show('float type - тип числа с плавающей запятой')" onmouseout="hide()">THREE.FloatType</span>
<span class="lnk" onmouseover="show('half float type - тип числа с плавающей запятой половинной точности')" onmouseout="hide()">THREE.HalfFloatType</span>
<span class="lnk" onmouseover="show('тип упаковки значений цвета и прозрачности<br>в шестнадцатиразрядное двоичное число<br>по четыре разряда на каждое из значений')" onmouseout="hide()">THREE.UnsignedShort4444Type</span>
<span class="lnk" onmouseover="show('тип упаковки значений цвета и прозрачности<br>в шестнадцатиразрядное двоичное число<br>по пять разрядов на каждое из значений цвета<br>и один разряд для значения прозрачности')" onmouseout="hide()">THREE.UnsignedShort5551Type</span>
<span class="lnk" onmouseover="show('тип упаковки значений цвета в шестнадцатиразрядное<br>двоичное число по пять разрядов на красный и синий<br>цвета и шесть разрядов на зеленый цвет')" onmouseout="hide()">THREE.UnsignedShort565Type</span>
<span class="lnk" onmouseover="show('упаковка значений глубины и трафарета<br>в 32-битное число, 24 бита на значение<br>глубины и 8 бит на значение трафарета')" onmouseout="hide()">THREE.UnsignedInt248Type</span></pre>
Для использования со свойством текстуры <tt><a href="textures.htm#6type" onmouseover="show('Texture.type');" onmouseout="hide()">type</a></tt>, которое должно соответствовать правильному формату.<br>
Значением по умолчанию является <tt><span onclick="showClick(type_const)"><a href="#" onclick="return false" onblur="hideClick()" onmouseover="show('unsigned byte type - тип байта без знака');" onmouseout="hide()">UnsignedByteType</a></span></tt>.<br>
Для типов упакованных данных <tt>THREE.UnsignedShort4444Type</tt>, <tt>THREE.UnsignedShort5551Type</tt> или <tt>THREE.UnsignedShort565Type</tt>, все компоненты цвета одного текселя можно рассматривать как битовые поля внутри целочисленного элемента в формате <tt>Uint16Array</tt>.<br>
Это метод хранения цвета текселя (пикселя текстуры). Описываемые битовые поля связаны с числами, определяющими количество бит каждого канала цвета.<br>
Цифры 4444 в названии типа означают число бит для каждого из каналов цвета и канала прозрачности в формате RGBA - по четыре бита на каждый канал.<br>
<pre> 16-разрядное беззнаковое число
|R|R|R|R|G|G|G|G|B|B|B|B|A|A|A|A|
 красный|зеленый| синий | альфа</pre>
В типе 5551 по пять бит отведено на каждый из каналов цвета и один бит на канал прозрачности (т.е. альфа-канал может быть либо 100%, либо 0% или 1 или 0).<br>
<pre> 16-разрядное беззнаковое число
|R|R|R|R|R|G|G|G|G|G|B|B|B|B|B|A|
| красный | зеленый |  синий  |альфа</pre>
У типа 565 нет альфа-канала, но имеется дополнительный бит в канале зеленого цвета.
<pre> 16-разрядное беззнаковое число
|R|R|R|R|R|G|G|G|G|G|G|B|B|B|B|B|
  красный |  зеленый  |  синий</pre>
Тип <tt>THREE.UnsignedInt248Type</tt> это упаковка значений глубины и трафарета в 32-битное целое число без знака. Цифры 248 означают, что на значение глубины (depth) отводится 24 бита, а на значение трафарета (stencil) - 8 бит.<br><br>

<h4 id="7.6">Форматы</h4>
<pre><span class="lnk" onmouseover="show(type_const+'<br><br>alpha format - формат канала<br>прозрачности (альфа-канала)')" onmouseout="hide()">THREE.AlphaFormat</span>
<span class="lnk" onmouseover="show(type_const+'<br><br>RGB format - формат компонентов<br>цвета RGB')" onmouseout="hide()">THREE.RGBFormat</span>
<span class="lnk" onmouseover="show(type_const+'<br><br>RGBA format - формат компонентов<br>цвета RGB и канала прозрачности<br>(альфа-канала)')" onmouseout="hide()">THREE.RGBAFormat</span>
<span class="lnk" onmouseover="show(type_const+'<br><br>luminance format - формат яркости')" onmouseout="hide()">THREE.LuminanceFormat</span>
<span class="lnk" onmouseover="show(type_const+'<br><br>luminance alpha format - формат<br>яркости и прозрачности (альфа-канал)')" onmouseout="hide()">THREE.LuminanceAlphaFormat</span>
<span class="lnk" onmouseover="show(type_const+'<br><br>RGBE format - формат компонентов<br>цвета RGB (на каждый цвет отводится<br>по одному байту) и канала показателя<br>степени (exponent) - также один байт')" onmouseout="hide()"><a href="https://en.wikipedia.org/wiki/RGBE_image_format" target="_blank">THREE.RGBEFormat</a></span>
<span class="lnk" onmouseover="show(type_const+'<br><br>depth format - формат глубины')" onmouseout="hide()">THREE.DepthFormat</span>
<span class="lnk" onmouseover="show(type_const+'<br><br>depth stencil format - формат<br>глубины и трафарета')" onmouseout="hide()">THREE.DepthStencilFormat</span></pre>
Предназначены для использования со свойством <tt><a href="textures.htm#6format" onmouseover="show('Texture.format');" onmouseout="hide()">format</a></tt>, они определяют как элементы двумерной текстуры (тексели), считываются шейдерами.
<div class=list><tt><span class="lnk" onmouseover="show(type_const+'<br><br>alpha format - формат канала<br>прозрачности (альфа-канала)')" onmouseout="hide()">AlphaFormat</span></tt>
отбрасывает компоненты цвета (red - красный, green - зеленый и blue - синий) и считывает только канал прозрачности (альфа-канал).<br>
Значением свойства текстуры <tt><a href="textures.htm#6type" onmouseover="show('Texture.type')" onmouseout="hide()">type</a></tt> должна быть константа <tt><a href="#7.5" onmouseover="show('unsigned byte type - тип байта без знака')" onmouseout="hide()">UnsignedByteType</a></tt>.</div>
<div class=list><tt><span class="lnk" onmouseover="show(type_const+'<br><br>RGB format - формат компонентов<br>цвета RGB')" onmouseout="hide()">RGBFormat</span></tt>
отбрасывает компонент альфа-канала (канала прозрачности) и считывает компоненты цвета (red - красный, green - зеленый и blue - синий).<br>
Значением свойства текстуры <tt><a href="textures.htm#6type" onmouseover="show('Texture.type')" onmouseout="hide()">type</a></tt> должна быть константа
<tt><a href="#7.5" onmouseover="show('unsigned byte type - тип байта без знака')" onmouseout="hide()">UnsignedByteType</a></tt> или
<tt><a href="#7.5" onmouseover="show('тип упаковки значений цвета в шестнадцатиразрядное<br>двоичное число по пять разрядов на красный и синий<br>цвета и шесть разрядов на зеленый цвет')" onmouseout="hide()">UnsignedShort565Type</a></tt>.</div>
<div class=list><tt><span class="lnk" onmouseover="show(type_const+'<br><br>RGBA format - формат компонентов<br>цвета RGB и канала прозрачности<br>(альфа-канала)')" onmouseout="hide()">RGBAFormat</span></tt>
применяется по умолчанию и считывает компоненты цвета (red - красный, green - зеленый и blue - синий) и значение альфа-канала (канала прозрачности).<br>
Значением свойства текстуры <tt><a href="textures.htm#6type" onmouseover="show('Texture.type')" onmouseout="hide()">type</a></tt> должна быть константа
<tt><a href="#7.5" onmouseover="show('unsigned byte type - тип байта без знака')" onmouseout="hide()">UnsignedByteType</a></tt>,
<tt><a href="#7.5" onmouseover="show('тип упаковки значений цвета и прозрачности<br>в шестнадцатиразрядное двоичное число<br>по четыре разряда на каждое из значений')" onmouseout="hide()">UnsignedShort4444Type</a></tt> или
<tt><a href="#7.5" onmouseover="show('тип упаковки значений цвета и прозрачности<br>в шестнадцатиразрядное двоичное число<br>по пять разрядов на каждое из значений цвета<br>и один разряд для значения прозрачности')" onmouseout="hide()">UnsignedShort5551Type</a></tt>.</div>
<div class=list><tt><span class="lnk" onmouseover="show(type_const+'<br><br>luminance format - формат яркости')" onmouseout="hide()">LuminanceFormat</span></tt> считывает каждый элемент как отдельный компонент яркости.
Далее он преобразуется в число с плавающей запятой, фиксируется в диапазоне от&nbsp;<tt>0</tt> до&nbsp;<tt>1</tt>, затем собирается в элемент RGBA, помещая значение яркости в каналах красного, зеленого и синего цветов и присоединяет&nbsp;<tt>1.0</tt> к альфа-каналу.<br>
Значением свойства текстуры <tt><a href="textures.htm#6type" onmouseover="show('Texture.type')" onmouseout="hide()">type</a></tt> должна быть константа <tt><a href="#7.5" onmouseover="show('unsigned byte type - тип байта без знака')" onmouseout="hide()">UnsignedByteType</a></tt>.</div>
<div class=list><tt><span class="lnk" onmouseover="show(type_const+'<br><br>luminance alpha format - формат<br>яркости и прозрачности (альфа-канал)')" onmouseout="hide()">LuminanceAlphaFormat</span></tt> считывает каждый элемент как пару яркость/прозрачность.
Происходит тот же процесс что и у <tt>THREE.LuminanceFormat</tt>, за исключением того, что альфа-канал может иметь значения отличные от&nbsp;<tt>1.0</tt>.<br>
Значением свойства текстуры <tt><a href="textures.htm#6type" onmouseover="show('Texture.type')" onmouseout="hide()">type</a></tt> должна быть константа <tt><a href="#7.5" onmouseover="show('unsigned byte type - тип байта без знака')" onmouseout="hide()">UnsignedByteType</a></tt>.</div>
<div class=list><tt><span class="lnk" onmouseover="show(type_const+'<br><br>RGBE format - формат компонентов<br>цвета RGB (на каждый цвет отводится<br>по одному байту) и канала показателя<br>степени (exponent) - также один байт')" onmouseout="hide()">RGBEFormat</span></tt>
идентичен с форматом <tt><span class="lnk" onmouseover="show(type_const+'<br><br>RGBA format - формат компонентов<br>цвета RGB и канала прозрачности<br>(альфа-канала)')" onmouseout="hide()">THREE.RGBAFormat</span></tt>.</div>
<div class=list><tt><span class="lnk" onmouseover="show(type_const+'<br><br>depth format - формат глубины')" onmouseout="hide()">DepthFormat</span></tt> считывает каждый элемент как отдельное значение глубины.
Далее оно преобразуется в число с плавающей запятой, фиксируется в диапазоне от&nbsp;<tt>0</tt> до&nbsp;<tt>1</tt>. Эта константа является значением по умолчанию для <a href="textures.htm#5" onmouseover="show('DepthTexture')" onmouseout="hide()">DepthTexture</a>.<br>
Значением свойства текстуры <tt><a href="textures.htm#6type" onmouseover="show('Texture.type')" onmouseout="hide()">type</a></tt> должна быть константа
<tt><a href="#7.5" onmouseover="show('unsigned int(eger) type - целочисленный тип без знака')" onmouseout="hide()">UnsignedIntType</a></tt> или
<tt><a href="#7.5" onmouseover="show('unsigned short type - тип числа в коротком формате без знака')" onmouseout="hide()">UnsignedShortType</a></tt>.</div>
<div class=list><tt><span class="lnk" onmouseover="show(type_const+'<br><br>depth stencil format - формат<br>глубины и трафарета')" onmouseout="hide()">DepthStencilFormat</span></tt> считывает каждый элемент как пару из значений глубины и трафарета.
Компонент глубины этой пары интерпретируется как константа <tt>DepthFormat</tt>.
Компонент трафарета интерпретируется на основе внутреннего формата <tt>depth + stencil</tt>.<br>
Значением свойства текстуры <tt><a href="textures.htm#6type" onmouseover="show('Texture.type')" onmouseout="hide()">type</a></tt> должна быть константа <tt><a href="#7.5" onmouseover="show('упаковка значений глубины и трафарета<br>в 32-битное целое число без знака,<br>24 бита на значение глубины и 8 бит<br>на значение трафарета')" onmouseout="hide()">UnsignedInt248Type</a></tt>.</div>
Обратите внимание, что текстура должна иметь правильный <a href="textures.htm#6type" onmouseover="show('Texture.type')" onmouseout="hide()">тип</a>, как указано выше.
Подробности смотрите <a href="https://developer.mozilla.org/en/docs/Web/API/WebGLRenderingContext/texImage2D" target="_blank">на этой странице</a>.<br><br>

<h4 id="7.7">Форматы сжатия текстур DDS / ST3C Compressed Texture Formats</h4>
<div class=note_trans>S3 Texture Compression – это формат сжатия графических данных с потерями, с фиксированным уровнем сжатия.<a class='link' onclick='javascript:spoiler(this)'>... читать далее</a>
<div style='display:none;'>Его особенности делают этот формат идеальным для сжатия текстур, используемых в 3D-приложениях, рассчитанных на использование графического ускорителя. Интеграция S3TC с Microsoft DirectX 6.0 и OpenGL 1.3 способствовала его широкому распространению. Существует как минимум 5 различных вариантов формата S3TC (от  DXT1 до DXT5).<br>
DXT1 обеспечивает наиболее сильное сжатие. Каждый входной 16-пиксельный блок конвертируется в 64-битный блок, состоящий из двух 16-битных RGB 5:6:5 цветовых значений и 2-х битной таблицы подстановок размером 4x4. Поддержка прозрачности ограничена одним цветом (1-битная прозрачность).<br>
DXT3 конвертирует каждый блок из 16 пикселей в 128 бит, 64 бита приходятся на данные альфа-канала, 64 – на цветовую информацию. DXT3 очень хорошо подходит для изображений или текстур с резкими переходами между прозрачными и непрозрачными областями. Однако если градаций прозрачности нет, а прозрачные участки в изображении имеются, стоит рассмотреть использование DXT1.<br>
DXT5, как и DXT3, конвертирует каждый блок из 16 пикселей в 128 бит, 64 бита приходятся на данные альфа-канала, 64 – на цветовую информацию. Однако, в отличие от DXT3, DXT5 подходит для изображений или текстур с плавными переходами между прозрачными и непрозрачными областями.<br>
Преимущества:
<div class=list>Размер файла значительно меньше аналогичного PNG-файла.</div>
<div class=list>Достойное качество, низкий процент артефактов в виде полосок, связанных с наложением цветов.</div>
<div class=list>Хорошая скорость кодирования и декодирования.</div>
<div class=list>Аппаратное ускорение на множестве GPU. На настольных системах поддерживается практически всеми решениями, постепенно распространяется и на платформе Android.</div>
Недостатки:
<div class=list>Качество ниже, чем у PNG (S3TC – это формат сжатия изображений с потерями информации).</div>
<div class=list>Поддерживается не на всех Android-устройствах.</div></div></div>
<pre><span class="lnk" onmouseover="show(type_const+'<br><br>сжатие компонентов цвета RGB<br>в формате S3TC (вариант DXT1)')" onmouseout="hide()">THREE.RGB_S3TC_DXT1_Format</span>
<span class="lnk" onmouseover="show(type_const+'<br><br>сжатие компонентов цвета RGB и<br>канала прозрачности (альфа-канала)<br>в формате S3TC (вариант DXT1)')" onmouseout="hide()">THREE.RGBA_S3TC_DXT1_Format</span>
<span class="lnk" onmouseover="show(type_const+'<br><br>сжатие компонентов цвета RGB и<br>канала прозрачности (альфа-канала)<br>в формате S3TC (вариант DXT3)')" onmouseout="hide()">THREE.RGBA_S3TC_DXT3_Format</span>
<span class="lnk" onmouseover="show(type_const+'<br><br>сжатие компонентов цвета RGB и<br>канала прозрачности (альфа-канала)<br>в формате S3TC (вариант DXT5)')" onmouseout="hide()">THREE.RGBA_S3TC_DXT5_Format</span></pre>
Предназначены для использования со свойством <tt><a href="textures.htm#6format" onmouseover="show('Texture.format');" onmouseout="hide()">format</a></tt> <a href="textures.htm#2" onmouseover="show('CompressedTexture');" onmouseout="hide()">CompressedTexture</a>, при этом требуется поддержка расширения <a href="https://www.khronos.org/registry/webgl/extensions/WEBGL_compressed_texture_s3tc/" target="_blank">WEBGL_compressed_texture_s3tc</a>.<br>
С поддержкой этого расширения имеется четыре <a href="https://en.wikipedia.org/wiki/S3_Texture_Compression" target="_blank">S3TC</a> формата.
<div class=list><tt><span class="lnk" onmouseover="show(type_const+'<br><br>сжатие компонентов цвета RGB<br>в формате S3TC (вариант DXT1)')" onmouseout="hide()">RGB_S3TC_DXT1_Format</span></tt>
- вариант сжатия изображения DXT1 в формате RGB.</div>
<div class=list><tt><span class="lnk" onmouseover="show(type_const+'<br><br>сжатие компонентов цвета RGB и<br>канала прозрачности (альфа-канала)<br>в формате S3TC (вариант DXT1)')" onmouseout="hide()">RGBA_S3TC_DXT1_Format</span></tt>
- вариант сжатия изображения DXT1 в формате RGB с простейшим (вкл/выкл) значением альфа-канала.</div>
<div class=list><tt><span class="lnk" onmouseover="show(type_const+'<br><br>сжатие компонентов цвета RGB и<br>канала прозрачности (альфа-канала)<br>в формате S3TC (вариант DXT3)')" onmouseout="hide()">RGBA_S3TC_DXT3_Format</span></tt>
- вариант сжатия изображения DXT3 в формате RGBA. По сравнению с 32-битной RGBA текстурой, в этом варианте формата предполагается четырехкратное сжатие.</div>
<div class=list><tt><span class="lnk" onmouseover="show(type_const+'<br><br>сжатие компонентов цвета RGB и<br>канала прозрачности (альфа-канала)<br>в формате S3TC (вариант DXT5)')" onmouseout="hide()">RGBA_S3TC_DXT5_Format</span></tt>
- вариант сжатия изображения DXT5 в формате RGBA. Данный вариант формата также предполагает четырехкратное сжатие, но от варианта DXT3 отличается способом сжатия альфа-канала.</div><br>

<h4 id="7.8">Форматы сжатия текстур PVRTC (PowerVR Texture Compression)</h4>
<div class=note_trans>PowerVR Texture Compression – это формат компрессии графических данных с потерями, с фиксированным уровнем сжатия,<a class='link' onclick='javascript:spoiler(this)'>... читать далее</a>
<div style='display:none;'>который используется, преимущественно, в устройствах Imagination Technology PowerVR MBX, SGX и Rogue. Он применяется в качестве стандартного метода сжатия изображений в iPhone, iPod, iPad.<br>
В отличие от ETC и S3TC, алгоритм PVRTC не работает с фиксированными блоками пикселей. В нём используется билинейное увеличение и смешивание с низкой точностью двух изображений низкого разрешения. В дополнение к уникальному процессу сжатия, PVRTC поддерживает формат RGBA (с прозрачностью) и для варианта 2-bpp (2 бита на пиксель), и для варианта 4-bpp (4 бита на пиксель).
Преимущества:
<div class=list>Поддержка альфа-каналов.</div>
<div class=list>Поддержка RGBA для варианта 2-bpp (2 бита на пиксель) и для варианта 4-bpp (4 бита на пиксель).</div>
<div class=list>Размер файлов намного меньше, чем у PNG.</div>
<div class=list>Поддержка аппаратного ускорения на GPU PoverVR.</div>
Недостатки:
<div class=list>Качество не так высоко, как при использовании PNG (PVRTC – это формат сжатия изображений с потерями).</div>
<div class=list>PVRTC поддерживается только на аппаратном обеспечении PoverVR.</div>
<div class=list>Обеспечивается поддержка квадратных POT-текстур, то есть текстур, ширина и высота которых являются степенью числа 2, хотя в некоторых случаях имеется поддержка прямоугольных текстур.</div>
<div class=list>Сжатие текстур в этот формат может быть медленным.</div></div></div>
<pre><span class="lnk" onmouseover="show(type_const+'<br><br>сжатие компонентов цвета RGB в формате PVRTC,<br>в 4-битном режиме')" onmouseout="hide()">THREE.RGB_PVRTC_4BPPV1_Format</span>
<span class="lnk" onmouseover="show(type_const+'<br><br>сжатие компонентов цвета RGB в формате PVRTC,<br>в 2-битном режиме')" onmouseout="hide()">THREE.RGB_PVRTC_2BPPV1_Format</span>
<span class="lnk" onmouseover="show(type_const+'<br><br>сжатие компонентов цвета RGB и<br>канала прозрачности (альфа-канала)<br>в формате PVRTC, в 4-битном режиме')" onmouseout="hide()">THREE.RGBA_PVRTC_4BPPV1_Format</span>
<span class="lnk" onmouseover="show(type_const+'<br><br>сжатие компонентов цвета RGB и<br>канала прозрачности (альфа-канала)<br>в формате PVRTC, в 2-битном режиме')" onmouseout="hide()">THREE.RGBA_PVRTC_2BPPV1_Format</span></pre>
Предназначены для использования со свойством <tt><a href="textures.htm#6format" onmouseover="show('Texture.format');" onmouseout="hide()">format</a></tt> <a href="textures.htm#2" onmouseover="show('CompressedTexture');" onmouseout="hide()">CompressedTexture</a>, при этом требуется поддержка расширения <a href="https://www.khronos.org/registry/webgl/extensions/WEBGL_compressed_texture_pvrtc/" target="_blank">WEBGL_compressed_texture_pvrtc</a>.<br>
Формат сжатия PVRTC обычно доступен только на мобильных устройствах с наборами микросхем PowerVR, в основном это устройства Apple.<br>
С поддержкой этого расширения имеется четыре <a href="https://en.wikipedia.org/wiki/PVRTC" target="_blank">PVRTC</a> формата.
<div class=list><tt><span class="lnk" onmouseover="show(type_const+'<br><br>сжатие компонентов цвета RGB в формате PVRTC,<br>в 4-битном режиме')" onmouseout="hide()">RGB_PVRTC_4BPPV1_Format</span></tt> - сжатие компонентов цвета RGB в 4-битном режиме. Один блок на каждые <tt>4&#215;4</tt> пикселей.</div>
<div class=list><tt><span class="lnk" onmouseover="show(type_const+'<br><br>сжатие компонентов цвета RGB в формате PVRTC,<br>в 2-битном режиме')" onmouseout="hide()">RGB_PVRTC_2BPPV1_Format</span></tt> - сжатие компонентов цвета RGB в 2-битном режиме. Один блок на каждые <tt>8&#215;4</tt> пикселей.</div>
<div class=list><tt><span class="lnk" onmouseover="show(type_const+'<br><br>сжатие компонентов цвета RGB и<br>канала прозрачности (альфа-канала)<br>в формате PVRTC, в 4-битном режиме')" onmouseout="hide()">RGBA_PVRTC_4BPPV1_Format</span></tt> - сжатие компонентов цвета RGB и канала прозрачности (альфа-канала) в 4-битном режиме. Один блок на каждые <tt>4&#215;4</tt> пикселей.</div>
<div class=list><tt><span class="lnk" onmouseover="show(type_const+'<br><br>сжатие компонентов цвета RGB и<br>канала прозрачности (альфа-канала)<br>в формате PVRTC, в 2-битном режиме')" onmouseout="hide()">RGBA_PVRTC_2BPPV1_Format</span></tt> сжатие компонентов цвета RGB и канала прозрачности (альфа-канала) в 2-битном режиме. Один блок на каждые <tt>8&#215;4</tt> пикселей.</div><br>

<h4 id="7.9">Формат сжатия текстур ETC</h4>
<div class=note_trans>ETC - сокращение от Ericsson Texture Compression<a class='link' onclick='javascript:spoiler(this)'>... читать далее</a>
<div style='display:none;'> – это формат сжатия текстур, который оперирует блоками пикселей размером 4x4. Изначально Khronos использовал ETC как стандартный формат для Open GL ES 2.0 (эта версия ещё называется ETC1).
В результате этот формат доступен практически на всех Android-устройствах. С выходом OpenGL ES 3.0 в качестве нового стандарта использован формат ETC2 – переработанная версия ETC1.
Основное различие между этими двумя стандартами заключается в алгоритме, который оперирует пиксельными группами. Улучшения в алгоритме привели к более высокой точности вывода мелких деталей изображений.
Как результат, качество изображений улучшилось, а размер файлов – нет.<br>
ETC1 и ETC2 поддерживают сжатие 24-битных RGB-данных, но они не поддерживают сжатие изображений с альфа-каналом.</div></div>
<pre><span class="lnk" onmouseover="show(type_const+'<br><br>RGB_ETC1_Format - формат ETC1 (сжатия компонентов цвета) RGB')" onmouseout="hide()">THREE.RGB_ETC1_Format</span></pre>
Предназначена для использования со свойством <tt><a href="textures.htm#6format" onmouseover="show('Texture.format');" onmouseout="hide()">format</a></tt> <a href="textures.htm#2" onmouseover="show('CompressedTexture');" onmouseout="hide()">CompressedTexture</a>, при этом требуется поддержка расширения <a href="https://www.khronos.org/registry/webgl/extensions/WEBGL_compressed_texture_etc1/" target="_blank">WEBGL_compressed_texture_etc1</a>.<br><br>

<h4 id="7.10">Кодирование</h4>
<pre><span class="lnk" onmouseover="show(type_const+'<br><br>linear encoding - линейное кодирование')" onmouseout="hide()">LinearEncoding</span>
<span class="lnk" onmouseover="show(type_const+'<br><br>sRGB encoding - кодирование sRGB')" onmouseout="hide()">THREE.sRGBEncoding</span>
<span class="lnk" onmouseover="show(type_const+'<br><br>gamma encoding - гамма-кодирование')" onmouseout="hide()">THREE.GammaEncoding</span>
<span class="lnk" onmouseover="show(type_const+'<br><br>RGBE encoding - кодирование RGBE')" onmouseout="hide()">THREE.RGBEEncoding</span>
<span class="lnk" onmouseover="show(type_const+'<br><br>RGBM7 encoding - кодировка RGBM7')" onmouseout="hide()">THREE.LogLuvEncoding</span>
<span class="lnk" onmouseover="show(type_const+'<br><br>')" onmouseout="hide()">THREE.RGBM7Encoding</span>
<span class="lnk" onmouseover="show(type_const+'<br><br>RGBM16 encoding - кодировка RGBM16')" onmouseout="hide()">THREE.RGBM16Encoding</span>
<span class="lnk" onmouseover="show(type_const+'<br><br>RGBD encoding - кодировка RGBD')" onmouseout="hide()">THREE.RGBDEncoding</span>
<span class="lnk" onmouseover="show(type_const+'<br><br>basic depth packing -<br>базовая упаковка глубины')" onmouseout="hide()">THREE.BasicDepthPacking</span>
<span class="lnk" onmouseover="show(type_const+'<br><br>RGBA depth packing -<br>упаковка глубины компонентов<br>цвета RGB и прозрачности A')" onmouseout="hide()">THREE.RGBADepthPacking</span></pre>
Для использования со свойством текстуры <tt><a href="textures.htm#6encoding" onmouseover="show('Texture.encoding');" onmouseout="hide()">encoding</a></tt>.<br>
Если тип кодирования изменяется после того, как текстура уже была использована материалом,
нужно установить свойство <tt><a href="materials.htm#3needsUpdate" onmouseover="show('Material.needsUpdate')" onmouseout="hide()">Material.needsUpdate</a></tt> как <tt>true</tt>, чтобы пересобрать (перекомпилировать) материал.<br>
Значением по умолчанию является <span class="lnk" onmouseover="show(type_const+'<br><br>linear encoding - линейное кодирование')" onmouseout="hide()">LinearEncoding</span>.
Значения, отличные от данных, действительны только для свойств материала <tt>map</tt>, <tt>envMap</tt> и <tt>emissiveMap</tt>.<br><br>

<h4>Исходники</h4>
<div class=blockindent><a href="https://github.com/mrdoob/three.js/blob/master/src/constants.js" target="_blank">constants.js на github.com</a></div><br>

<br><br>
</body></html>
