<!DOCTYPE html PUBLIC "-//W3C//DTD HTML 4.01 Transitional//EN">
<html><head>
<title>Константы</title>
<meta http-equiv="content-type" content="text/html; charset=utf-8">
<link rel="stylesheet" type="text/css" href="../1.css">
<script type="text/javascript" src="../1.js"></script>
</head>
<body>

<h3>Константы режима рисования</h3>
Это действующие значения для свойства <a href="../objects/mesh.htm#drawMode" onmouseover="show('Mesh.drawMode');" onmouseout="hide()">Mesh.drawMode</a>, и управляют тем, как список вершин будет интерпретирован после отправки в графический процессор (GPU).<br>
Обратите внимание, что это все работает только когда <a href="../objects/mesh.htm#geometry" onmouseover="show('Mesh.geometry');" onmouseout="hide()">Mesh.geometry</a> является <a href="../core/bufferGeometry.htm" onmouseover="show('BufferGeometry');" onmouseout="hide()">BufferGeometry</a>.
Изменение констант, когда <a href="../objects/mesh.htm#geometry" onmouseover="show('Mesh.geometry');" onmouseout="hide()">Mesh.geometry</a> является <a href="../core/geometry.htm" onmouseover="show('Geometry');" onmouseout="hide()">Geometry</a>, не окажет никакого влияния.<br><br>

<h4 id="drawModes">Режимы рисования (draw modes)</h4>
<pre><span class="lnk" onmouseover="show('triangles draw mode - режим рисования треугольников');" onmouseout="hide()">THREE.TrianglesDrawMode</span></pre>
<div class=blockindent>Этот режим устанавливается по умолчанию и приводит к тому, что каждые три последовательные вершины <tt>(v0, v1, v2)</tt>, <tt>(v2, v3, v5)</tt>, ... будут интерпретированы как отдельный треугольник.<br>
Если число вершин не кратно&nbsp;<tt>3</tt>, избыточные вершины игнорируются.</div>

<pre><span class="lnk" onmouseover="show('triangle strip draw mode - режим рисования ленты треугольников');" onmouseout="hide()">THREE.TriangleStripDrawMode</span></pre>
<div class=blockindent>Этот режим приведет к последовательности треугольников, соединенных в ленту, представленную как <tt>(v0, v1, v2)</tt>, <tt>(v2, v1, v3)</tt>, <tt>(v2, v3, v4)</tt>, ... так что каждый предыдущий треугольник имеет две общие вершины с предыдущим треугольником.</div>

<pre><span class="lnk" onmouseover="show('triangle fan draw mode - режим рисования треугольников как лопасти у вентилятора');" onmouseout="hide()">THREE.TriangleFanDrawMode</span></pre>
<div class=blockindent>В результате этого режима появятся последовательности треугольников, в каждом из которых имеется одна общая вершина (подобно лопастям вентилятора - fan), представленные как <tt>(v0, v1, v2)</tt>, <tt>(v0, v2, v3)</tt>, <tt>(v0, v3, v4)</tt>, и т.д.
<div class=note><b>Примечание:</b> Этот режим не поддерживается <a href="https://en.wikipedia.org/wiki/DirectX#DirectX_10" target="_blank">DirectX10</a>. (Вот <a href="https://ru.wikipedia.org/wiki/DirectX" target="_blank">DirectX10 на русском языке</a>.)
Браузеры Chrome и Firefox представляют WebGL на Windows при помощи <a href="https://en.wikipedia.org/wiki/ANGLE_(software)" target="_blank">ANGLE</a>, преобразовывая внутри себя этот режим в поддерживаемый, что, скорее всего приведет к снижению производительности этих браузеров.
<div class=note_trans><b>Примечание переводчика:</b> ANGLE (Almost Native Graphics Layer Engine - практически встроенный движок графического слоя, а перевод самой аббревиатуры ANGLE - угол) это графический движок слоя абстракций, разработанный компанией Google, с открытым исходным кодом под лицензией BSD.
Этот API в основном предназначен для обеспечения высокопроизводительной совместимости OpenGL с компьютерами Windows и веб-браузерами вроде Chromium, путем перевода вызовов OpenGL в Direct3D, который гораздо лучше поддерживается драйверами. Для ANGLE существует два внутренних визуализатора: самый старый использует Direct3D 9.0c, в то время как новый использует Direct3D 11.<br><br>
<span style='float:right; margin-top:-16px; background-color:#ffffe8;'><i>из вышеприведенной статьи англ. Википедии, перевод мой.</i></span></div></div></div>

<h4>Применение</h4>
<pre>var geometry = new THREE.Geometry();<br>
geometry.vertices.push(
	new THREE.Vector3( -10,  10, 0 ),
	new THREE.Vector3( -10, -10, 0 ),
	new THREE.Vector3(  10, -10, 0 ),
	...
);
geometry.faces.push( new THREE.Face3( 0, 1, 2 ), ... );<br>
var material = new THREE.MeshBasicMaterial( { color: 0xffff00 } );<br>
var mesh = new THREE.Mesh( geometry, material );
mesh.drawMode = THREE.TrianglesDrawMode; // default (по умолчанию)<br>
scene.add( mesh );</pre><br>
<h4>Исходники</h4>
<div class=blockindent><a href="https://github.com/mrdoob/three.js/blob/master/src/constants.js" target="_blank">constants.js на github.com</a></div><br>

<br><br>
</body></html>