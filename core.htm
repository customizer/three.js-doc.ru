<!DOCTYPE html PUBLIC "-//W3C//DTD HTML 4.01 Transitional//EN">
<html><head>
<title>Three.js</title>
<meta http-equiv="content-type" content="text/html; charset=utf-8">
<link rel="stylesheet" type="text/css" href="1.css">
<script type="text/javascript" src="1.js"></script>
</head>
<body>
<h2 class=head1>Основные элементы <code>three.js</code></h2>
<div class=below>В этом разделе описаны основные классы библиотеки <em>three.js</em>.
<div class=list><a href="#1">BufferAttribute</a></div>
<div class=list><a href="#2">BufferGeometry</a></div>
<div class=list><a href="#3">Clock</a> - класс для отслеживания времени.</div>
<div class=list><a href="#4">DirectGeometry</a> - данный класс используется внутри <em>three.js</em> для конвертирования из <a href="#7">Geometry</a> в <a href="#2">BufferGeometry</a>.</div>
<div class=list><a href="#5">EventDispatcher</a> - диспетчер событий, класс для управления (отслеживания и запуска) событиями JavaScript.</div>
<div class=list><a href="#6">Face3</a> - класс, определяющий параметры треугольной грани - ячейки арматуры, из которых составлена геометрическая фигура.</div>
<div class=list><a href="#7">Geometry</a> - основной класс для всех геометрий кроме BufferGeometry. Также можно использовать напрямую для построения собственных и нестандартных геометрических элементов.</div>
<div class=list><a href="#8">InstancedBufferAttribute</a> - инстанцированная версия <a href="#1">BufferAttribute</a>.</div>
<div class=list><a href="#9">InstancedBufferGeometry</a> - инстанцированная версия <a href="#2">BufferGeometry</a>.</div>
<div class=list><a href="#0">InstancedInterleavedBuffer</a></div>
<div class=list><a href="#11">InterleavedBuffer</a> - буферный массив с чередованием</div>
<div class=list><a href="#12">InterleavedBufferAttribute</a> - массив буферных атрибутов с чередованием</div>
<div class=list><a href="#13">Layers</a> - слои для управления видимостью трехмерных объектов. Можно использовать до 32 слоёв.</div>
<div class=list><a href="#14">Object3D</a> - базовый класс для большинства объектов <em>three.js</em>, предоставляющий набор свойств и методов для управления объектами в трехмерном пространстве.</div>
<div class=list><a href="#15">Raycaster</a> - класс предназначен для оказания помощи с <a href="https://ru.wikipedia.org/wiki/Ray_casting" target="_blank">рейкастингом</a>.</div>
<div class=list><a href="#16">Uniform</a></div></div><br>

<h3 id="1">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; BufferAttribute</h3>
Данный класс сохраняет данные атрибута (такие как положения вершин, индексы граней, нормали, цвета, текстурные координаты
(<a href="https://ru.wikipedia.org/wiki/UV-%D0%BF%D1%80%D0%B5%D0%BE%D0%B1%D1%80%D0%B0%D0%B7%D0%BE%D0%B2%D0%B0%D0%BD%D0%B8%D0%B5" target="_blank" onmouseover="show('соответствие между координатами на поверхности трёхмерного<br>объекта (X, Y, Z) и координатами на текстуре (U, V - эти буквы<br>обозначают оси двумерной текстуры, потому что «X», «Y» и «Z»<br>уже используются для обозначения осей 3D-объекта в пространстве<br>модели). Значения U и V обычно изменяются от 0 до 1.')" onmouseout="hide()">UV</a>)
и все атрибуты, установленные пользователем), связанного с <tt><a href="#2" onmouseover="show('BufferGeometry')" onmouseout="hide()">BufferGeometry</a></tt>, который позволяет более эффективное прохождение всех этих данных к <span class="lnk" onmouseover="show('сокращение от англ. слов graphics processing unit -<br>блок графических вычислений или графический процессор<br>или попросту - процессор видеокарты')" onmouseout="hide()">GPU</span>.
Посмотрите <a href="#2" onmouseover="show('BufferGeometry')" onmouseout="hide()">эту страницу</a> для дополнительных сведений и примеров использования.<br><br>
Данные хранятся как векторы произвольной длины (определяемые <tt><a href="#1itemSize" onmouseover="show('BufferAttribute.itemSize')" onmouseout="hide()">itemSize</a></tt>), и вообще в методах, описанных ниже, если передаются с индексом, то он автоматически умножается на длину вектора.<br><br>
<h4 id="constructor1">Конструктор</h4>
<pre>BufferAttribute( <span onclick="showClick(type_typearray)"><a href="#" onclick="return false" onblur="hideClick()" onmouseover="show('array - массив')" onmouseout="hide()">array</a></span>, <span onclick="showClick(type_int)"><a href="#" onclick="return false" onblur="hideClick()" onmouseover="show('от англ. слов item size - размер элемента')" onmouseout="hide()">itemSize</a></span>, <span onclick="showClick(type_bool)"><a href="#" onclick="return false" onblur="hideClick()" onmouseover="show('от англ. слова normalized - нормализованный,<br>нормированный, т.е. приведенный к какой-то норме')" onmouseout="hide()">normalized</a></span> )</pre>
<div class=list><tt><span onclick="showClick(type_typearray)"><a href="#" onclick="return false" onblur="hideClick()" onmouseover="show('от англ. слова array - массив')" onmouseout="hide()">array</a></span></tt> -- должен быть TypedArray (<a href="https://developer.mozilla.org/ru/docs/Web/JavaScript/Typed_arrays" target="_blank">типизированным массивом</a>).
Используется для создания экземпляра буфера.<br>
В этом массиве должно быть (<tt>itemSize</tt>&nbsp;*&nbsp;<tt>numVertices</tt>) элементов, где <tt>numVertices</tt> - это число вершин в соответствующей <a href="#2">BufferGeometry</a>.</div>
<div class=list><tt><span onclick="showClick(type_int)"><a href="#" onclick="return false" onblur="hideClick()" onmouseover="show('от англ. слов item size - размер элемента')" onmouseout="hide()">itemSize</a></span></tt> -- число значений массива, связанного с конкретной вершиной.
Например, если данный атрибут хранит 3-компонентный вектор (такой как <tt>position</tt> - положение, <tt>normal</tt> - нормаль, или <tt>color</tt> - цвет), тогда <tt>itemSize</tt> должен быть равен 3.</div>
<div class=list><tt><span onclick="showClick(type_bool)"><a href="#" onclick="return false" onblur="hideClick()" onmouseover="show('от англ. слова normalized - нормализованный,<br>нормированный, т.е. приведенный к какой-то норме')" onmouseout="hide()">normalized</a></span></tt>
-- (дополнительный, необязательный атрибут) - показывает как базовые данные в буфере сопоставлены со значениями в коде
<span class="lnk" onmouseover="show('сокращение от англ. слов OpenGL Shading Language — язык высокого уровня<br>для программирования шейдеров. Синтаксис языка базируется на языке<br>программирования ANSI C, однако, из-за его специфической направленности,<br>из него были исключены многие возможности, для упрощения языка и повышения<br>производительности. В язык включены дополнительные функции и типы данных,<br>например для работы с векторами и матрицами. Основное преимущество GLSL<br>перед другими шейдерными языками — переносимость кода между<br>платформами и ОС.')" onmouseout="hide()">GLSL</span>.
Например, если массив является экземпляром <tt>UInt16Array</tt>, а атрибут <tt>normalized</tt> установлен как <tt>true</tt>, то значения от <tt>0</tt>&nbsp;до&nbsp;<tt>+65535</tt> в данных массива будут отображены в атрибуте GLSL как значения от <tt>0.0f</tt>&nbsp;до&nbsp;<tt>+1.0f</tt>.
Массив <tt>Int16Array</tt> (со знаком) от <tt>-32767</tt>&nbsp;до&nbsp;<tt>+32767</tt> будет сопоставлен как <tt>-1.0f</tt>&nbsp;-&nbsp;<tt>+1.0f</tt>.
Если <tt>normalized</tt> установлен как <tt>false</tt> значения будут конвертированы в числа с плавающей запятой, которые содержат точное значение, т.е. <tt>32767</tt> станет <tt>32767.0f</tt>.</div><br>

<h4>Свойства</h4>
<div class=blockindent><br>
<pre id="1array"><span onclick="showClick(type_typearray)"><a href="#" onclick="return false" onblur="hideClick()" onmouseover="show('от англ. слова array - массив')" onmouseout="hide()">.array</a></span></pre>
Массив удерживает данные, хранящиеся в буфере.<br><br>
<pre id="1count"><span onclick="showClick(type_int)"><a href="#" onclick="return false" onblur="hideClick()" onmouseover="show('от англ. слова count - счет, подсчет')" onmouseout="hide()">.count</a></span></pre>
Хранит длину массива деленную на <tt><a href="#itemSize" onmouseover="show('BufferAttribute.itemSize')" onmouseout="hide()">.itemSize</a></tt>.<br>
Если буфер хранит 3-компонентный вектор (как например положение, нормали или цвет), то в этом случае будет подсчитано число таких хранящихся векторов.<br><br>
<pre id="1dynamic"><span onclick="showClick(type_bool)"><a href="#" onclick="return false" onblur="hideClick()" onmouseover="show('от англ. слова dynamic - динамический')" onmouseout="hide()">.dynamic</a></span></pre>
Определяет, будет ли буфер динамическим или нет. Значение по умолчанию равно <tt>false</tt>.<br>
При установленном значении <tt>false</tt>, GPU сообщается, что скорее всего, содержимое буфера, будет часто использоваться, но не часто изменяться. Это соответствует флагу <tt><a href="https://developer.mozilla.org/en-US/docs/Web/API/WebGLRenderingContext/bufferData" target="_blank">gl.STATIC_DRAW</a></tt>.
Если же установлено значение <tt>true</tt>, GPU сообщается, что содержимое буфера, вероятно будет как часто использоваться, так и часто изменяться. Это соответствует флагу <tt><a href="https://developer.mozilla.org/en-US/docs/Web/API/WebGLRenderingContext/bufferData" target="_blank">gl.DYNAMIC_DRAW</a></tt>.
<div class=note_trans><b>Примечание переводчика:</b> перевод части статьи по ссылке выше<br>
<tt>gl.STATIC_DRAW</tt>: содержимое буфера, возможно, будет часто использоваться, но не часто изменяться. Содержимое записывается в буфер, но не считывается.<br>
<tt>gl.DYNAMIC_DRAW</tt>: содержимое буфера, возможно, будет часто использоваться и часто изменяться. Содержимое записывается в буфер, но не считывается.</div><br>

<pre id="1isBufferAttribute"><span onclick="showClick(type_bool)"><a href="#" onclick="return false" onblur="hideClick()" onmouseover="show('от англ. слов is buffer attribute - является буферным атрибутом')" onmouseout="hide()">.isBufferAttribute</a></span></pre>
Используется для проверки является ли данный класс или производные от него <tt>BufferAttribute</tt>. Значение по умолчанию равно <tt>true</tt>.<br>
Не изменяйте это свойство, так как оно используется для оптимизации внутри <em>three.js</em>.<br><br>
<pre id="1itemSize"><span onclick="showClick(type_int)"><a href="#" onclick="return false" onblur="hideClick()" onmouseover="show('от англ. слов item size - размер элемента')" onmouseout="hide()">.itemSize</a></span></pre>
Длина векторов, сохраняемых в <tt><a href="#array" onmouseover="show('BufferAttribute.array')" onmouseout="hide()">array</a></tt>.<br><br>
<pre id="1name"><span onclick="showClick(type_string)"><a href="#" onclick="return false" onblur="hideClick()" onmouseover="show('name - имя, название')" onmouseout="hide()">.name</a></span></pre>
Дополнительное имя для экземпляра данного атрибута. По умолчанию это пустая строка.<br><br>
<pre id="1needsUpdate"><span onclick="showClick(type_bool)"><a href="#" onclick="return false" onblur="hideClick()" onmouseover="show('от англ. слов needs update - требуется обновление')" onmouseout="hide()">.needsUpdate</a></span></pre>
Флаг, показывающий что данный атрибут был изменен и должен быть повторно отправлен в графический процессор (GPU). Установите его как <tt>true</tt> при изменении значения массива.<br>
Установка этого значения как <tt>true</tt> также увеличивает <tt><a href="#version" onmouseover="show('BufferAttribute.version')" onmouseout="hide()">version</a></tt>.<br><br>
<pre id="1normalized"><span onclick="showClick(type_bool)"><a href="#" onclick="return false" onblur="hideClick()" onmouseover="show('от англ. слова normalized - нормализованный, нормированный, т.е. приведенный к какой-то норме')" onmouseout="hide()">.normalized</a></span></pre>
Указывает каким образом базовые данные в буфере соответствуют значениям в коде GLSL. Подробности смотрите выше, в <a href="#constructor1">описании конструктора</a>.<br><br>
<pre id="1onUploadCallback"><span onclick="showClick(type_func)"><a href="#" onclick="return false" onblur="hideClick()" onmouseover="show('от англ. слов on upload callback - на загрузку функции обратного вызова')" onmouseout="hide()">.onUploadCallback</a></span></pre>
Функция обратного вызова, выполняемая после того, как визуализатор (renderer) передал данные массива атрибутов в GPU.<br><br>
<pre id="1updateRange"><span onclick="showClick(type_obj)"><a href="#" onclick="return false" onblur="hideClick()" onmouseover="show('от англ. слов update range - диапазон обновления')" onmouseout="hide()">.updateRange</a></span></pre>
Объект содержит:
<div class=list><tt><span onclick="showClick(type_int)"><a href="#" onclick="return false" onblur="hideClick()" onmouseover="show('от англ. слова offset - смещение')" onmouseout="hide()">offset</a></span></tt>: позиция, с которой начинается обновление, значение по умолчанию равно <tt>0</tt>.</div>
<div class=list><tt><span onclick="showClick(type_int)"><a href="#" onclick="return false" onblur="hideClick()" onmouseover="show('от англ. слова count - счет, подсчет')" onmouseout="hide()">count</a></span></tt>: значение по умолчанию равно <tt>-1</tt>, что означает не использовать диапазон обновления.</div>
Данное свойство может быть использовано для отдельного обновления некоторых компонентов хранящихся векторов (например, только для компонента относящегося к цвету).<br><br>
<pre id="1uuid"><span onclick="showClick(type_string)"><a href="#" onclick="return false" onblur="hideClick()" onmouseover="show('сокращение от англ. слов Universally Unique Identifier<br>- универсальный уникальный идентификатор')" onmouseout="hide()">.uuid</a></span></pre>
<a href="https://ru.wikipedia.org/wiki/UUID" target="_blank" onmouseover="show('сокращение от англ. слов Universally Unique Identifier<br>- универсальный уникальный идентификатор')" onmouseout="hide()">UUID</a> данного экземпляра объекта. Он присваивается автоматически и не должен редактироваться.<br><br>
<pre id="1version"><span onclick="showClick(type_int)"><a href="#" onclick="return false" onblur="hideClick()" onmouseover="show('от англ. слова version - версия, вариант')" onmouseout="hide()">.version</a></span></pre>
Номер версии, увеличивающийся каждый раз, когда свойство <tt><a href="#needsUpdate" onmouseover="show('BufferAttribute.needsUpdate')" onmouseout="hide()">needsUpdate</a></tt> устанавливается как <tt>true</tt>.</div><br>

<h4>Методы</h4>
<div class=blockindent><br>
<pre id="1clone"><a href="#1" onmouseover="show('от англ. слова clone - клон, двойник')" onmouseout="hide()">.clone( )</a></pre>
Возвращает копию данного <tt>bufferAttribute</tt>.<br><br>
<pre id="1copyArray"><a href="#1" onmouseover="show('от англ. слова copy array - копировать массив')" onmouseout="hide()">.copyArray</a>( array )</pre>
Копирует, заданный здесь, массив (который может быть обычным массивом или типизированным - TypedArray) в массив <tt><a href="#array" onmouseover="show('BufferAttribute.array')" onmouseout="hide()">array</a></tt>.
Если копируется <a href="https://developer.mozilla.org/ru/docs/Web/JavaScript/Typed_arrays" target="_blank">типизированный массив</a> (TypedArray),
ознакомьтесь на <a href="https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/TypedArray/set" target="_blank">TypedArray.set</a> с примечаниями по требованиям.
<a href="https://developer.mozilla.org/ru/docs/Web/JavaScript/Reference/Global_Objects/TypedArray/set" target="_blank">Вот TypedArray.set</a> на русском языке.<br><br>
<pre id="1copyAt"><span onclick="showClick(type_null)"><a href="#" onclick="return false" onblur="hideClick()" onmouseover="show('от англ. слов copy at - копировать в')" onmouseout="hide()">.copyAt</a></span>( <span onclick="showClick(type_int)"><a href="#" onclick="return false" onblur="hideClick()" onmouseover="show('index - индекс, указатель')" onmouseout="hide()">index1</a></span>, <a href="#1" onmouseover="show('BufferAttribute')" onmouseout="hide()">bufferAttribute</a>, <span onclick="showClick(type_int)"><a href="#" onclick="return false" onblur="hideClick()" onmouseover="show('index - индекс, указатель')" onmouseout="hide()">index2</a></span> )</pre>
Копирует вектор из <tt>bufferAttribute[index2]</tt> в <tt><a href="#array" onmouseover="show('BufferAttribute.array')" onmouseout="hide()">array</a>[index1]</tt>.<br><br>
<pre id="1copyColorsArray"><a href="#1" onmouseover="show('BufferAttribute.<br>copy colors array - копировать массив (значений) цвета')" onmouseout="hide()">.copyColorsArray</a>( colors )</pre>
Копирует массив, представленный значениями цвета в формате RGB, в <tt><a href="#array" onmouseover="show('BufferAttribute.array')" onmouseout="hide()">array</a></tt>.<br><br>
<pre id="1copyIndicesArray"><a href="#1" onmouseover="show('BufferAttribute.<br>copy indices array - копировать массив индексов')" onmouseout="hide()">.copyIndicesArray</a>( indices )</pre>
Копирует массив, представленный индексами <a href="#6" onmouseover="show('Face3')" onmouseout="hide()">Face3</a>, в <tt><a href="#array" onmouseover="show('BufferAttribute.array')" onmouseout="hide()">array</a></tt>.<br><br>
<pre id="1copyVector2sArray"><a href="#1" onmouseover="show('BufferAttribute.<br>copy vector2s array - копировать массив двумерных векторов')" onmouseout="hide()">.copyVector2sArray</a>( vectors )</pre>
Копирует массив, представленный векторами <a href="math.htm#18" onmouseover="show('Vector2')" onmouseout="hide()">Vector2</a>, в <tt><a href="#array" onmouseover="show('BufferAttribute.array')" onmouseout="hide()">array</a></tt>.<br><br>
<pre id="1copyVector3sArray"><a href="#1" onmouseover="show('BufferAttribute.<br>copy vector3s array - копировать массив трехмерных векторов')" onmouseout="hide()">.copyVector3sArray</a>( vectors )</pre>
Копирует массив, представленный векторами <a href="math.htm#19" onmouseover="show('Vector3')" onmouseout="hide()">Vector3</a>, в <tt><a href="#array" onmouseover="show('BufferAttribute.array')" onmouseout="hide()">array</a></tt>.<br><br>
<pre id="1copyVector4sArray"><a href="#1" onmouseover="show('BufferAttribute.<br>copy vector4s array - копировать массив четырехмерных векторов')" onmouseout="hide()">.copyVector4sArray</a>( vectors )</pre>
Копирует массив, представленный векторами <a href="math.htm#20" onmouseover="show('Vector4')" onmouseout="hide()">Vector4</a>, в <tt><a href="#array" onmouseover="show('BufferAttribute.array')" onmouseout="hide()">array</a></tt>.<br><br>
<pre id="1getX"><span onclick="showClick(type_number)"><a href="#" onclick="return false" onblur="hideClick()" onmouseover="show('сокращение от англ. слов get X coordinate<br>- получить координату по оси X')" onmouseout="hide()">.getX</a></span>( index )</pre>
Возвращает компоненту <tt>x</tt> вектора по заданному индексу.<br><br>
<pre id="1getY"><span onclick="showClick(type_number)"><a href="#" onclick="return false" onblur="hideClick()" onmouseover="show('сокращение от англ. слов get Y coordinate<br>- получить координату по оси Y')" onmouseout="hide()">.getY</a></span>( index )</pre>
Возвращает компоненту <tt>y</tt> вектора по заданному индексу.<br><br>
<pre id="1getZ"><span onclick="showClick(type_number)"><a href="#" onclick="return false" onblur="hideClick()" onmouseover="show('сокращение от англ. слов get Z coordinate<br>- получить координату по оси Z')" onmouseout="hide()">.getZ</a></span>( index )</pre>
Возвращает компоненту <tt>z</tt> вектора по заданному индексу.<br><br>
<pre id="1getW"><span onclick="showClick(type_number)"><a href="#" onclick="return false" onblur="hideClick()" onmouseover="show('сокращение от англ. слов get W coordinate<br>- получить компонент W')" onmouseout="hide()">.getW</a></span>( index )</pre>
Возвращает компоненту <tt>w</tt> вектора по заданному индексу.<br><br>

<pre id="1onUpload"><span onclick="showClick(type_null)"><a href="#" onclick="return false" onblur="hideClick()" onmouseover="show('on upload - на загрузку')" onmouseout="hide()">.onUpload</a></span> ( <span onclick="showClick(type_func)"><a href="#" onclick="return false" onblur="hideClick()" onmouseover="show('callback - обратный (повторный) вызов')" onmouseout="hide()">callback</a></span> )</pre>
Устанавливает значение свойства <tt><a href="#onUploadCallback">onUploadCallback</a></tt>.<br>
В примере <tt><a href="https://threejs.org/examples/#webgl_buffergeometry" target="_blank">WebGL / Buffergeometry</a></tt> этот метод используется для высвобождения памяти после того, как буфер был передан GPU.<br><br>

<pre id="1set"><span onclick="showClick(type_null)"><a href="#" onclick="return false" onblur="hideClick()" onmouseover="show('set - установить')" onmouseout="hide()">.set</a></span> ( <span onclick="showClick(type_array)"><a href="#" onclick="return false" onblur="hideClick()" onmouseover="show('value - значение')" onmouseout="hide()">value</a></span>, <span onclick="showClick(type_int)"><a href="#" onclick="return false" onblur="hideClick()" onmouseover="show('offset - смещение')" onmouseout="hide()">offset</a></span> )</pre>
<div class=list><tt><span onclick="showClick(type_array)"><a href="#" onclick="return false" onblur="hideClick()" onmouseover="show('value - значение')" onmouseout="hide()">value</a></span></tt> -- массив или типизированный массив, из которого копируются значения.</div>
<div class=list><tt><span onclick="showClick(type_int)"><a href="#" onclick="return false" onblur="hideClick()" onmouseover="show('offset - смещение')" onmouseout="hide()">offset</a></span></tt>
-- индекс массива <tt><a href="#array" onmouseover="show('BufferAttribute.array')" onmouseout="hide()">array</a></tt>, с которого начинается копирование, (дополнительный, необязательный аргумент).</div>
Метод вызывает метод <tt><a href="https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/TypedArray/set" target="_blank">TypedArray.set</a>( value, offset )</tt> на данный <tt><a href="#1array" onmouseover="show('BufferAttribute.array')" onmouseout="hide()">array</a></tt>.<br>
В частности, посмотрите эту страничку насчет требований к <tt>value</tt> в <tt>TypedArray</tt>. <a href="https://developer.mozilla.org/ru/docs/Web/JavaScript/Reference/Global_Objects/TypedArray/set" target="_blank">Вот здесь</a> она на русском языке.<br><br>

<pre id="1setArray"><span onclick="showClick(type_null)"><a href="#" onclick="return false" onblur="hideClick()" onmouseover="show('set array - установить массив')" onmouseout="hide()">.setArray</a></span>( <span onclick="showClick(type_typearray)"><a href="#" onclick="return false" onblur="hideClick()" onmouseover="show('array - массив')" onmouseout="hide()">array</a></span> )</pre>
Устанавливает массив <tt><a href="#1array" onmouseover="show('BufferAttribute.array')" onmouseout="hide()">array</a></tt> в типизированный массив <tt>TypedArray</tt>, переданный в аргументе.<br>
После установки массива, <tt><a href="#1needsUpdate" onmouseover="show('BufferAttribute.needsUpdate')" onmouseout="hide()">needsUpdate</a></tt> должен быть установлен как <tt>true</tt>.<br><br>

<pre id="1setDynamic">.<a href="#1" onmouseover="show('BufferAttribute.<br>set dynamic - установить (свойство) dynamic')" onmouseout="hide()">setDynamic</a>( <span onclick="showClick(type_bool)"><a href="#" onclick="return false" onblur="hideClick()" onmouseover="show('value - значение')" onmouseout="hide()">value</a></span> )</pre>
Метод устанавливает значение свойства <tt><a href="#1dynamic" onmouseover="show('BufferAttribute.dynamic')" onmouseout="hide()">dynamic</a></tt>.<br><br>
<pre id="1setX"><span onclick="showClick(type_null)"><a href="#" onclick="return false" onblur="hideClick()" onmouseover="show('set X - установить (координату) X')" onmouseout="hide()">.setX</a></span>( index, x )</pre>
Устанавливает компонент <tt>x</tt> вектора по заданному индексу.<br><br>
<pre id="1setY"><span onclick="showClick(type_null)"><a href="#" onclick="return false" onblur="hideClick()" onmouseover="show('set Y - установить (координату) Y')" onmouseout="hide()">.setY</a></span>( index, y )</pre>
Устанавливает компонент <tt>y</tt> вектора по заданному индексу.<br><br>
<pre id="1setZ"><span onclick="showClick(type_null)"><a href="#" onclick="return false" onblur="hideClick()" onmouseover="show('set Z - установить (координату) Z')" onmouseout="hide()">.setZ</a></span>( index, z )</pre>
Устанавливает компонент <tt>z</tt> вектора по заданному индексу.<br><br>
<pre id="1setW"><span onclick="showClick(type_null)"><a href="#" onclick="return false" onblur="hideClick()" onmouseover="show('set W - установить (координату) W')" onmouseout="hide()">.setW</a></span>( index, w )</pre>
Устанавливает компонент <tt>w</tt> вектора по заданному индексу.<br><br>
<pre id="1setXY"><span onclick="showClick(type_null)"><a href="#" onclick="return false" onblur="hideClick()" onmouseover="show('set X Y - установить (координаты) X, Y')" onmouseout="hide()">.setXY</a></span>( index, x, y )</pre>
Устанавливает компоненты вектора <tt>x</tt>, и <tt>y</tt> по заданному индексу.<br><br>
<pre id="1setXYZ"><span onclick="showClick(type_null)"><a href="#" onclick="return false" onblur="hideClick()" onmouseover="show('set X Y Z  - установить (координаты) X, Y, Z')" onmouseout="hide()">.setXYZ</a></span>( index, x, y, z )</pre>
Устанавливает компоненты вектора <tt>x</tt>, <tt>y</tt>, и <tt>z</tt> по заданному индексу.<br><br>
<pre id="1setXYZW"><span onclick="showClick(type_null)"><a href="#" onclick="return false" onblur="hideClick()" onmouseover="show('set X Y Z W - установить (координаты) X, Y, Z, W')" onmouseout="hide()">.setXYZW</a></span>( index, x, y, z, w )</pre>
Устанавливает компоненты вектора <tt>x</tt>, <tt>y</tt>, <tt>z</tt> и <tt>w</tt> по заданному индексу.</div><br>

<h4>Исходники</h4>
<div class=blockindent><a href="https://github.com/mrdoob/three.js/blob/master/src/core/BufferAttribute.js" target="_blank">BufferAttribute.js на github.com</a></div><br><br>


<span class="right_side"><a href="#1" title="Переход к родительскому классу"><tt>BufferAttribute &rarr;</tt></a></span>
<h3 id="1.1">Типы BufferAttribute</h3>
В <em>three.js</em> имеются девять типов BufferAttribute. Они соответствуют <a href="https://developer.mozilla.org/ru/docs/Web/JavaScript/Reference/Global_Objects/TypedArray" target="_blank">типизированным массивам</a> в JavaScript.
<pre><span class="lnk" onmouseover="show('массив 64-битных чисел с плавающей точкой IEEE-стандарта')" onmouseout="hide()">THREE.Float64BufferAttribute</span>
<span class="lnk" onmouseover="show('массив 32-битных чисел с плавающей точкой IEEE-стандарта')" onmouseout="hide()">THREE.Float32BufferAttribute</span>
<span class="lnk" onmouseover="show('массив 32-битных беззнаковых чисел')" onmouseout="hide()">THREE.Uint32BufferAttribute</span>
<span class="lnk" onmouseover="show('массив 32-битных целых чисел')" onmouseout="hide()">THREE.Int32BufferAttribute</span>
<span class="lnk" onmouseover="show('массив 16-битных беззнаковых целых чисел')" onmouseout="hide()">THREE.Uint16BufferAttribute</span>
<span class="lnk" onmouseover="show('массив 16-битных целых чисел с дополнением до двух')" onmouseout="hide()">THREE.Int16BufferAttribute</span>
<span class="lnk" onmouseover="show('массив 8-битных беззнаковых целых чисел (фиксированных от 0 до 255)')" onmouseout="hide()">THREE.Uint8ClampedBufferAttribute</span>
<span class="lnk" onmouseover="show('массив 8-битных беззнаковых целых чисел')" onmouseout="hide()">THREE.Uint8BufferAttribute</span>
<span class="lnk" onmouseover="show('массив 8-битных целых чисел с дополнением до двух')" onmouseout="hide()">THREE.Int8BufferAttribute</span></pre><br>
<h4>Конструктор</h4>
Все вышеперечисленное вызывается одним и тем же способом.
<pre>TypedBufferAttribute( <span onclick="showClick(type_array)"><a href="#" onclick="return false" onblur="hideClick()" onmouseover="show('array - массив')" onmouseout="hide()">array</a></span>, <span onclick="showClick(type_int)"><a href="#" onclick="return false" onblur="hideClick()" onmouseover="show('item size - размер элемента')" onmouseout="hide()">itemSize</a></span> )</pre>
<div class=list><tt>array</tt> -- это может быть типизированный или нетипизированный (обычный) массив. Он будет преобразован в массив указанного типа.</div>
<div class=list><tt>itemSize</tt> -- число значений массива, которые должны быть увязаны с конкретной вершиной.</div><br>
<h4>Свойства</h4><br>
Унаследованные свойства смотрите на странице <a href="#1">BufferAttribute</a>.<br><br>
<h4>Методы</h4><br>
Унаследованные методы смотрите на странице <a href="#1">BufferAttribute</a>.<br><br>

<h4>Исходники</h4>
<div class=blockindent><a href="https://github.com/mrdoob/three.js/blob/master/src/core/BufferAttribute.js" target="_blank">BufferAttribute.js на github.com</a></div><br><br>


<h3 id="2">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; BufferGeometry</h3>
Данный класс является эффективной альтернативой <a href="#7">Geometry</a>, так как он сохраняет внутри буферов все данные, включая положения вершин, индексы граней, нормали, цвета, текстурные координаты
(<a href="https://ru.wikipedia.org/wiki/UV-%D0%BF%D1%80%D0%B5%D0%BE%D0%B1%D1%80%D0%B0%D0%B7%D0%BE%D0%B2%D0%B0%D0%BD%D0%B8%D0%B5" target="_blank" onmouseover="show('соответствие между координатами на поверхности трёхмерного<br>объекта (X, Y, Z) и координатами на текстуре (U, V - эти буквы<br>обозначают оси двумерной текстуры, потому что «X», «Y» и «Z»<br>уже используются для обозначения осей 3D-объекта в пространстве<br>модели). Значения U и V обычно изменяются от 0 до 1.')" onmouseout="hide()">UV</a>)
и все атрибуты, установленные пользователем); это снижает затраты на прохождение всех этих данных к <span class="lnk" onmouseover="show('сокращение от англ. слов graphics processing unit -<br>блок графических вычислений или графический процессор<br>или попросту - процессор видеокарты')" onmouseout="hide()">GPU</span>.
При этом, работать с <tt>BufferGeometry</tt> сложнее, чем с <tt><a href="#7">Geometry</a></tt>;
вместо того, чтобы обращаться к данным расположения как к объектам <tt><a href="math.htm#19">Vector3</a></tt>, а к данным о цвете как к объектам <tt><a href="math.htm#3">Color</a></tt> и так далее, нужно обращаться к необработанным данным (raw data) из соответствующего <a href="#1">буфера атрибутов</a>.
Это делает <tt>BufferGeometry</tt> наиболее подходящим для статических объектов, где вам не нужно управлять геометрическими свойствами объекта после его создания.<br><br>

<h4>Пример</h4>
<img src="img/square.png" width="400"><br>
<pre>var geometry = new THREE.BufferGeometry();
// create a simple square shape. We duplicate the bottom left and top right
// vertices because each vertex needs to appear once per triangle.
// создадим простую форму - квадрат. Нижняя левая и верхняя правая вершины
// повторяются, поскольку в обоих треугольниках есть каждая из этих вершин.
var vertices = new Float32Array( [
-1.0, -1.0,  1.0,
 1.0, -1.0,  1.0,
 1.0,  1.0,  1.0,<br>
 1.0,  1.0,  1.0,
-1.0,  1.0,  1.0,
-1.0, -1.0,  1.0
] );<br>
// itemSize = 3 because there are 3 values (components) per vertex
// itemSize = 3, потому что имеется 3 значения (компонента, т.е. составные части) на каждую вершину
geometry.addAttribute( 'position', new THREE.BufferAttribute( vertices, 3 ) );
var material = new THREE.MeshBasicMaterial( { color: 0xff0000 } );
var mesh = new THREE.Mesh( geometry, material );</pre>
<h5>Другие примеры:</h5>
<pre><a href="https://threejs.org/examples/#webgl_buffergeometry" target="_blank">Complex mesh with non-indexed faces</a> (сложная сетка с неиндексированными гранями),
<a href="https://threejs.org/examples/#webgl_buffergeometry_uint" target="_blank">Complex mesh with indexed faces</a> (сложная сетка с индексированными гранями),
<a href="https://threejs.org/examples/#webgl_buffergeometry_lines" target="_blank">Lines</a> (линии),
<a href="https://threejs.org/examples/#webgl_buffergeometry_lines_indexed" target="_blank">Indexed Lines</a> (индексированные линии),
<a href="https://threejs.org/examples/#webgl_buffergeometry_custom_attributes_particles" target="_blank">Particles</a> (частицы), и
<a href="https://threejs.org/examples/#webgl_buffergeometry_rawshader" target="_blank">Raw Shaders</a> (необработанные шейдеры).</pre>

<h4 id="AccessingAttributes">Обращение к атрибутам Accessing attributes</h4>
WebGL хранит данные, связанные с отдельными вершинами геометрии в <em>атрибутах</em>. Примеры включают положение вершины, вектор нормали вершины, цвет вершины и т.д.
При использовании <a href="#7" onmouseover="show('Geometry')" onmouseout="hide()">Geometry</a>, <a href="renderers.htm#1" onmouseover="show('WebGLRenderer')" onmouseout="hide()">рендерер</a> берет на себя заботу о переносе этой информации в буферы типизированного массива и отправлении этих данных в шейдер.
В случае с BufferGeometry все эти данные хранятся в буферах, связанных с отдельными атрибутами.
Это значит, что для получения данных о положении, связанных с вершиной (например), нужно вызвать метод <tt><a href="#getAttribute" onmouseover="show('BufferGeometry.getAttribute')" onmouseout="hide()">.getAttribute</a></tt>
для доступа к <a href="#1" onmouseover="show('BufferAttribute')" onmouseout="hide()">атрибуту</a> <tt><a href="#position" onmouseover="show('position - положение, позиция')" onmouseout="hide()">position</a></tt>,
затем обращаться к отдельным координатам <tt>x</tt>, <tt>y</tt>, и <tt>z</tt> этой позиции.<br><br>
Различными элементами этого класса устанавливаются следующие атрибуты:
<div class=blockindent><br>
<pre id="2position"><a href="#1" onmouseover="show('BufferAttribute.<br>position - позиция, положение')" onmouseout="hide()">position</a> (itemSize: 3)</pre>
Содержит координаты <tt>x</tt>, <tt>y</tt>, и <tt>z</tt> каждой вершины данной геометрии. Устанавливается при помощи метода <tt><a href="#2fromGeometry" onmouseover="show('BufferGeometry.fromGeometry')" onmouseout="hide()">.fromGeometry</a>()</tt>.<br><br>

<pre id="2normal"><a href="#1" onmouseover="show('BufferAttribute.<br>normal - нормаль, перпендикуляр')" onmouseout="hide()">normal</a> (itemSize: 3)</pre>
Содержит компоненты <tt>x</tt>, <tt>y</tt>, и <tt>z</tt> векторов нормалей к каждой вершине в данной геометрии.
Устанавливается при помощи метода <tt><a href="#2fromGeometry" onmouseover="show('BufferGeometry.fromGeometry')" onmouseout="hide()">.fromGeometry</a>()</tt>.<br><br>

<pre id="2color"><a href="#1" onmouseover="show('BufferAttribute.<br>color - цвет')" onmouseout="hide()">color</a> (itemSize: 3)</pre>
Содержит каналы красного, зеленого и синего цвета каждой вершины в данной геометрии. Устанавливается при помощи метода <tt><a href="#2fromGeometry" onmouseover="show('BufferGeometry.fromGeometry')" onmouseout="hide()">.fromGeometry</a>()</tt>.</div><br>

В дополнение к встроенным атрибутам, можно устанавливать свои собственные настраиваемые атрибуты при помощи метода <tt><a href="#2addAttribute" onmouseover="show('BufferGeometry.addAttribute')" onmouseout="hide()">addAttribute</a></tt>.
При работе с <a href="#7" onmouseover="show('Geometry')" onmouseout="hide()">Geometry</a>, эти атрибуты установлены и хранятся в <a href="materials.htm#3" onmouseover="show('Material')" onmouseout="hide()">материале</a>.
В BufferGeometry эти атрибуты сохраняются вместе с самой геометрией. Обратите внимание, что по-прежнему нужно задавать сведения об атрибутах в материале, но значение каждого атрибута хранится в BufferGeometry.<br><br>

<h4>Конструктор</h4>
<pre>BufferGeometry( )</pre>
Конструктор создает новый BufferGeometry, а также задает некоторым свойствам значение по умолчанию.<br><br>

<h4>Свойства</h4>
<div class=blockindent><br>
<pre id="2attributes"><span onclick="showClick(type_hashmap)"><a href="#" onclick="return false" onblur="hideClick()" onmouseover="show('attributes - атрибуты')" onmouseout="hide()">.attributes</a></span></pre>
У этой <a href="#hash_map" onmouseover="show('hashmap')" onmouseout="hide()">хеш-таблицы</a> имя атрибута устанавливается как идентификатор, а в качестве значения устанавливается <a href="#1" onmouseover="show('BufferAttribute')" onmouseout="hide()">буфер</a>.
Вместо непосредственного обращения к данному свойству, для доступа к атрибутам этой геометрии используйте методы
<a href="#2addAttribute" onmouseover="show('BufferGeometry.addAttribute<br>add attribute - добавить атрибут')" onmouseout="hide()">addAttribute</a> и <a href="#2getAttribute" onmouseover="show('BufferGeometry.getAttribute<br>get attribute - получить атрибут')" onmouseout="hide()">getAttribute</a>.</div>

<div class="note_trans" id="hash_map"><b>Примечание переводчика:</b> Вот чуть более подробно о хешировании, хеш-таблицах (хеш-картах) и ассоциативных таблицах. <a class='link' onclick='javascript:spoiler(this)'>... читать далее</a>
<div style='display:none;'>Хеширование или хэширование (англ. hashing) — преобразование массива входных данных произвольной длины в (выходную) битовую строку фиксированной длины, выполняемое определённым алгоритмом.
Функция, реализующая алгоритм и выполняющая преобразование, называется «хеш-функцией» или «функцией свёртки». Исходные данные называются входным массивом, «ключом» или «сообщением».
Результат преобразования (выходные данные) называется «хешем», «хеш-кодом», «хеш-суммой», «сводкой сообщения».<br><br>
<span style='float:right; margin-top:-16px; background-color:#ffffe8;'><em>(из <a href='https://ru.wikipedia.org/wiki/%D0%A5%D0%B5%D1%88%D0%B8%D1%80%D0%BE%D0%B2%D0%B0%D0%BD%D0%B8%D0%B5' target='_blank'>Википедии</a>)</em>&nbsp;&nbsp;&nbsp;</span><br>
<!-- HashMap — основан на хэш-таблицах, реализует интерфейс Map (что подразумевает хранение данных в виде пар ключ/значение). -->
Хеш-таблица — это структура данных, реализующая интерфейс ассоциативного массива, а именно, она позволяет хранить пары (ключ, значение) и выполнять три операции: операцию добавления новой пары, операцию поиска и операцию удаления пары по ключу.<br><br>
<span style='float:right; margin-top:-16px; background-color:#ffffe8;'><em>(из <a href='https://ru.wikipedia.org/wiki/%D0%A5%D0%B5%D1%88-%D1%82%D0%B0%D0%B1%D0%BB%D0%B8%D1%86%D0%B0' target='_blank'>Википедии</a>)</em>&nbsp;&nbsp;&nbsp;</span><br>
В информатике, хеш-таблицей (hash table) или хеш-картой (hash map) называется структура данных, которая реализует ассоциативный массив с абстрактным типом данных, и может сопоставлять ключи и значения.
Хеш-таблица использует хеш-функцию для вычисления индекса в массиве of buckets or slots, из которого может быть найдено желаемое значение.<br>
В идеале хеш-функция будет присваивать каждому ключу свое уникальное  хеш-значение, но большинство конструкций хеш-таблиц применяет несовершенную хеш-функцию, которая может вызывать хеш-коллизии, когда она создает одинаковый индекс для более чем одного ключа.
Такие коллизии должны каким-то образом улаживаться.<br>
В хорошо подобранной хеш-таблице средние затраты (количество инструкций) на каждый поиск не зависит от числа элементов, хранящихся в таблице. Большинство проектов хеш-таблиц также позволяет произвольные вставки и удаления пар ключ-значение, при неизменных средних затратах на операцию.<br>
Во многих случаях хеш-таблицы оказываются более эффективными, чем поисковые деревья или любые другие структуры просмотра таблиц. Поэтому они широко используются во многих видах компьютерных программ, в частности для ассоциативных массивов, индексирования баз данных, кэшей и наборов.<br><br>
<span style='float:right; margin-top:-16px; background-color:#ffffe8;'><em>(из <a href='https://en.wikipedia.org/wiki/Hash_table' target='_blank'>Википедии</a>)</em>&nbsp;&nbsp;&nbsp;</span><br>

Ассоциативный массив — абстрактный тип данных (интерфейс к хранилищу данных), позволяющий хранить пары вида «(ключ, значение)» и поддерживающий операции добавления пары, а также поиска и удаления пары по ключу:
<pre>INSERT(ключ, значение)
FIND(ключ)
REMOVE(ключ)</pre>
Предполагается, что ассоциативный массив не может хранить две пары с одинаковыми ключами.<br>
В паре ( k , v ) {\displaystyle (k,v)} (k, v) значение v {\displaystyle v} v называется значением, ассоциированным с ключом k {\displaystyle k} k. Семантика и названия вышеупомянутых операций в разных реализациях ассоциативного массива могут отличаться.<br>
Операция FIND(ключ) возвращает значение, ассоциированное с заданным ключом, или некоторый специальный объект UNDEF, означающий, что значения, ассоциированного с заданным ключом, нет. Две другие операции ничего не возвращают (за исключением, возможно, информации о том, успешно ли была выполнена данная операция).<br>
Ассоциативный массив с точки зрения интерфейса удобно рассматривать как обычный массив, в котором в качестве индексов можно использовать не только целые числа, но и значения других типов — например, строки.<br><br>
<span style='float:right; margin-top:-16px; background-color:#ffffe8;'><em>(из <a href='https://ru.wikipedia.org/wiki/%D0%90%D1%81%D1%81%D0%BE%D1%86%D0%B8%D0%B0%D1%82%D0%B8%D0%B2%D0%BD%D1%8B%D0%B9_%D0%BC%D0%B0%D1%81%D1%81%D0%B8%D0%B2' target='_blank'>Википедии</a>)</em>&nbsp;&nbsp;&nbsp;</span></div></div><br>


<div class=blockindent>
<pre id="2boundingBox"><a href="math.htm#2" onmouseover="show('Box3<br>bounding box - ограничительная рамка')" onmouseout="hide()">.boundingBox</a></pre>
Ограничительная рамка для bufferGeometry, которая может быть рассчитана при помощи метода <a href="#2computeBoundingBox" onmouseover="show('BufferGeometry.computeBoundingBox')" onmouseout="hide()">.computeBoundingBox</a>().
Значением по умолчанию является <tt>null</tt>.<br><br>

<pre id="2boundingSphere"><a href="math.htm#15" onmouseover="show('Sphere.<br>bounding sphere - ограничительная сфера')" onmouseout="hide()">.boundingSphere</a></pre>
Ограничительная сфера для bufferGeometry, которая может быть рассчитана при помощи метода <a href="#2computeBoundingSphere" onmouseover="show('BufferGeometry.computeBoundingSphere')" onmouseout="hide()">.computeBoundingSphere</a>(). Значением по умолчанию является <tt>null</tt>.<br><br>

<pre id="2drawRange"><span onclick="showClick(type_obj)"><a href="#" onclick="return false" onblur="hideClick()" onmouseover="show('draw range - область рисования')" onmouseout="hide()">.drawRange</a></span></pre>
Используется для определения, какая часть геометрии должна быть визуализирована. Это свойство не устанавливается напрямую, взамен используйте метод <a href="#2setDrawRange" onmouseover="show('BufferGeometry.setDrawRange')" onmouseout="hide()">.setDrawRange</a>.<br>
Значением по умолчанию является <tt>{ start: 0, count: Infinity }</tt>.<br><br>

<pre id="2groups"><span onclick="showClick(type_array)"><a href="#" onclick="return false" onblur="hideClick()" onmouseover="show('groups - группы')" onmouseout="hide()">.groups</a></span></pre>
Разделите геометрию на группы, каждая из которых будет отображаться в отдельном вызове рисования WebGL. Это позволит использовать массив материалов с буферным геометрическим элементом.<br>
Каждая группа представляет собой объект в виде:
<pre>{ <span class="lnk" onmouseover="show('start - начало')" onmouseout="hide()">start</span>: <span class="lnk" onmouseover="show('integer - целое число')" onmouseout="hide()">Integer</span>, <span class="lnk" onmouseover="show('count - счет')" onmouseout="hide()">count</span>: <span class="lnk" onmouseover="show('integer - целое число')" onmouseout="hide()">Integer</span>, <span class="lnk" onmouseover="show('material index - индекс материала')" onmouseout="hide()">materialIndex</span>: <span class="lnk" onmouseover="show('integer - целое число')" onmouseout="hide()">Integer</span> }</pre>
где <tt>start</tt> указывает индекс первой вершины в этом вызове рисования, <tt>count</tt> определяет количество включенных вершин, а <tt>materialIndex</tt> устанавливает индекс используемого массива материала.<br>
Для добавления групп, вместо непосредственного изменения массива <tt>groups</tt>, используйте метод <tt><a href="#2addGroup" onmouseover="show('BufferGeometry.addGroup')" onmouseout="hide()">.addGroup</a></tt>.<br><br>

<pre id="2id"><span onclick="showClick(type_int)"><a href="#" onclick="return false" onblur="hideClick()" onmouseover="show('сокращение от англ. слова identifier - идентификатор')" onmouseout="hide()">.id</a></span></pre>
Уникальное число для данного экземпляра <tt>bufferGeometry</tt>.<br><br>

<pre id="2index"><span onclick="showClick(type_int)"><a href="#" onclick="return false" onblur="hideClick()" onmouseover="show('index - индекс, указатель')" onmouseout="hide()">.index</a></span></pre>
Свойство позволяет повторно использовать вершины для нескольких треугольников; это называется использованием "индексированных треугольников" и работает также,
как и в <a href="#7" onmouseover="show('Geometry')" onmouseout="hide()">Geometry</a>: каждый треугольник связан с индексами трех вершин.
Таким образом данный атрибут хранит индекс каждой вершины каждой треугольной грани.
Если этот атрибут не установлен, <a href="renderers.htm#1.1" onmouseover="show('WebGLRenderer')" onmouseout="hide()">визуализатор (рендерер)</a> полагает, что каждая из трех смежных позиций представляет отдельный треугольник.
Значением по умолчанию является <tt>null</tt>.<br><br>

<pre id="2isBufferGeometry"><span onclick="showClick(type_int)"><a href="#" onclick="return false" onblur="hideClick()" onmouseover="show('от англ. слов is buffer geometry - является буферной геометрией')" onmouseout="hide()">.isBufferGeometry</a></span></pre>
Используется для проверки, является ли данный класс и производные от него буферными геометриями (BufferGeometry). Значением по умолчанию является <tt>true</tt>.
Это свойство нельзя изменять, поскольку оно используется для оптимизации внутри <em>three.js</em>.<br><br>

<pre id="2morphAttributes"><span onclick="showClick(type_obj)"><a href="#" onclick="return false" onblur="hideClick()" onmouseover="show('сокращ. от англ. слов morphing attributes - атрибуты морфинга')" onmouseout="hide()">.morphAttributes</a></span></pre>
Хеш-карта <a href="#1" onmouseover="show('BufferAttribute')" onmouseout="hide()">BufferAttribute</a>'ов, содержащая сведения о <tt><a href="#7morphTargets" onmouseover="show('Geometry.morphTargets')" onmouseout="hide()">morphTargets</a></tt> (целях морфинга) геометрии.<br><br>

<pre id="2name"><span onclick="showClick(type_string)"><a href="#" onclick="return false" onblur="hideClick()" onmouseover="show('name - имя, название')" onmouseout="hide()">.name</a></span></pre>
Необязательное (дополнительное) имя для данного экземпляра <tt>bufferGeometry</tt>. Значением по умолчанию является пустая строка.<br><br>

<pre id="2uuid"><span onclick="showClick(type_string)"><a href="#" onclick="return false" onblur="hideClick()" onmouseover="show('сокращение англ. слов Universally Unique Identifier<br>- универсальный уникальный идентификатор')" onmouseout="hide()">.uuid</a></span></pre>
<a href="https://ru.wikipedia.org/wiki/UUID" target="_blank" onmouseover="show('сокращение англ. слов Universally Unique Identifier<br>- универсальный уникальный идентификатор')" onmouseout="hide()">UUID</a> данного экземпляра объекта. Он присваивается автоматически и не должен изменяться.</div><br>

<h4>Методы</h4><br>
В данном классе возможно применение методов <tt><a href="#5" onmouseover="show('EventDispatcher')" onmouseout="hide()">EventDispatcher</a></tt>.
<div class=blockindent><br>
<pre id="2addAttribute"><span onclick="showClick(type_null)"><a href="#" onclick="return false" onblur="hideClick()" onmouseover="show('add attribute - добавить атрибут')" onmouseout="hide()">.addAttribute</a></span>( <span onclick="showClick(type_string)"><a href="#" onclick="return false" onblur="hideClick()" onmouseover="show('name - имя, название')" onmouseout="hide()">name</a></span>, <a href="#1" onmouseover="show('BufferAttribute.<br>attribute - атрибут')" onmouseout="hide()">attribute</a> )</pre>
Метод добавляет атрибут в заданную геометрию. Использование этого метода лучше использования свойства атрибутов, так как для ускорения перебора поддерживается внутренний массив <a href="#attributes" onmouseover="show('BufferGeometry.attributes')" onmouseout="hide()">атрибутов</a>.<br><br>

<pre id="2addGroup"><span onclick="showClick(type_null)"><a href="#" onclick="return false" onblur="hideClick()" onmouseover="show('add group - добавить группу')" onmouseout="hide()">.addGroup</a></span>( <span onclick="showClick(type_int)"><a href="#" onclick="return false" onblur="hideClick()" onmouseover="show('start - начало')" onmouseout="hide()">start</a></span>, <span onclick="showClick(type_int)"><a href="#" onclick="return false" onblur="hideClick()" onmouseover="show('count - счет')" onmouseout="hide()">count</a></span>, <span onclick="showClick(type_int)"><a href="#" onclick="return false" onblur="hideClick()" onmouseover="show('material index - индекс материала')" onmouseout="hide()">materialIndex</a></span> )</pre>
Добавляет группу в заданную геометрию; подробности смотрите в свойстве <a href="#groups" onmouseover="show('BufferGeometry.groups')" onmouseout="hide()">groups</a>.<br><br>

<pre id="2applyMatrix"><span onclick="showClick(type_null)"><a href="#" onclick="return false" onblur="hideClick()" onmouseover="show('от англ. слов apply matrix - применение матрицы')" onmouseout="hide()">.applyMatrix</a></span>( <a href="math.htm#11" onmouseover="show('Matrix4.<br>matrix - матрица')" onmouseout="hide()">matrix</a> )</pre>
Передает матричное изменение непосредственно в координаты вершин.<br><br>

<pre id="2center"><span onclick="showClick(type_null)"><a href="#" onclick="return false" onblur="hideClick()" onmouseover="show('center - центр')" onmouseout="hide()">.center</a></span>( )</pre>
Центрирует геометрию исходя из ограничительной рамки.<br><br>

<pre id="2clone"><a href="#2" onmouseover="show('BufferGeometry.<br>clone - клон, двойник, аналог')" onmouseout="hide()">.clone</a>()</pre>
Создает клон данной BufferGeometry.<br><br>

<pre id="2copy"><a href="#2" onmouseover="show('BufferGeometry.<br>copy - копия, копировать')" onmouseout="hide()">.copy</a>( <a href="#2">bufferGeometry</a> )</pre>
Копирует другую BufferGeometry в данную BufferGeometry.<br><br>

<pre id="2clearGroups"><span onclick="showClick(type_null)"><a href="#" onclick="return false" onblur="hideClick()" onmouseover="show('от англ. слов clear groups - очистка групп')" onmouseout="hide()">.clearGroups</a></span>( )</pre>
Удаляет все группы.<br><br>

<pre id="2computeBoundingBox"><span onclick="showClick(type_null)"><a href="#" onclick="return false" onblur="hideClick()" onmouseover="show('от англ. слов compute bounding box - вычислить ограничительную рамку')" onmouseout="hide()">.computeBoundingBox</a></span>()</pre>
Вычисляет ограничительную рамку геометрии и обновляет атрибут <a href="#2boundingBox" onmouseover="show('BufferGeometry.boundingBox')" onmouseout="hide()">.boundingBox</a>.<br>
Ограничительные рамки не рассчитываются по умолчанию. Они должны быть вычислены явно, в противном случае они равны <tt>null</tt>.<br><br>

<pre id="2computeBoundingSphere"><span onclick="showClick(type_null)"><a href="#" onclick="return false" onblur="hideClick()" onmouseover="show('от англ. слов compute bounding sphere<br>- вычислить ограничительную сферу')" onmouseout="hide()">.computeBoundingSphere</a></span>()</pre>
Вычисляет ограничительную сферу геометрии и обновляет атрибут <a href="#2boundingSphere" onmouseover="show('BufferGeometry.boundingSphere')" onmouseout="hide()">.boundingSphere</a>.<br>
Ограничительные сферы не рассчитываются по умолчанию. Они должны быть вычислены явно, в противном случае они равны <tt>null</tt>.<br><br>

<pre id="2computeVertexNormals"><span onclick="showClick(type_null)"><a href="#" onclick="return false" onblur="hideClick()" onmouseover="show('от англ. слов compute vertex normals<br>- вычислить нормали вершин')" onmouseout="hide()">.computeVertexNormals</a></span>()</pre>
Вычисляет нормали вершин путем усреднения нормалей граней.<br><br>

<pre id="2dispose"><span onclick="showClick(type_null)"><a href="#" onclick="return false" onblur="hideClick()" onmouseover="show('dispose - удалить, устранить')" onmouseout="hide()">.dispose</a></span>()</pre>
Выводит объект из памяти.<br>
Этот метод вызывается когда во время работы приложения нужно удалить определенную bufferGeometry.<br><br>

<pre id="2fromDirectGeometry"><a href="#2" onmouseover="show('объект BufferGeometry,<br>от англ. слов from direct geometry - из прямой геометрии')" onmouseout="hide()">.fromDirectGeometry</a> ( <a href="#7" onmouseover="show('Geometry')" onmouseout="hide()">Geometry</a> )</pre>
Заполняет этот <tt>BufferGeometry</tt> данными из объекта <tt><a href="#4" onmouseover="show('DirectGeometry')" onmouseout="hide()">DirectGeometry</a></tt>.
<div class="note">Примечание: <tt><a href="#4" onmouseover="show('DirectGeometry')" onmouseout="hide()">DirectGeometry</a></tt> используется в основном в качестве посредника для конвертирования между <tt><a href="#7" onmouseover="show('Geometry')" onmouseout="hide()">Geometry</a></tt> и <tt>BufferGeometry</tt>.</div><br>

<pre id="2fromGeometry"><a href="#2" onmouseover="show('объект BufferGeometry,<br>от англ. слов from geometry - из геометрии')" onmouseout="hide()">.fromGeometry</a> ( <a href="#7" onmouseover="show('Geometry')" onmouseout="hide()">Geometry</a> )</pre>
Заполняет этот <tt>BufferGeometry</tt> данными из объекта <tt><a href="#7" onmouseover="show('Geometry')" onmouseout="hide()">Geometry</a></tt>.<br><br>

<pre id="2getAttribute"><a href="#1" onmouseover="show('BufferAttribute,<br>от англ. слов get attribute - получить атрибут')" onmouseout="hide()">.getAttribute</a>( <span onclick="showClick(type_string)"><a href="#" onclick="return false" onblur="hideClick()" onmouseover="show('name - имя, название')" onmouseout="hide()">name</a></span> )</pre>
Возвращает <tt><a href="#1" onmouseover="show('BufferAttribute')" onmouseout="hide()">атрибут</a></tt> с указанным именем.<br><br>

<pre id="2getIndex"><a href="#1" onmouseover="show('BufferAttribute,<br>от англ. слов get index - получить индекс')" onmouseout="hide()">.getIndex</a>( )</pre>
Возвращает <tt><a href="#2index" onmouseover="show('BufferGeometry.index')" onmouseout="hide()">.index</a></tt> - индекс буфера.<br><br>

<pre id="2lookAt"><a href="#2" onmouseover="show('BufferGeometry,<br>от англ. слов look at - смотреть на')" onmouseout="hide()">.lookAt</a>( <a href="math.htm#19" onmouseover="show('Vector3')" onmouseout="hide()">vector</a> )</pre>
<div class=list><tt>vector</tt> - вектор, представляющий позицию в "мировом" пространстве, на которую должен "смотреть" геометрический элемент.</div>
Поворачивает геометрию к указанной точке в пространстве. Обычно выполняется как одноразовая операция, и не в процессе цикла.
Для стандартного обращения к сетке в реальном времени используйте метод <a href="#14lookAt" onmouseover="show('Object3D.lookAt')" onmouseout="hide()">Object3D.lookAt</a>.<br><br>

<pre id="2merge"><span onclick="showClick(type_null)"><a href="#" onclick="return false" onblur="hideClick()" onmouseover="show('merge - сливать, объединять')" onmouseout="hide()">merge</a></span>( <a href="#2" onmouseover="show('BufferGeometry')" onmouseout="hide()">bufferGeometry</a>, <span onclick="showClick(type_int)"><a href="#" onclick="return false" onblur="hideClick()" onmouseover="show('offset - смещение')" onmouseout="hide()">offset</a></span> )</pre>
Объединение с другой BufferGeometry с дополнительным смещением, от которого начинается слияние.<br><br>

<pre id="2normalizeNormals"><span onclick="showClick(type_null)"><a href="#" onclick="return false" onblur="hideClick()" onmouseover="show('от англ. слов normalize normals - нормализовать нормали')" onmouseout="hide()">.normalizeNormals</a></span>( )</pre>
Каждый вектор нормали геометрического элемента будет иметь единичную величину. Это исправит освещение геометрических поверхностей.<br><br>

<pre id="2removeAttribute"><a href="#1" onmouseover="show('BufferAttribute,<br>от англ. слов remove attribute - удалить атрибут')" onmouseout="hide()">.removeAttribute</a>( <span onclick="showClick(type_string)"><a href="#" onclick="return false" onblur="hideClick()" onmouseover="show('name - имя, название')" onmouseout="hide()">name</a></span> )</pre>
Удаляет <tt><a href="#1" onmouseover="show('BufferAttribute')" onmouseout="hide()">атрибут</a></tt> с указанным именем.<br><br>

<pre id="2rotateX"><a href="#2" onmouseover="show('BufferGeometry,<br>rotate X - поворот (по оси) X')" onmouseout="hide()">rotateX</a>( <span onclick="showClick(type_float)"><a href="#" onclick="return false" onblur="hideClick()" onmouseover="show('radians - радианы')" onmouseout="hide()">radians</a></span> )</pre>
Поворот геометрии вокруг оси <tt>X</tt>. Обычно выполняется как одноразовая операция, и не в процессе цикла.<br>
Для обычного поворота сетки (mesh) в реальном времени используйте свойство <tt><a href="#14rotation" onmouseover="show('Object3D.rotation')" onmouseout="hide()">Object3D.rotation</a></tt>.<br><br>

<pre id="2rotateY"><a href="#2" onmouseover="show('BufferGeometry,<br>rotate Y - поворот (по оси) Y')" onmouseout="hide()">rotateY</a>( <span onclick="showClick(type_float)"><a href="#" onclick="return false" onblur="hideClick()" onmouseover="show('radians - радианы')" onmouseout="hide()">radians</a></span> )</pre>
Поворот геометрии вокруг оси <tt>Y</tt>. Обычно выполняется как одноразовая операция, и не в процессе цикла.<br>
Для обычного поворота сетки (mesh) в реальном времени используйте свойство <tt><a href="#14rotation" onmouseover="show('Object3D.rotation')" onmouseout="hide()">Object3D.rotation</a></tt>.<br><br>

<pre id="2rotateZ"><a href="#2" onmouseover="show('BufferGeometry,<br>rotate Z - поворот (по оси) Z')" onmouseout="hide()">rotateZ</a>( <span onclick="showClick(type_float)"><a href="#" onclick="return false" onblur="hideClick()" onmouseover="show('radians - радианы')" onmouseout="hide()">radians</a></span> )</pre>
Поворот геометрии вокруг оси <tt>Z</tt>. Обычно выполняется как одноразовая операция, и не в процессе цикла.<br>
Для обычного поворота сетки (mesh) в реальном времени используйте свойство <tt><a href="#14rotation" onmouseover="show('Object3D.rotation')" onmouseout="hide()">Object3D.rotation</a></tt>.<br><br>

<pre id="2scale"><a href="#2" onmouseover="show('BufferGeometry,<br>scale - масштаб')" onmouseout="hide()">scale</a>( <span onclick="showClick(type_float)"><a href="#" onclick="return false" onblur="hideClick()" onmouseover="show('x - координата x')" onmouseout="hide()">x</a></span>, <span onclick="showClick(type_float)"><a href="#" onclick="return false" onblur="hideClick()" onmouseover="show('y - координата y')" onmouseout="hide()">y</a></span>, <span onclick="showClick(type_float)"><a href="#" onclick="return false" onblur="hideClick()" onmouseover="show('z - координата z')" onmouseout="hide()">z</a></span> )</pre>
Масштабирует данные геометрии. Обычно выполняется как одноразовая операция, и не в процессе цикла.<br>
Для обычного масштабирования сетки (mesh) в реальном времени используйте свойство <tt><a href="#14scale" onmouseover="show('Object3D.scale')" onmouseout="hide()">Object3D.scale</a></tt>.<br><br>

<pre id="2setIndex"><span onclick="showClick(type_null)"><a href="#" onclick="return false" onblur="hideClick()" onmouseover="show('от англ. слов set index - установить индекс')" onmouseout="hide()">.setIndex</a></span>( <a href="#1" onmouseover="show('BufferAttribute,<br>index - индекс')" onmouseout="hide()">index</a> )</pre>
Устанавливает <tt><a href="#2index" onmouseover="show('BufferGeometry.index')" onmouseout="hide()">.index</a></tt> - индекс буфера.<br><br>

<pre id="2setDrawRange"><span onclick="showClick(type_null)"><a href="#" onclick="return false" onblur="hideClick()" onmouseover="show('от англ. слов set draw range - установить диапазон рисования')" onmouseout="hide()">.setDrawRange</a></span>( <span onclick="showClick(type_int)"><a href="#" onclick="return false" onblur="hideClick()" onmouseover="show('start - начало')" onmouseout="hide()">start</a></span>, <span onclick="showClick(type_int)"><a href="#" onclick="return false" onblur="hideClick()" onmouseover="show('count - счет')" onmouseout="hide()">count</a></span> )</pre>
Устанавливает значение свойства буфера <tt><a href="#2drawRange" onmouseover="show('BufferGeometry.drawRange')" onmouseout="hide()">.drawRange</a></tt>. Подробнее смотрите в описании этого свойства.<br><br>

<pre id="2setFromObject"><a href="#2" onmouseover="show('BufferGeometry.<br>set from object - установить из объекта')" onmouseout="hide()">.setFromObject</a>( <a href="#14" onmouseover="show('Object3D')" onmouseout="hide()">object</a> )</pre>
Устанавливает атрибуты из <a href="#14" onmouseover="show('Object3D')" onmouseout="hide()">Object3D</a> для данной <tt>BufferGeometry</tt>.<br><br>

<pre id="2setFromPoints"><a href="#2" onmouseover="show('BufferGeometry.<br>set from points - установить из точек')" onmouseout="hide()">.setFromPoints</a>( <span onclick="showClick(type_array)"><a href="#" onclick="return false" onblur="hideClick()" onmouseover="show('points - точки')" onmouseout="hide()">points</a></span> )</pre>
Устанавливает атрибуты данной <tt>BufferGeometry</tt> из массива точек.<br><br>

<pre id="2toJSON"><span onclick="showClick(type_obj)"><a href="#" onclick="return false" onblur="hideClick()" onmouseover="show('to JSON - сокр. от англ. слов to JavaScript Object<br>Notation, — то есть, в текстовый формат описания<br>объекта, основанный на JavaScript')" onmouseout="hide()">.toJSON</a></span>( )</pre>
Возвращает необработанное представление объекта <tt>BufferGeometry</tt>.<br><br>

<pre id="2toNonIndexed"><a href="#2" onmouseover="show('BufferGeometry.<br>to non indexed - в неиндексированном (виде)')" onmouseout="hide()">.toNonIndexed</a>( )</pre>
Возвращает неиндексированную версию индексированной BufferGeometry.<br><br>

<pre id="2translate"><a href="#2" onmouseover="show('BufferGeometry.<br>translate - перевод, перенос, перемещение')" onmouseout="hide()">.translate</a> ( <span onclick="showClick(type_float)"><a href="#" onclick="return false" onblur="hideClick()" onmouseover="show('x - координата x')" onmouseout="hide()">x</a></span>, <span onclick="showClick(type_float)"><a href="#" onclick="return false" onblur="hideClick()" onmouseover="show('y - координата y')" onmouseout="hide()">y</a></span>, <span onclick="showClick(type_float)"><a href="#" onclick="return false" onblur="hideClick()" onmouseover="show('z - координата z')" onmouseout="hide()">z</a></span> )</pre>
Перевод (смещение) координат геометрии. Обычно выполняется как одноразовая операция, и не в процессе цикла.<br>
Для обычного перевода координат сетки (mesh) в реальном времени используйте свойство <a href="#14position" onmouseover="show('Object3D.position')" onmouseout="hide()">Object3D.position</a>.<br><br>

<pre id="2updateFromObject"><a href="#2" onmouseover="show('BufferGeometry.<br>update from object - обновить из объекта')" onmouseout="hide()">.updateFromObject</a> ( <a href="#14" onmouseover="show('Object3D')" onmouseout="hide()">object</a> )</pre>
Обновляет для данной <tt>BufferGeometry</tt> атрибуты из <a href="#14" onmouseover="show('Object3D')" onmouseout="hide()">Object3D</a>.</div><br>

<h4>Исходники</h4>
<div class=blockindent><a href="https://github.com/mrdoob/three.js/blob/master/src/core/BufferGeometry.js" target="_blank">BufferGeometry.js на github.com</a></div><br>


<h3 id="3">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; Clock</h3>
Объект для отслеживания времени. Он использует метод <tt><a href="https://developer.mozilla.org/en-US/docs/Web/API/Performance/now" target="_blank">performance.now()</a></tt>, если такая возможность имеется,
в противном случае он обращается к менее точному методу <tt><a href="https://developer.mozilla.org/en/docs/Web/JavaScript/Reference/Global_Objects/Date/now" target="_blank">Date.now()</a></tt>.
Вот описание методов <tt><a href="https://developer.mozilla.org/ru/docs/Web/API/Performance/now" target="_blank">performance.now()</a></tt> и <tt><a href="https://developer.mozilla.org/ru/docs/Web/JavaScript/Reference/Global_Objects/Date/now" target="_blank">Date.now()</a></tt> на русском языке.<br><br>

<h4>Конструктор</h4><br>
<pre>Clock( <span onclick="showClick(type_bool)"><a href="#" onclick="return false" onblur="hideClick()" onmouseover="show('от англ. слов auto start - автоматический запуск')" onmouseout="hide()">autoStart</a></span> )</pre>
<div class=list><tt><span onclick="showClick(type_bool)"><a href="#" onclick="return false" onblur="hideClick()" onmouseover="show('от англ. слов auto start - автоматический запуск')" onmouseout="hide()">autoStart</a></span></tt>
— определяет, будет ли отсчет времени запускаться автоматически, (дополнительный, необязательный аргумент). Значением по умолчанию является&nbsp;<tt>true</tt>.</div><br>

<h4>Свойства</h4>
<div class="blockindent"><br>
<pre id="3autoStart"><span onclick="showClick(type_bool)"><a href="#" onclick="return false" onblur="hideClick()" onmouseover="show('от англ. слов auto start - автоматический запуск')" onmouseout="hide()">autoStart</a></span></pre>
Если значение свойства установлено как <tt>true</tt>, при первом вызове обновления автоматически запускается отсчет времени. Значением по умолчанию является&nbsp;<tt>true</tt>.<br><br>
<pre id="3startTime"><span onclick="showClick(type_float)"><a href="#" onclick="return false" onblur="hideClick()" onmouseover="show('от англ. слов start time - начальное время')" onmouseout="hide()">.startTime</a></span></pre>
Здесь хранится время последнего вызова метода <tt><a href="#3start" onmouseover="show('Clock.start')" onmouseout="hide()">start</a></tt>.
Если отсчет времени запущен, то в этом свойстве хранится время начала отсчета.<br><br>
<pre id="3oldTime"><span onclick="showClick(type_float)"><a href="#" onclick="return false" onblur="hideClick()" onmouseover="show('от англ. слов old time - старое время')" onmouseout="hide()">.oldTime</a></span></pre>
Это свойство хранит время последнего вызова методов <tt><a href="#3start" onmouseover="show('Clock.start')" onmouseout="hide()">start</a></tt>, <tt><a href="#3getElapsedTime" onmouseover="show('Clock.getElapsedTime')" onmouseout="hide()">getElapsedTime</a></tt> или <tt><a href="#3getDelta" onmouseover="show('Clock.getDelta')" onmouseout="hide()">getDelta</a></tt>.<br><br>
<pre id="3elapsedTime"><span onclick="showClick(type_float)"><a href="#" onclick="return false" onblur="hideClick()" onmouseover="show('от англ. слов elapsed time - прошедшее (истекшее) время')" onmouseout="hide()">.elapsedTime</a></span></pre>
Свойство отслеживает полное время работы часов (отсчет всего времени).<br><br>
<pre id="3running"><span onclick="showClick(type_bool)"><a href="#" onclick="return false" onblur="hideClick()" onmouseover="show('от англ. слова running - ход, работа')" onmouseout="hide()">.running</a></span></pre>
Данное свойство отслеживает, запущены часы или нет.</div><br>

<h4>Методы</h4>
<div class="blockindent"><br>
<pre id="3start"><span onclick="showClick(type_null)"><a href="#" onclick="return false" onblur="hideClick()" onmouseover="show('от англ. слова start - начало, старт')" onmouseout="hide()">.start</a></span>()</pre>
Запускает отсчет времени. Также устанавливает значения свойств <tt><a href="#3startTime" onmouseover="show('Clock.startTime')" onmouseout="hide()">startTime</a></tt> и <tt><a href="#3oldTime" onmouseover="show('Clock.oldTime')" onmouseout="hide()">oldTime</a></tt> в текущее время,
обнуляет значение свойства <tt><a href="#3elapsedTime" onmouseover="show('Clock.elapsedTime')" onmouseout="hide()">elapsedTime</a></tt> и устанавливает значение свойства <tt><a href="#3running" onmouseover="show('Clock.running')" onmouseout="hide()">running</a></tt> как <tt>true</tt>.<br><br>
<pre id="3stop"><span onclick="showClick(type_null)"><a href="#" onclick="return false" onblur="hideClick()" onmouseover="show('от англ. слова stop - стоп, остановка')" onmouseout="hide()">.stop</a></span>()</pre>
Останавливает отсчет времени и устанавливает значение свойства <tt><a href="#3oldTime" onmouseover="show('Clock.oldTime')" onmouseout="hide()">oldTime</a></tt> на текущее время.<br><br>
<pre id="3getElapsedTime"><span onclick="showClick(type_float)"><a href="#" onclick="return false" onblur="hideClick()" onmouseover="show('от англ. слов get elapsed time - получить истекшее время')" onmouseout="hide()">.getElapsedTime</a></span>()</pre>
Метод получает секунды, прошедшие после запуска отсчета времени и устанавливает значение свойства <tt><a href="#3oldTime" onmouseover="show('Clock.oldTime')" onmouseout="hide()">oldTime</a></tt> на текущее время.<br>
Если отсчет времени не запущен, а значение свойства <a href="#3autoStart" onmouseover="show('Clock.autoStart')" onmouseout="hide()">autoStart</a> установлено как <tt>true</tt>, также запускает отсчет времени.<br><br>
<pre id="3getDelta"><span onclick="showClick(type_float)"><a href="#" onclick="return false" onblur="hideClick()" onmouseover="show('от англ. слов get delta - получить дельту, т.е. разницу, в данном случае - во времени')" onmouseout="hide()">.getDelta</a></span>()</pre>
Метод получает секунды, прошедшие после установки значения свойства <tt><a href="#3oldTime" onmouseover="show('Clock.oldTime')" onmouseout="hide()">oldTime</a></tt> и устанавливает значение <tt><a href="#3oldTime" onmouseover="show('Clock.oldTime')" onmouseout="hide()">oldTime</a></tt> на текущее время.<br>
Если отсчет времени не запущен, а значение свойства <a href="#3autoStart" onmouseover="show('Clock.autoStart')" onmouseout="hide()">autoStart</a> установлено как <tt>true</tt>, также запускает отсчет времени.</div><br>

<h4>Исходники</h4>
<div class=blockindent><a href="https://github.com/mrdoob/three.js/blob/master/src/core/Clock.js" target="_blank">Clock.js на github.com</a></div><br><br>


<h3 id="4">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; DirectGeometry</h3>
Данный класс используется внутри <code>three.js</code> для конвертирования из <tt><a href="#7">Geometry</a></tt> в <tt><a href="#2">BufferGeometry</a></tt>.<br><br>

<h4>Конструктор</h4>
<pre>DirectGeometry()</pre>
Создает новую <tt>DirectGeometry</tt>.<br><br>
<h4>Свойства</h4>
<div class=blockindent><br>
<pre id="4id"><span onclick="showClick(type_int)"><a href="#" onclick="return false" onblur="hideClick()" onmouseover="show('сокращ. англ. слова identifier - идентификатор')" onmouseout="hide()">.id</a></span></pre>
Уникальное число для данного экземпляра <tt>DirectGeometry</tt>.<br><br>
<pre id="4name"><span onclick="showClick(type_string)"><a href="#" onclick="return false" onblur="hideClick()" onmouseover="show('от англ. слова name - имя, название')" onmouseout="hide()">.name</a></span></pre>
Дополнительное, необязательное имя. Значением по умолчанию является пустая строка.<br><br>
<pre id="4type"><span onclick="showClick(type_array)"><a href="#" onclick="return false" onblur="hideClick()" onmouseover="show('от англ. слова type - тип')" onmouseout="hide()">.type</a></span></pre>
Строка '<tt>DirectGeometry</tt>'.<br><br>
<pre id="4indices"><span onclick="showClick(type_array)"><a href="#" onclick="return false" onblur="hideClick()" onmouseover="show('от англ. слова indices - индексы')" onmouseout="hide()">.indices</a></span></pre>
Инициализируется как пустой массив, заполняется методом <a href="#4fromGeometry" onmouseover="show('DirectGeometry.fromGeometry')" onmouseout="hide()">.fromGeometry</a>().<br><br>
<pre id="4vertices"><span onclick="showClick(type_array)"><a href="#" onclick="return false" onblur="hideClick()" onmouseover="show('от англ. слова vertices - вершины')" onmouseout="hide()">.vertices</a></span></pre>
Инициализируется как пустой массив, заполняется методом <a href="#4fromGeometry" onmouseover="show('DirectGeometry.fromGeometry')" onmouseout="hide()">.fromGeometry</a>().<br><br>
<pre id="4normals"><span onclick="showClick(type_array)"><a href="#" onclick="return false" onblur="hideClick()" onmouseover="show('от англ. слова normals - нормали, т.е. нормаль к кривой линии (поверхности)<br>в данной ее точке - прямая, проходящая через эту точку и перпендикулярная к<br>касательной прямой (касательной плоскости) в этой точке кривой (поверхности).<br>Плоская гладкая кривая имеет в каждой точке единственную нормаль,<br>расположенную в плоскости кривой.')" onmouseout="hide()">.normals</a></span></pre>
Инициализируется как пустой массив, заполняется методом <a href="#4fromGeometry" onmouseover="show('DirectGeometry.fromGeometry')" onmouseout="hide()">.fromGeometry</a>( ).<br><br>
<pre id="4colors"><span onclick="showClick(type_array)"><a href="#" onclick="return false" onblur="hideClick()" onmouseover="show('от англ. слова colors - цвета')" onmouseout="hide()">.colors</a></span></pre>
Инициализируется как пустой массив, заполняется методом <a href="#4fromGeometry" onmouseover="show('DirectGeometry.fromGeometry')" onmouseout="hide()">.fromGeometry</a>( ).<br><br>
<pre id="4uvs"><span onclick="showClick(type_array)"><a href="#" onclick="return false" onblur="hideClick()" onmouseover="show('от англ. сокращения uv - координаты U и V,<br>буква s означает, что координаты во множественном числе')" onmouseout="hide()">.uvs</a></span></pre>
Инициализируется как пустой массив, заполняется методом <a href="#4fromGeometry" onmouseover="show('DirectGeometry.fromGeometry')" onmouseout="hide()">.fromGeometry</a>().
<div class=note_trans><b>Примечание переводчика:</b> <a href="https://ru.wikipedia.org/wiki/UV-%D0%BF%D1%80%D0%B5%D0%BE%D0%B1%D1%80%D0%B0%D0%B7%D0%BE%D0%B2%D0%B0%D0%BD%D0%B8%D0%B5" target="_blank">UV</a> это текстурные координаты, соответствующие координатам на поверхности трёхмерного объекта (X, Y, Z).
Буквы «U», «V» обозначают оси двумерной текстуры, потому что «X», «Y» и «Z» уже используются для обозначения осей 3D-объекта в пространстве модели. Значения U и V обычно изменяются от 0 до 1.</div><br>
<pre id="4uvs2"><span onclick="showClick(type_array)"><a href="#" onclick="return false" onblur="hideClick()" onmouseover="show('от англ. сокращения uv - координаты U и V,<br>буква s означает, что координаты во множественном числе')" onmouseout="hide()">.uvs2</a></span></pre>
Инициализируется как пустой массив, заполняется методом <a href="#4fromGeometry" onmouseover="show('DirectGeometry.fromGeometry')" onmouseout="hide()">.fromGeometry</a>().<br><br>
<pre id="4groups"><span onclick="showClick(type_array)"><a href="#" onclick="return false" onblur="hideClick()" onmouseover="show('от англ. groups - группы')" onmouseout="hide()">.groups</a></span></pre>
Инициализируется как пустой массив, заполняется методом <a href="#4fromGeometry" onmouseover="show('DirectGeometry.fromGeometry')" onmouseout="hide()">.fromGeometry</a>().<br><br>
<pre id="4morphTargets"><span onclick="showClick(type_array)"><a href="#" onclick="return false" onblur="hideClick()" onmouseover="show('от англ. слов morphing targets<br>- цели морфинга (трансформации)')" onmouseout="hide()">.morphTargets</a></span></pre>
Инициализируется как пустой массив, заполняется методом <a href="#4fromGeometry" onmouseover="show('DirectGeometry.fromGeometry')" onmouseout="hide()">.fromGeometry</a>().
<div class=note_trans><b>Примечание переводчика:</b> <a href="https://ru.wikipedia.org/wiki/%D0%9C%D0%BE%D1%80%D1%84%D0%B8%D0%BD%D0%B3" target="_blank">морфинг</a> (англ. morphing, трансформация) — технология в компьютерной анимации, визуальный эффект, создающий впечатление плавной трансформации одного объекта в другой.
Цели морфинга - это набор последовательных изменений объекта. Исходный объект, зачастую называется затравочным (seed object).</div><br>
<pre id="4skinWeights"><span onclick="showClick(type_array)"><a href="#" onclick="return false" onblur="hideClick()" onmouseover="show('от англ. слов skin weights - веса оболочки')" onmouseout="hide()">.skinWeights</a></span></pre>
Инициализируется как пустой массив, заполняется методом <a href="#4fromGeometry" onmouseover="show('DirectGeometry.fromGeometry')" onmouseout="hide()">.fromGeometry</a>().
<div class=note_trans><b>Примечание переводчика:</b> <a href="#" target="_blank">морфинг</a>.</div><br>
<pre id="4skinIndices"><span onclick="showClick(type_array)"><a href="#" onclick="return false" onblur="hideClick()" onmouseover="show('от англ. слов skin indices - индексы оболочки')" onmouseout="hide()">.skinIndices</a></span></pre>
Инициализируется как пустой массив, заполняется методом <a href="#4fromGeometry" onmouseover="show('DirectGeometry.fromGeometry')" onmouseout="hide()">.fromGeometry</a>().<br><br>
<pre id="4boundingBox"><a href="math.htm#2" onmouseover="show('Box3.<br>от англ. слов bounding box<br>- ограничительная рамка')" onmouseout="hide()">.boundingBox</a></pre>
Ограничительная рамка для bufferGeometry, которую можно рассчитать с помощью метода <tt><a href="#7computeBoundingBox" onmouseover="show('DirectGeometry.computeBoundingBox')" onmouseout="hide()">computeBoundingBox</a></tt>.
Значением по умолчанию является <tt>null</tt>.<br><br>
<pre id="4boundingSphere"><a href="math.htm#15" onmouseover="show('Sphere.<br>от англ. слов bounding sphere<br>- ограничительная сфера')" onmouseout="hide()">.boundingSphere</a></pre>
Ограничительная сфера для bufferGeometry, которую можно рассчитать с помощью метода <tt><a href="#7computeBoundingSphere" onmouseover="show('DirectGeometry.computeBoundingSphere')" onmouseout="hide()">computeBoundingSphere</a></tt>. Значением по умолчанию является <tt>null</tt>.<br><br>
<pre id="4verticesNeedUpdate"><span onclick="showClick(type_bool)"><a href="#" onclick="return false" onblur="hideClick()" onmouseover="show('от англ. слов vertices need update<br>- вершины, которые нужно обновить')" onmouseout="hide()">.verticesNeedUpdate</a></span></pre>
Значением по умолчанию является <tt>false</tt>.<br><br>
<pre id="4normalsNeedUpdate"><span onclick="showClick(type_bool)"><a href="#" onclick="return false" onblur="hideClick()" onmouseover="show('от англ. слов normals need update<br>- нормали, которые нужно обновить')" onmouseout="hide()">.normalsNeedUpdate</a></span></pre>
Значением по умолчанию является <tt>false</tt>.<br><br>
<pre id="4colorsNeedUpdate"><span onclick="showClick(type_bool)"><a href="#" onclick="return false" onblur="hideClick()" onmouseover="show('от англ. слов colors need update<br>- цвета, которые нужно обновить')" onmouseout="hide()">.colorsNeedUpdate</a></span></pre>
Значением по умолчанию является <tt>false</tt>.<br><br>
<pre id="4uvsNeedUpdate"><span onclick="showClick(type_bool)"><a href="#" onclick="return false" onblur="hideClick()" onmouseover="show('от англ. слов uvs need update<br>- текстурные координаты, которые нужно обновить')" onmouseout="hide()">.uvsNeedUpdate</a></span></pre>
Значением по умолчанию является <tt>false</tt>.<br><br>
<pre id="4groupsNeedUpdate"><span onclick="showClick(type_bool)"><a href="#" onclick="return false" onblur="hideClick()" onmouseover="show('от англ. слов groups need update<br>- группы, которые нужно обновить')" onmouseout="hide()">.groupsNeedUpdate</a></span></pre>
Значением по умолчанию является <tt>false</tt>.</div><br>
<h4>Методы</h4>
В данном классе возможно применение методов <tt><a href="#5" onmouseover="show('EventDispatcher')" onmouseout="hide()">EventDispatcher</a></tt>.
<div class=blockindent><br>
<pre id="4computeBoundingBox"><span onclick="showClick(type_null)"><a href="#" onclick="return false" onblur="hideClick()" onmouseover="show('от англ. слов compute bounding box<br>- вычисление ограничивающей рамки')" onmouseout="hide()">.computeBoundingBox</a></span>( )</pre>
Смотрите <tt><a href="#7Geometry.computeBoundingBox" onmouseover="show('Geometry.computeBoundingBox')" onmouseout="hide()">Geometry.computeBoundingBox</a></tt>.<br><br>
<pre id="4computeBoundingSphere"><span onclick="showClick(type_null)"><a href="#" onclick="return false" onblur="hideClick()" onmouseover="show('от англ. слов compute bounding sphere<br>- вычисление ограничивающей сферы')" onmouseout="hide()">.computeBoundingSphere</a></span>( )</pre>
Смотрите <tt><a href="#7Geometry.computeBoundingSphere" onmouseover="show('Geometry.computeBoundingSphere')" onmouseout="hide()">Geometry.computeBoundingSphere</a></tt>.<br><br>
<pre id="4computeGroups"><span onclick="showClick(type_null)"><a href="#" onclick="return false" onblur="hideClick()" onmouseover="show('от англ. слов compute bounding groups - вычисление групп')" onmouseout="hide()">.computeGroups</a></span>( <a href="#7" onmouseover="show('Geometry')" onmouseout="hide()">geometry</a> )</pre>
Вычисляет части геометрии с разными <tt>materialIndex</tt>. Смотрите <tt><a href="#2groups" onmouseover="show('BufferGeometry.groups')" onmouseout="hide()">BufferGeometry.groups</a></tt>.<br><br>
<pre id="4dispose"><span onclick="showClick(type_null)"><a href="#" onclick="return false" onblur="hideClick()" onmouseover="show('от англ. слова dispose - избавиться, устранить, выбросить, удалить')" onmouseout="hide()">.dispose</a></span>( )</pre>
Удаляет объект из памяти. Этот метод вызывается, если во время работы приложения нужно удалить <tt>directGeometry</tt>.<br><br>
<pre id="4fromGeometry"><span onclick="showClick(type_null)"><a href="#" onclick="return false" onblur="hideClick()" onmouseover="show('от англ. слова from geometry - из геометрии')" onmouseout="hide()">.fromGeometry</a></span>( <a href="#7" onmouseover="show('Geometry')" onmouseout="hide()">geometry</a> )</pre>
Переход на экземпляр <a href="#7" onmouseover="show('Geometry')" onmouseout="hide()">Geometry</a> для конвертирования.</div><br>

<h4>Исходники</h4>
<div class=blockindent><a href="https://github.com/mrdoob/three.js/blob/master/src/core/DirectGeometry.js" target="_blank">DirectGeometry.js на github.com</a></div><br><br>


<h3 id="5">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; EventDispatcher</h3>
События JavaScript для настраиваемых объектов.<br>
<a href="https://github.com/mrdoob/eventdispatcher.js" target="_blank">EventDispatcher на Гитхабе</a>.<br><br>
<h4>Пример</h4>
<pre>// Adding events to a custom object
// Добавляем события в пользовательский объект
var Car = function () {
    this.start = function () {
        this.dispatchEvent( { type: 'start', message: 'vroom vroom!' } );
    };
};<br>
// Mixin the EventDispatcher.prototype with the custom object prototype
// Объединяем EventDispatcher.prototype с прототипом пользовательского объекта
Object.assign( Car.prototype, EventDispatcher.prototype );<br>
// Using events with the custom object
// Использование событий с пользовательским объектом
var car = new Car();
car.addEventListener( 'start', function ( event ) {
    alert( event.message );
} );<br>
car.start();</pre><br>
<h4>Конструктор</h4>
<pre><span class="lnk" onmouseover="show('от англ. слов add event dispatcher - диспетчер событий')" onmouseout="hide()">EventDispatcher</span>()</pre>
Создает объект <tt>EventDispatcher</tt>.<br><br>
<h4>Методы</h4>
<div class=blockindent><br>
<pre id="5addEventListener"><span onclick="showClick(type_null)"><a href="#" onclick="return false" onblur="hideClick()" onmouseover="show('от англ. слов add event listener<br>- добавить приемник событий')" onmouseout="hide()">.addEventListener</a></span>( <span onclick="showClick(type_string)"><a href="#" onclick="return false" onblur="hideClick()" onmouseover="show('от англ. слова type - тип')" onmouseout="hide()">type</a></span>, <span onclick="showClick(type_func)"><a href="#" onclick="return false" onblur="hideClick()" onmouseover="show('от англ. слова listener - слушатель, приемник')" onmouseout="hide()">listener</a></span> )</pre>
<div class=list><tt>type</tt> - тип принимаемого события.</div>
<div class=list><tt>listener</tt> - функция, вызываемая при запуске события.</div>
Добавляет приемник к типу события.<br><br>
<pre id="5hasEventListener"><span onclick="showClick(type_bool)"><a href="#" onclick="return false" onblur="hideClick()" onmouseover="show('от англ. слов has event listener<br>- имеется приемник событий')" onmouseout="hide()">hasEventListener</a></span>( <span onclick="showClick(type_string)"><a href="#" onclick="return false" onblur="hideClick()" onmouseover="show('от англ. слова type - тип')" onmouseout="hide()">type</a></span>, <span onclick="showClick(type_func)"><a href="#" onclick="return false" onblur="hideClick()" onmouseover="show('от англ. слова listener - слушатель, приемник')" onmouseout="hide()">listener</a></span> )</pre>
<div class=list><tt>type</tt> - тип принимаемого события.</div>
<div class=list><tt>listener</tt> - функция, вызываемая при запуске события.</div>
Проверяет, добавлен ли приемник к типу события.<br><br>
<pre id="5removeEventListener"><span onclick="showClick(type_null)"><a href="#" onclick="return false" onblur="hideClick()" onmouseover="show('от англ. слов remove event listener<br>- удалить приемник событий')" onmouseout="hide()">removeEventListenerremove</a></span>( <span onclick="showClick(type_string)"><a href="#" onclick="return false" onblur="hideClick()" onmouseover="show('от англ. слова type - тип')" onmouseout="hide()">type</a></span>, <span onclick="showClick(type_func)"><a href="#" onclick="return false" onblur="hideClick()" onmouseover="show('от англ. слова listener - слушатель, приемник')" onmouseout="hide()">listener</a></span> )</pre>
<div class=list><tt>type</tt> - тип приемника удаляемого события.</div>
<div class=list><tt>listener</tt> - функция удаляемого приемника.</div>
Удаляет приемник с типом события.<br><br>
<pre id="5dispatchEvent"><span onclick="showClick(type_null)"><a href="#" onclick="return false" onblur="hideClick()" onmouseover="show('от англ. слов dispatch event - рассылка события')" onmouseout="hide()">dispatchEvent</a></span>( <span onclick="showClick(type_obj)"><a href="#" onclick="return false" onblur="hideClick()" onmouseover="show('от англ. слова event - событие')" onmouseout="hide()">event</a></span> )</pre>
<div class=list><tt>event</tt> - запускаемое событие.</div>
Запускает тип события.</div><br>

<h4>Исходники</h4>
<div class=blockindent><a href="https://github.com/mrdoob/three.js/blob/master/src/core/EventDispatcher.js" target="_blank">EventDispatcher.js на github.com</a></div><br><br>


<h3 id="6">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; Face3</h3>
Треугольная грань, используемая в <a href="#7" onmouseover="show('Geometry')" onmouseout="hide()"><tt>Geometry</tt></a>. Грани создаются автоматически для всех стандартных типов геометрии, однако, если строится нестандартная геометрия, их придется создавать вручную.<br><br>

<h4>Пример</h4><br>
<pre>var material = new THREE.MeshStandardMaterial( { color : 0x00cc00 } );<br>
// create a triangular geometry
// создадим геометрию треугольника
var geometry = new THREE.Geometry();
geometry.vertices.push( new THREE.Vector3( -50, -50, 0 ) );
geometry.vertices.push( new THREE.Vector3(  50, -50, 0 ) );
geometry.vertices.push( new THREE.Vector3(  50,  50, 0 ) );<br>
// create a new face using vertices 0, 1, 2
// создаем новую грань, используя вершины 0, 1, 2
var normal = new THREE.Vector3( 0, 1, 0 ); // optional (необязательно)
var color = new THREE.Color( 0xffaa00 ); // optional (необязательно)
var materialIndex = 0; // optional (необязательно)
var face = new THREE.Face3( 0, 1, 2, normal, color, materialIndex );<br>
// add the face to the geometry's faces array
// добавляем грань к массиву граней геометрии
geometry.faces.push( face );<br>
// the face normals and vertex normals can be calculated automatically if not supplied above
// если выше не предоставлено, то нормали граней и вершин могут вычисляться автоматически
geometry.computeFaceNormals();
geometry.computeVertexNormals();<br>
scene.add( new THREE.Mesh( geometry, material ) );</pre>

<h5>Другие примеры:</h5>
<pre><a href="https://threejs.org/examples/#misc_ubiquity_test" target="_blank">ubiquity / test</a>
<a href="https://threejs.org/examples/#svg_sandbox" target="_blank">svg / sandbox</a>
<a href="https://threejs.org/examples/#webgl_exporter_obj" target="_blank">WebGL / exporter / obj</a>
<a href="https://threejs.org/examples/#webgl_shaders_vector" target="_blank">WebGL / shaders / vector</a></pre><br>

<h4>Конструктор</h4><br>
<pre>Face3( <span onclick="showClick(type_int)"><a href="#" onclick="return false" onblur="hideClick()" onmouseover="show('здесь начальными буквами англ. алфавита обозначены вершины треугольной грани<br>- ячейки сетки-арматуры, из которой состоят все грани геометрического элемента')" onmouseout="hide()">a</a></span>, <span onclick="showClick(type_int)"><a href="#" onclick="return false" onblur="hideClick()" onmouseover="show('здесь начальными буквами англ. алфавита обозначены вершины треугольной грани<br>- ячейки сетки-арматуры, из которой состоят все грани геометрического элемента')" onmouseout="hide()">b</a></span>, <span onclick="showClick(type_int)"><a href="#" onclick="return false" onblur="hideClick()" onmouseover="show('здесь начальными буквами англ. алфавита обозначены вершины треугольной грани<br>- ячейки сетки-арматуры, из которой состоят все грани геометрического элемента')" onmouseout="hide()">c</a></span>, <a href="math.htm#19" onmouseover="show('Vector3.<br>normal - нормаль')" onmouseout="hide()">normal</a>, <span onclick="showClick(type_color)"><a href="#" onclick="return false" onblur="hideClick()" onmouseover="show('color - цвет')" onmouseout="hide()">color</a></span>, <span onclick="showClick(type_int)"><a href="#" onclick="return false" onblur="hideClick()" onmouseover="show('material index - индекс материала')" onmouseout="hide()">materialIndex</a></span> )</pre>
<div class=list><tt>a</tt> — индекс вершины A.</div>
<div class=list><tt>b</tt> — индекс вершины B.</div>
<div class=list><tt>c</tt> — индекс вершины C.</div>
<div class=list><tt>normal</tt> — нормаль грани или массив нормалей вершин.</div>
<div class=list><tt>color</tt> — цвет грани или массив цветов вершин.</div>
<div class=list><tt>materialIndex</tt> — это индекс массива материалов, связанного с данной гранью (дополнительный, необязательный аргумент).</div><br>

<h4>Свойства</h4>
<div class=blockindent><br>
<pre id="6a"><span onclick="showClick(type_int)"><a href="#" onclick="return false" onblur="hideClick()" onmouseover="show('здесь начальными буквами англ. алфавита обозначены вершины треугольной грани<br>- ячейки сетки-арматуры, из которой состоят все грани геометрического элемента')" onmouseout="hide()">.a</a></span></pre>
Индекс вершины A.<br><br>
<pre id="6b"><span onclick="showClick(type_int)"><a href="#" onclick="return false" onblur="hideClick()" onmouseover="show('здесь начальными буквами англ. алфавита обозначены вершины треугольной грани<br>- ячейки сетки-арматуры, из которой состоят все грани геометрического элемента')" onmouseout="hide()">.b</a></span></pre>
Индекс вершины B.<br><br>
<pre id="6c"><span onclick="showClick(type_int)"><a href="#" onclick="return false" onblur="hideClick()" onmouseover="show('здесь начальными буквами англ. алфавита обозначены вершины треугольной грани<br>- ячейки сетки-арматуры, из которой состоят все грани геометрического элемента')" onmouseout="hide()">.c</a></span></pre>
Индекс вершины C.<br><br>
<pre id="6normal"><a href="math.htm#19" onmouseover="show('Vector3.<br>normal - нормаль')" onmouseout="hide()">.normal</a></pre>
Нормаль грани - вектор, представляющий направление данной грани (Face3).
При автоматическом вычислении (используется метод <tt><a href="#7computeFaceNormals" onmouseover="show('Geometry.computeFaceNormals')" onmouseout="hide()">Geometry.computeFaceNormals</a></tt>),
это будет нормализованное <a href="https://ru.wikipedia.org/wiki/%D0%92%D0%B5%D0%BA%D1%82%D0%BE%D1%80%D0%BD%D0%BE%D0%B5_%D0%BF%D1%80%D0%BE%D0%B8%D0%B7%D0%B2%D0%B5%D0%B4%D0%B5%D0%BD%D0%B8%D0%B5" target="_blank">векторное произведение</a> двух сторон треугольника.
Значением по умолчанию является <tt>(0, 0, 0)</tt>.<br><br>
<pre id="6color"><a href="math.htm#3" onmouseover="show('Color.<br>color - цвет')" onmouseout="hide()">.color</a></pre>
Цвет грани - при этом должно использоваться свойство материала <tt><a href="materials.htm#3vertexColors" onmouseover="show('Material.vertexColors')" onmouseout="hide()">vertexColors</a></tt>,
установленное как <tt><a href="constants.htm#5.2" onmouseover="show('константа материала')" onmouseout="hide()">THREE.FaceColors</a></tt>. <br><br>
<pre id="6vertexNormals"><span onclick="showClick(type_array)"><a href="#" onclick="return false" onblur="hideClick()" onmouseover="show('vertex normals - нормали вершин')" onmouseout="hide()">.vertexNormals</a></span></pre>
Массив из 3 <a href="math.htm#19" onmouseover="show('Vector3')" onmouseout="hide()">нормалей вершин</a>.<br><br>
<pre id="6vertexColors"><span onclick="showClick(type_array)"><a href="#" onclick="return false" onblur="hideClick()" onmouseover="show('vertex colors - цвета вершин')" onmouseout="hide()">.vertexColors</a></span></pre>
Массив из 3 цветов вершин - при этом должно использоваться свойство материала <tt><a href="materials.htm#3vertexColors" onmouseover="show('Material.vertexColors')" onmouseout="hide()">vertexColors</a></tt>,
установленное как <tt><a href="constants.htm#5.2" onmouseover="show('константа материала')" onmouseout="hide()">THREE.VertexColors</a></tt>.<br><br>

<pre id="6materialIndex"><span onclick="showClick(type_int)"><a href="#" onclick="return false" onblur="hideClick()" onmouseover="show('material index - индекс материала')" onmouseout="hide()">.materialIndex</a></span></pre>
Индекс материала (показывает индекс в массиве материалов, связанном с гранью). Значение по умолчанию равно <tt>0</tt>.</div><br>

<h4>Методы</h4>
<div class=blockindent><br>
<pre id="6clone"><a href="6" onmouseover="show('Face3.<br>clone - клонировать')" onmouseout="hide()">.clone</a>( )</pre>
Создает новый клон объекта Face3.<br><br>
<pre id="6copy"><a href="6" onmouseover="show('Face3.<br>copy - копировать')" onmouseout="hide()">.copy</a>( <a href="6" onmouseover="show('Face3')" onmouseout="hide()">face3</a> )</pre>
Копирует в эту треугольную грань параметры другой треугольной грани (переданной в аргументе <tt>face3</tt>).</div><br>

<h4>Исходники</h4>
<div class=blockindent><a href="https://github.com/mrdoob/three.js/blob/master/src/core/Face3.js" target="_blank">Face3.js на github.com</a></div><br><br>


<h3 id="7">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; Geometry</h3>
Основной класс для всех геометрий (но не для <a href="#2" onmouseover="show('BufferGeometry')" onmouseout="hide()">BufferGeometries</a>). Также его можно использовать напрямую для построения собственных и нестандартных геометрий.<br>
С Geometry работать легче, чем с <a href="#2" onmouseover="show('BufferGeometry')" onmouseout="hide()">BufferGeometries</a>, так как она хранит атрибуты, такие как вершины, грани, цвета и тому подобное непосредственно у себя (а не в буферах), хотя она, как правило, работает медленней.<br><br>

<h4>Пример</h4>
<pre>var geometry = new THREE.Geometry();<br>
geometry.vertices.push(
	new THREE.Vector3( -10,  10, 0 ),
	new THREE.Vector3( -10, -10, 0 ),
	new THREE.Vector3(  10, -10, 0 )
);<br>
geometry.faces.push( new THREE.Face3( 0, 1, 2 ) );<br>
geometry.computeBoundingSphere();</pre>
<h5>Другие примеры:</h5>
<pre><a href="https://threejs.org/examples/#webgl_geometry_minecraft" target="_blank">WebGL / geometry / minecraft</a>,
<a href="https://threejs.org/examples/#webgl_geometry_minecraft_ao" target="_blank">WebGL / geometry / minecraft / ao</a>,
<a href="https://threejs.org/examples/#webgl_geometry_nurbs" target="_blank">WebGL / geometry / nurbs</a>,
<a href="https://threejs.org/examples/#webgl_geometry_spline_editor" target="_blank">WebGL / geometry / spline / editor</a>,
<a href="https://threejs.org/examples/#webgl_interactive_cubes_gpu" target="_blank">WebGL / interactive / cubes / gpu</a>,
<a href="https://threejs.org/examples/#webgl_interactive_lines" target="_blank">WebGL / interactive / lines</a>,
<a href="https://threejs.org/examples/#webgl_interactive_raycasting_points" target="_blank">WebGL / interactive / raycasting / points</a>,
<a href="https://threejs.org/examples/#webgl_interactive_voxelpainter" target="_blank">WebGL / interactive / voxelpainter</a>,
<a href="https://threejs.org/examples/#webgl_morphnormals" target="_blank">WebGL / morphNormals</a>.</pre><br>

<h4>Конструктор</h4>
<pre>Geometry()</pre>
Конструктор не принимает аргументов.<br><br>

<h4>Свойства</h4>
<div class=blockindent><br>
<pre id="7boundingBox"><a href="math.htm#2" onmouseover="show('от англ. слова bounding box - ограничительная рамка')" onmouseout="hide()">.boundingBox</a></pre>
Ограничительная рамка для Geometry, которую можно вычислить методом <tt><a href="#7computeBoundingBox" onmouseover="show('Geometry.computeBoundingBox')" onmouseout="hide()">computeBoundingBox</a></tt>. Значением по умолчанию является <tt>null</tt>.<br><br>

<pre id="7boundingSphere"><a href="math.htm#2" onmouseover="show('от англ. слова bounding sphere - ограничительная сфера')" onmouseout="hide()">.boundingSphere</a></pre>
Ограничительная сфера для Geometry, которую можно вычислить методом <tt><a href="#7computeBoundingSphere" onmouseover="show('Geometry.computeBoundingSphere')" onmouseout="hide()">computeBoundingSphere</a></tt>. Значением по умолчанию является <tt>null</tt>.<br><br>

<pre id="7colors"><span onclick="showClick(type_array)"><a href="#" onclick="return false" onblur="hideClick()" onmouseover="show('от англ. слова colors - цвета')" onmouseout="hide()">.colors</a></span></pre>
Массив значений <a href="math.htm#3" onmouseover="show('Color')" onmouseout="hide()">цвета</a> вершин, в соответствии с их числом и порядком.<br>
Это свойство используется классами <a href="objects.htm#9" onmouseover="show('Points - точки')" onmouseout="hide()">Points</a> и <a href="objects.htm#4" onmouseover="show('Line - линия')" onmouseout="hide()">Line</a>,
а также любыми классами, производными от их, такими как <a href="objects.htm#6" onmouseover="show('LineSegments - отрезки линии')" onmouseout="hide()">LineSegments</a> и различными <a href="helpers.htm" onmouseover="show('helpers - помощники')" onmouseout="hide()">вспомогательными элементами</a>.
<a href="objects.htm#7" onmouseover="show('Mesh - сетка')" onmouseout="hide()">Сетки</a> взамен этого свойства используют <a href="#6" onmouseover="show('Face3.vertexColors - цвета вершин треугольной грани')" onmouseout="hide()">Face3.vertexColors</a>.<br>
Чтобы задать обновление этого массива, нужно установить свойство <a href="#7colorsNeedUpdate">Geometry.colorsNeedUpdate</a> как <tt>true</tt>.<br><br>

<pre id="7faces"><span onclick="showClick(type_array)"><a href="#" onclick="return false" onblur="hideClick()" onmouseover="show('от англ. слова faces - грани')" onmouseout="hide()">.faces</a></span></pre>
Массив <a href="#6" onmouseover="show('Face3')" onmouseout="hide()">граней</a>.<br>
Массив граней описывает, как для формирования граней соединяется каждая вершина модели. Кроме того, в нем содержится информация о цвете и нормалях граней и вершин.<br>
Чтобы задать обновление этого массива, нужно установить свойство <a href="#7elementsNeedUpdate" onmouseover="show('Geometry.elementsNeedUpdate')" onmouseout="hide()">elementsNeedUpdate</a> как <tt>true</tt>.<br><br>

<pre id="7faceVertexUvs"><span onclick="showClick(type_array)"><a href="#" onclick="return false" onblur="hideClick()" onmouseover="show('face vertex UVs - координаты UV вершин граней')" onmouseout="hide()">.faceVertexUvs</a></span></pre>
Массив <a href="https://en.wikipedia.org/wiki/UV_mapping" target="_blank">слоев UV-координат</a> грани, используемый для <span class="lnk" onmouseover="show('т.е. отображения текстуры на геометрическом<br>элементе в соответствующем порядке, в данном<br>случае, изображение накладывается по<br>координатам UV')" onmouseout="hide()">картирования</span> текстур на геометрическом элементе. Каждый UV-слой является массивом UV-координат, соответствующих порядку и количеству вершин в гранях.<br>Вот эта статья Википедии о <a href="https://ru.wikipedia.org/wiki/UV-%D0%BF%D1%80%D0%B5%D0%BE%D0%B1%D1%80%D0%B0%D0%B7%D0%BE%D0%B2%D0%B0%D0%BD%D0%B8%D0%B5" target="_blank">UV-преобразовании</a> на русском языке.<br>
Чтобы задать обновление этого массива, нужно установить свойство <tt><a href="#7uvsNeedUpdate" onmouseover="show('Geometry.uvsNeedUpdate')" onmouseout="hide()">uvsNeedUpdate</a></tt> как <tt>true</tt>.<br><br>

<pre id="7id"><span onclick="showClick(type_int)"><a href="#" onclick="return false" onblur="hideClick()" onmouseover="show('сокр. англ. слова identifier - идентификатор')" onmouseout="hide()">.id</a></span></pre>
Уникальный номер для данного экземпляра геометрии.<br><br>

<pre id="7isGeometry"><span onclick="showClick(type_bool)"><a href="#" onclick="return false" onblur="hideClick()" onmouseover="show('от англ. слов is geometry - является геометрией')" onmouseout="hide()">.isGeometry</a></span></pre>
Используется для проверки, является ли данный класс и его производные геометриями. Значением по умолчанию является <tt>true</tt>.<br>
Не изменяйте это свойство, так как оно используется для оптимизации внутри <em>three.js</em>.<br><br>

<pre id="7lineDistances"><span onclick="showClick(type_array)"><a href="#" onclick="return false" onblur="hideClick()" onmouseover="show('от англ. слов line distances - линейные расстояния')" onmouseout="hide()">.lineDistances</a></span></pre>
Массив содержит расстояния между вершинами для геометрий Line. Они нужны для правильной визуализации <a href="objects.htm#5" onmouseover="show('LineSegments')" onmouseout="hide()">LineSegments</a> / <a href="materials.htm#2" onmouseover="show('LineDashedMaterial')" onmouseout="hide()">LineDashedMaterial</a>.
Линейные расстояния могут быть сгенерированы автоматически методом <tt><a href="#7computeLineDistances" onmouseover="show('Geometry.computeLineDistances')" onmouseout="hide()">computeLineDistances</a></tt>.<br><br>

<pre id="7morphTargets"><span onclick="showClick(type_array)"><a href="#" onclick="return false" onblur="hideClick()" onmouseover="show('сокращ. англ. слов morphing targets - цели морфинга')" onmouseout="hide()">.morphTargets</a></span></pre>
Массив из целей морфинга. Каждая цель морфинга является объектом Javascript:
<pre>{ name: "targetName", vertices: [ new THREE.Vector3(), ... ] }</pre>
Вершины морфинга соответствуют по порядку и количеству основным вершинам.<br><br>

<pre id="7morphNormals"><span onclick="showClick(type_array)"><a href="#" onclick="return false" onblur="hideClick()" onmouseover="show('сокращ. англ. слов morphing normals - нормали морфинга')" onmouseout="hide()">.morphNormals</a></span></pre>
Массив нормалей морфинга. Нормали морфинга имеют структуру подобную целям морфинга, каждый набор нормалей является объектом Javascript:
<pre>morphNormal = { name: "NormalName", normals: [ new THREE.Vector3(), ... ] }</pre>
Смотрите пример <a href="https://threejs.org/examples/#webgl_morphnormals" target="_blank">WebGL / morphNormals</a>.<br><br>

<pre id="7name"><span onclick="showClick(type_string)"><a href="#" onclick="return false" onblur="hideClick()" onmouseover="show('от англ. слова name - имя, название')" onmouseout="hide()">.name</a></span></pre>
Имя данной геометрии. Значением по умолчанию является пустая строка ("").<br><br>

<pre id="7skinWeights"><span onclick="showClick(type_array)"><a href="#" onclick="return false" onblur="hideClick()" onmouseover="show('skin weights - веса кожи (оболочки)')" onmouseout="hide()">.skinWeights</a></span></pre>
При работе с <a href="objects.htm#10" onmouseover="show('SkinnedMesh')" onmouseout="hide()">SkinnedMesh</a>, каждая вершина может иметь до 4 <a href="objects.htm#1" onmouseover="show('Bone')" onmouseout="hide()">костей</a>, влияющих на неё.
Свойство <tt>skinWeights</tt> - это массив значений веса, который соответствует порядку вершин данной геометрии. Так например, первый <tt>skinWeight</tt> будет соответствовать первой вершине геометрического элемента.
Поскольку каждая вершина может быть изменена 4 костями, для представления веса оболочки каждой вершины используется <a href="math.htm#20" onmouseover="show('Vector4')" onmouseout="hide()">четырехмерный вектор</a>.<br>
Значения вектора обычно должны быть в диапазоне между <tt>0</tt> и <tt>1</tt>. Например при установке значения равным <tt>0</tt>, преобразование кости не будет иметь никакого эффекта.
Если установить значение равным <tt>0.5</tt>, преобразование будет иметь эффект в 50%. При установке <tt>1</tt>, будет влияние на 100%. Если существует только одна кость, связанная с конкретной вершиной, нужно побеспокоиться только о первом компоненте приданного вектора, остальные можно проигнорировать и установить равными <tt>0</tt>.<br><br>

<pre id="7skinIndices"><span onclick="showClick(type_array)"><a href="#" onclick="return false" onblur="hideClick()" onmouseover="show('skin indices - ')" onmouseout="hide()">.skinIndices</a></span></pre>
Точно также как у свойства <tt>skinWeights</tt>, значения свойста <tt>skinIndices</tt> соответствуют вершинам геометрического элемента. Каждая вершина может иметь до четырех вершин, связанных с ней.
Поэтому, если посмотреть на первую вершину (vertex) и первый индекс оболочки (<tt>skinIndex</tt>), то они расскажут о костях, связанный с данной вершиной.
Например предположим, первая вершина имеет значение <tt>( 10.05, 30.10, 12.12 )</tt>, значением первого индекса оболочки может быть <tt>( 10, 2, 0, 0 )</tt>, а первый вес оболочки имеет значение <tt>( 0.8, 0.2, 0, 0 )</tt>.
В результате это будет воспринято первой вершиной и затем костью <tt>mesh.bones[10]</tt> и к ней применено 80% воздействия. Затем это будет воспринято костью <tt>skeleton.bones[2]</tt> и к ней применено 20% воздействия.
Последующие два значения имеют вес равный&nbsp;<tt>0</tt>, так что они не будут оказывать никакого влияния.<br><br>
Код подобного примера может выглядеть так:
<pre>// e.g. (например)
geometry.skinIndices[15] = new THREE.Vector4(   0,   5,   9, 0 );
geometry.skinWeights[15] = new THREE.Vector4( 0.2, 0.5, 0.3, 0 );<br>
// corresponds with the following vertex
// соответствует следующей вершине
geometry.vertices[15];<br>
// these bones will be used like so:
// эти кости будут использоваться вот так:
skeleton.bones[0]; // weight of 0.2 (вес 0.2)
skeleton.bones[5]; // weight of 0.5 (вес 0.5)
skeleton.bones[9]; // weight of 0.3 (вес 0.3)
skeleton.bones[10]; // weight of 0 (вес 0)</pre><br>

<pre id="7uuid"><span onclick="showClick(type_string)"><a href="#" onclick="return false" onblur="hideClick()" onmouseover="show('uuid - сокращ. англ. слов universally unique identifier<br>- универсальный уникальный идентификатор')" onmouseout="hide()">.uuid</a></span></pre>
<a href="http://en.wikipedia.org/wiki/Universally_unique_identifier" target="_blank">UUID</a> данного экземпляра объекта.
Вот статья Википедии о <a href="https://ru.wikipedia.org/wiki/UUID" target="_blank">UUID</a> на русском языке. Он присваивается автоматически и не должен редактироваться.<br><br>

<pre id="7vertices"><span onclick="showClick(type_array)"><a href="#" onclick="return false" onblur="hideClick()" onmouseover="show('vertices - вершины')" onmouseout="hide()">.vertices</a></span></pre>
Массив <a href="math.htm#19" onblur="hideClick()" onmouseover="show('Vector3')" onmouseout="hide()">вершин</a>.<br>
Массив вершин содержит положение каждой вершины геометрического элемента.
Для подачи сигнала по обновлению данного массива, значение свойства <tt><a href="#7verticesNeedUpdate" onmouseover="show('Geometry.verticesNeedUpdate')" onmouseout="hide()">verticesNeedUpdate</a></tt> должно быть установлено как <tt>true</tt>.<br><br>

<pre id="7verticesNeedUpdate"><span onclick="showClick(type_bool)"><a href="#" onclick="return false" onblur="hideClick()" onmouseover="show('vertices need update - вершинам нужно обновление')" onmouseout="hide()">.verticesNeedUpdate</a></span></pre>
Установите значение свойства как <tt>true</tt>, если <a href="#7vertices" onmouseover="show('Geometry.vertices')" onmouseout="hide()">массив вершин</a> был изменен.<br><br>

<pre id="7elementsNeedUpdate"><span onclick="showClick(type_bool)"><a href="#" onclick="return false" onblur="hideClick()" onmouseover="show('')" onmouseout="hide()">.elementsNeedUpdate</a></span></pre>
Установите значение свойства как <tt>true</tt>, если массив <a href="#7faces" onmouseover="show('Geometry.faces')" onmouseout="hide()">граней</a> был изменен.<br><br>

<pre id="7uvsNeedUpdate"><span onclick="showClick(type_bool)"><a href="#" onclick="return false" onblur="hideClick()" onmouseover="show('UVs need update - требуется обновление координат UV')" onmouseout="hide()">.uvsNeedUpdate</a></span></pre>
Установите значение свойства как <tt>true</tt>, если массив <a href="#7faceVertexUvs" onmouseover="show('Geometry.faceVertexUvs')" onmouseout="hide()">UV координат</a> был обновлен.<br><br>

<pre id="7normalsNeedUpdate"><span onclick="showClick(type_bool)"><a href="#" onclick="return false" onblur="hideClick()" onmouseover="show('normals need update - требуется обновление нормалей')" onmouseout="hide()">.normalsNeedUpdate</a></span></pre>
Установите значение свойства как <tt>true</tt>, если массив нормалей был изменен.<br><br>

<pre id="7colorsNeedUpdate"><span onclick="showClick(type_bool)"><a href="#" onclick="return false" onblur="hideClick()" onmouseover="show('colors need update - требуется обновление цвета')" onmouseout="hide()">.colorsNeedUpdate</a></span></pre>
Установите значение свойства как <tt>true</tt>, если <a href="#7colors" onmouseover="show('Geometry.colors')" onmouseout="hide()">массив цвета</a> или массив <a href="#6color" onmouseover="show('Face3.color')" onmouseout="hide()">цвета граней</a> был изменен.<br><br>

<pre id="7groupsNeedUpdate"><span onclick="showClick(type_bool)"><a href="#" onclick="return false" onblur="hideClick()" onmouseover="show('groups need update - требуется обновление групп')" onmouseout="hide()">.groupsNeedUpdate</a></span></pre>
Установите значение свойства как <tt>true</tt>, если был изменен <a href="#6materialIndex" onmouseover="show('Face3.materialIndex')" onmouseout="hide()">индекс материала треугольной грани</a>.<br><br>

<pre id="7lineDistancesNeedUpdate"><span onclick="showClick(type_bool)"><a href="#" onclick="return false" onblur="hideClick()" onmouseover="show('line distances need update - требуется<br>обновление линейных расстояний (между<br>вершинами для геометрий Line)')" onmouseout="hide()">.lineDistancesNeedUpdate</a></span></pre>
Установите значение свойства как <tt>true</tt>, если массив <a href="#7lineDistances" onmouseover="show('Geometry.lineDistances')" onmouseout="hide()">линейных расстояний</a> был изменен.</div><br>

<h4>Методы</h4>
В данном классе возможно применение методов <tt><a href="#5" onmouseover="show('EventDispatcher')" onmouseout="hide()">EventDispatcher</a></tt>.
<div class=blockindent><br>
<pre id="7applyMatrix"><span onclick="showClick(type_null)"><a href="#" onclick="return false" onblur="hideClick()" onmouseover="show('apply matrix - применить матрицу')" onmouseout="hide()">.applyMatrix</a></span>( <a href="math.htm#20" onmouseover="show('Matrix4.<br>matrix - матрица')" onmouseout="hide()">matrix</a> )</pre>
Метод передает изменение матрицы непосредственно в координаты вершин.<br><br>

<pre id="7center"><span onclick="showClick(type_null)"><a href="#" onclick="return false" onblur="hideClick()" onmouseover="show('center - центр, центрировать')" onmouseout="hide()">.center</a></span>( )</pre>
Метод центрирует геометрический элемент относительно ограничительной рамки.<br><br>

<pre id="7clone"><a href="#7" onmouseover="show('Geometry')" onmouseout="hide()">.clone</a>( )</pre>
Создает новый клон Geometry.<br>
Этот метод копирует только вершины, грани и UV-координаты. Он не копирует все остальные свойства геометрического элемента.<br><br>

<pre id="7computeBoundingBox"><span onclick="showClick(type_null)"><a href="#" onclick="return false" onblur="hideClick()" onmouseover="show('compute bounding box - рассчитать ограничительную рамку')" onmouseout="hide()">.computeBoundingBox</a></span>( )</pre>
Метод рассчитывает ограничительную рамку вокруг геометрического элемента, обновляя атрибут <tt><a href="#7boundingBox" onmouseover="show('Geometry.boundingBox')" onmouseout="hide()">boundingBox</a></tt>.<br><br>

<pre id="7computeBoundingSphere"><span onclick="showClick(type_null)"><a href="#" onclick="return false" onblur="hideClick()" onmouseover="show('compute bounding sphere - рассчитать ограничительную сферу')" onmouseout="hide()">.computeBoundingSphere</a></span>( )</pre>
Метод рассчитывает ограничительную сферу вокруг геометрического элемента, обновляя атрибут <tt><a href="#7boundingSphere" onmouseover="show('Geometry.boundingSphere')" onmouseout="hide()">boundingSphere</a></tt>.<br>
По умолчанию, ни ограничительные рамки, ни ограничительные сферы не рассчитываются. Они должны рассчитываться явно, в противном случае значения этих свойств равно <tt>null</tt>.<br><br>

<pre id="7computeFaceNormals"><span onclick="showClick(type_null)"><a href="#" onclick="return false" onblur="hideClick()" onmouseover="show('compute face normals - рассчитать нормали граней')" onmouseout="hide()">.computeFaceNormals</a></span>( )</pre>
Метод вычисляет <a href="#6normal" onmouseover="show('Face3.normal')" onmouseout="hide()">нормали граней</a>.<br><br>

<pre id="7computeFlatVertexNormals"><span onclick="showClick(type_null)"><a href="#" onclick="return false" onblur="hideClick()" onmouseover="show('compute flat vertex normals - вычислить нормали вершин плоскости')" onmouseout="hide()">.computeFlatVertexNormals</a></span>( )</pre>
Метод вычисляет <a href="#6vertexNormals" onmouseover="show('Face3.vertexNormals')" onmouseout="hide()">нормали вершин плоскости</a>. Устанавливает вершинную нормаль любой вершины каждой грани такой же, как нормаль грани.<br><br>

<pre id="7computeLineDistances"><span onclick="showClick(type_null)"><a href="#" onclick="return false" onblur="hideClick()" onmouseover="show('compute line distances - рассчитать линейные расстояния')" onmouseout="hide()">.computeLineDistances</a></span>( )</pre>
Метод вычисляет <a href="#7lineDistances" onmouseover="show('Geometry.lineDistances')" onmouseout="hide()">расстояния между вершинами</a>.<br><br>

<pre id="7computeMorphNormals"><span onclick="showClick(type_null)"><a href="#" onclick="return false" onblur="hideClick()" onmouseover="show('compute morph normals - рассчитать нормали морфинга')" onmouseout="hide()">.computeMorphNormals</a></span>( )</pre>
Метод вычисляет <a href="#7morphNormals" onmouseover="show('Geometry.morphNormals')" onmouseout="hide()">нормали морфинга</a>.<br><br>

<pre id="7computeVertexNormals"><span onclick="showClick(type_null)"><a href="#" onclick="return false" onblur="hideClick()" onmouseover="show('compute vertex normals - рассчитать нормали вершин')" onmouseout="hide()">.computeVertexNormals</a></span>( <span onclick="showClick(type_bool)"><a href="#" onclick="return false" onblur="hideClick()" onmouseover="show('area weighted - взвешенный по площади')" onmouseout="hide()">areaWeighted</a></span> )</pre>
<div class=list><tt><span onclick="showClick(type_bool)"><a href="#" onclick="return false" onblur="hideClick()" onmouseover="show('area weighted - взвешенный по площади')" onmouseout="hide()">areaWeighted</a></span></tt>
- если установлено значение <tt>true</tt>, то вклад каждой нормали грани к нормали вершины определяется по площади грани. Значением по умолчанию является <tt>true</tt>.</div>
Метод рассчитывает нормали вершин путем усреднения нормалей граней.<br><br>

<pre id="7copy"><a href="#7" onmouseover="show('Geometry.<br>copy - копировать')" onmouseout="hide()">.copy</a>( <a href="#7" onmouseover="show('Geometry')" onmouseout="hide()">geometry</a> )</pre>
Метод копирует вершины, грани и UV-координаты в данную геометрию. Никакие другие свойства не копируются.<br><br>

<pre id="7dispose"><span onclick="showClick(type_null)"><a href="#" onclick="return false" onblur="hideClick()" onmouseover="show('dispose - избавиться, устранить, выбросить')" onmouseout="hide()">.dispose</a></span>( )</pre>
Метод удаляет объект из памяти.<br>
Не забывайте вызывать этот метод при удалении геометрического элемента, так как он может привести к утечке памяти.<br><br>

<pre id="7fromBufferGeometry"><a href="#7" onmouseover="show('Geometry.<br>from buffer geometry - из буферной геометрии')" onmouseout="hide()">.fromBufferGeometry</a>( <a href="#2" onmouseover="show('BufferGeometry')" onmouseout="hide()">geometry</a> )</pre>
Метод конвертирует <a href="#2" onmouseover="show('BufferGeometry')" onmouseout="hide()">BufferGeometry</a> в Geometry.<br><br>

<pre id="7lookAt"><a href="#7" onmouseover="show('Geometry.<br>look at - смотреть на')" onmouseout="hide()">.lookAt</a>( <a href="math.htm#19" onmouseover="show('Vector3.<br>vector - вектор')" onmouseout="hide()">vector</a> )</pre>
<div class=list><tt>vector</tt> -  вектор, представляющий позицию в "мировом" пространстве, на которую должен "смотреть" геометрический элемент.</div>
Метод поворачивает этот геометрический элемент к указанной точке пространства.
Обычно выполняется как однократная операция, но не во время цикла визуализации.<br>
Для стандартного обращения к сетке в реальном времени используйте метод <tt><a href="#14lookAt" onmouseover="show('Object3D.lookAt')" onmouseout="hide()">Object3D.lookAt</a></tt>.<br><br>

<pre id="7merge"><span onclick="showClick(type_null)"><a href="#" onclick="return false" onblur="hideClick()" onmouseover="show('merge - сливать, соединять')" onmouseout="hide()">.merge</a></span>( <a href="#7" onmouseover="show('Geometry.<br>geometry - геометрический элемент')" onmouseout="hide()">geometry</a>, <a href="math.htm#11" onmouseover="show('Matrix4.<br>matrix - матрица')" onmouseout="hide()">matrix</a>, <span onclick="showClick(type_int)"><a href="#" onclick="return false" onblur="hideClick()" onmouseover="show('material index offset - смещение индекса материала')" onmouseout="hide()">materialIndexOffset</a></span> )</pre>
Метод объединяет два геометрических элемента или геометрический элемент и геометрический элемент из объекта (используя преобразование объекта).<br><br>

<pre id="7mergeMesh"><span onclick="showClick(type_null)"><a href="#" onclick="return false" onblur="hideClick()" onmouseover="show('merge mesh - объединить сетку')" onmouseout="hide()">.mergeMesh</a></span>( <a href="objects.htm#7" onmouseover="show('Mesh')" onmouseout="hide()">mesh</a> )</pre>
Метод объединяет геометрию сетки (mesh) с данным геометрическим элементом, также применяется трансформация сетки.<br><br>

<pre id="7mergeVertices"><span onclick="showClick(type_null)"><a href="#" onclick="return false" onblur="hideClick()" onmouseover="show('merge vertices - объединить вершины')" onmouseout="hide()">.mergeVertices</a></span>( )</pre>
При помощи <a href="#hash_map" onmouseover="show('хеш-таблица - hash map')" onmouseout="hide()">хеш-таблицы</a> проводится проверка вершин на дубликаты.<br>
Продублированные вершины удаляются, а вершины граней обновляются.<br><br>

<pre id="7normalize"><span onclick="showClick(type_null)"><a href="#" onclick="return false" onblur="hideClick()" onmouseover="show('normalize - нормализовать')" onmouseout="hide()">.normalize</a></span>( )</pre>
Метод нормализует геометрический элемент.<br>
Делает центрирование данного геометрического элемента и помещает его в ограничивающую сферу радиусом <tt>1.0</tt>.<br><br>

<pre id="7rotateX"><a href="#7" onmouseover="show('Geometry.<br>rotate X - повернуть вокруг оси X')" onmouseout="hide()">.rotateX</a>( <span onclick="showClick(type_float)"><a href="#" onclick="return false" onblur="hideClick()" onmouseover="show('radians - радианы')" onmouseout="hide()">radians</a></span> )</pre>
Поворот геометрического элемента вокруг оси <tt>X</tt>. Обычно он выполняется как однократная операция, но не во время цикла визуализации.<br>
Для стандартного поворота сетки (mesh) в реальном времени используйте метод <tt><a href="#14rotation" onmouseover="show('Object3D.rotation')" onmouseout="hide()">rotation</a></tt>.<br><br>

<pre id="7rotateY"><a href="#7" onmouseover="show('Geometry.<br>rotate X - повернуть вокруг оси Y')" onmouseout="hide()">.rotateY</a>( <span onclick="showClick(type_float)"><a href="#" onclick="return false" onblur="hideClick()" onmouseover="show('radians - радианы')" onmouseout="hide()">radians</a></span> )</pre>
Поворот геометрического элемента вокруг оси <tt>Y</tt>. Обычно он выполняется как однократная операция, но не во время цикла визуализации.<br>
Для стандартного поворота сетки (mesh) в реальном времени используйте метод <tt><a href="#14rotation" onmouseover="show('Object3D.rotation')" onmouseout="hide()">rotation</a></tt>.<br><br>

<pre id="7rotateZ"><a href="#7" onmouseover="show('Geometry.<br>rotate X - повернуть вокруг оси Z')" onmouseout="hide()">.rotateZ</a>( <span onclick="showClick(type_float)"><a href="#" onclick="return false" onblur="hideClick()" onmouseover="show('radians - радианы')" onmouseout="hide()">radians</a></span> )</pre>
Поворот геометрического элемента вокруг оси <tt>Z</tt>. Обычно он выполняется как однократная операция, но не во время цикла визуализации.<br>
Для стандартного поворота сетки (mesh) в реальном времени используйте метод <tt><a href="#14rotation" onmouseover="show('Object3D.rotation')" onmouseout="hide()">rotation</a></tt>.<br><br>

<pre id="7setFromPoints"><a href="#7" onmouseover="show('Geometry.<br>set from points - установить из точек')" onmouseout="hide()">.setFromPoints</a>( <span onclick="showClick(type_array)"><a href="#" onclick="return false" onblur="hideClick()" onmouseover="show('points - точки')" onmouseout="hide()">points</a></span> )</pre>
Метод устанавливает вершины данного геометрического элемента из массива точек.<br><br>

<pre id="7sortFacesByMaterialIndex"><span onclick="showClick(type_null)"><a href="#" onclick="return false" onblur="hideClick()" onmouseover="show('sort faces by material index - сортировать грани по индексу материала')" onmouseout="hide()">.sortFacesByMaterialIndex</a></span>( )</pre>
Метод сортирует массив граней в соответствии с индексом материала. Для сложных геометрических элементов с несколкими материалами, это может привести к снижению вызовов прорисовки и улучшению производительности.<br><br>

<pre id="7scale"><a href="#7" onmouseover="show('Geometry.<br>scale - масштаб')" onmouseout="hide()">.scale</a>( <span onclick="showClick(type_float)"><a href="#" onclick="return false" onblur="hideClick()" onmouseover="show('координата x')" onmouseout="hide()">x</a></span>, <span onclick="showClick(type_float)"><a href="#" onclick="return false" onblur="hideClick()" onmouseover="show('координата y')" onmouseout="hide()">y</a></span>, <span onclick="showClick(type_float)"><a href="#" onclick="return false" onblur="hideClick()" onmouseover="show('координата z')" onmouseout="hide()">z</a></span> )</pre>
Метод масштабирует данные геометрического элемента. Обычно выполняется как однократная операция, но не во время цикла визуализации.<br>
Для обычного масштабирования сетки (mesh) в реальном времени используйте <tt><a href="#14scale" onmouseover="show('Object3D.scale')" onmouseout="hide()">Object3D.scale</a></tt>.<br><br>

<pre id="7toJSON"><span onclick="showClick('JSON')"><a href="#" onclick="return false" onblur="hideClick()" onmouseover="show('to JSON - сокр. от англ. слов to JavaScript Object<br>Notation, — то есть, в текстовый формат описания<br>объекта, основанный на JavaScript')" onmouseout="hide()">.toJSON</a></span>( )</pre>
Метод конвертирует геометрический элемент в JSON формат.<br><br>

<pre id="7translate"><a href="#7" onmouseover="show('Geometry.<br>translate - перевод, перенос')" onmouseout="hide()">.translate</a>( <span onclick="showClick(type_float)"><a href="#" onclick="return false" onblur="hideClick()" onmouseover="show('координата x')" onmouseout="hide()">x</a></span>, <span onclick="showClick(type_float)"><a href="#" onclick="return false" onblur="hideClick()" onmouseover="show('координата y')" onmouseout="hide()">y</a></span>, <span onclick="showClick(type_float)"><a href="#" onclick="return false" onblur="hideClick()" onmouseover="show('координата z')" onmouseout="hide()">z</a></span> )</pre>
Метод переставляет геометрический элемент. Обычно выполняется как однократная операция, но не во время цикла визуализации.<br>
Для обычного переноса сетки (mesh) в реальном времени используйте <tt><a href="#14position" onmouseover="show('Object3D.position')" onmouseout="hide()">Object3D.position</a></tt>.</div><br>

<h4>Исходники</h4>
<div class=blockindent><a href="https://github.com/mrdoob/three.js/blob/master/src/core/Geometry.js" target="_blank">Geometry.js на github.com</a></div><br><br>


<span class="right_side"><a href="#1" title="Переход к родительскому классу"><tt>BufferAttribute &rarr;</tt></a></span>
<h3 id="8">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; InstancedBufferAttribute</h3>
<span class="lnk" onmouseover="show('Инстанцирование (англ. instantiation) — создание экземпляра класса.<br>В отличие от слова «создание», применяется не к объекту, а к классу.<br>То есть, говорят: (в виртуальной среде) создать экземпляр класса<br>или, другими словами, инстанцировать класс.')" onmouseout="hide()">Инстанцированная</span> версия <tt><a href="#1" onmouseover="show('BufferAttribute')" onmouseout="hide()">BufferAttribute</a></tt> (то есть, это экземпляр класса <tt>BufferAttribute</tt>).
An instanced version of BufferAttribute.
<h4>Конструктор</h4>
<pre>InstancedBufferAttribute( <span onclick="showClick(type_typearray)"><a href="#" onclick="return false" onblur="hideClick()" onmouseover="show('array - массив')" onmouseout="hide()">array</a></span>, <span onclick="showClick(type_int)"><a href="#" onclick="return false" onblur="hideClick()" onmouseover="show('от англ. слов item size - размер элемента')" onmouseout="hide()">itemSize</a></span>, <span onclick="showClick(type_number)"><a href="#" onclick="return false" onblur="hideClick()" onmouseover="show('от англ. слов mesh per attribute - сетка под атрибут')" onmouseout="hide()">meshPerAttribute</a></span> )</pre><br>

<h4>Свойства</h4>
Смотрите наследуемые свойства в описании <tt><a href="#1" onmouseover="show('BufferAttribute')" onmouseout="hide()">BufferAttribute</a></tt>.
<div class=blockindent><br>
<pre id="8meshPerAttribute"><span onclick="showClick(type_number)"><a href="#" onclick="return false" onblur="hideClick()" onmouseover="show('от англ. слов mesh per attribute - ')" onmouseout="hide()">.meshPerAttribute</a></span></pre>
Значение по умолчанию равно <tt>1</tt>.<br><br>

<pre id="8isInstancedBufferAttribute"><span onclick="showClick(type_bool)"><a href="#" onclick="return false" onblur="hideClick()" onmouseover="show('от англ. слов is instanced buffer attribute<br>- является инстанцированным буферным атрибутом')" onmouseout="hide()">.isInstancedBufferAttribute</a></span></pre>
Значение по умолчанию равно <tt>true</tt>.</div><br>

<h4>Методы</h4>
Смотрите наследуемые методы в описании <tt><a href="#1" onmouseover="show('BufferAttribute')" onmouseout="hide()">BufferAttribute</a></tt>.<br><br>

<h4>Исходники</h4>
<div class=blockindent><a href="https://github.com/mrdoob/three.js/blob/master/src/core/InstancedBufferAttribute.js" target="_blank">InstancedBufferAttribute.js на github.com</a></div><br><br>


<span class="right_side"><a href="#2" title="Переход к родительскому классу"><tt>BufferGeometry &rarr;</tt></a></span>
<h3 id="9">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; InstancedBufferGeometry</h3>
<span class="lnk" onmouseover="show('Инстанцирование (англ. instantiation) — создание экземпляра класса.<br>В отличие от слова «создание», применяется не к объекту, а к классу.<br>То есть, говорят: (в виртуальной среде) создать экземпляр класса<br>или, другими словами, инстанцировать класс.')" onmouseout="hide()">Инстанцированная</span> версия <tt><a href="#2" onmouseover="show('BufferGeometry')" onmouseout="hide()">BufferGeometry</a></tt> (то есть, это экземпляр класса <tt>BufferGeometry</tt>).<br><br>
<h4>Конструктор</h4>
<pre>InstancedBufferGeometry( )</pre>

<h4>Свойства</h4>
Смотрите наследуемые свойства в описании <tt><a href="#2" onmouseover="show('BufferGeometry')" onmouseout="hide()">BufferGeometry</a></tt>.
<div class=blockindent><br>
<pre id="9maxInstancedCount"><span onclick="showClick(type_number)"><a href="#" onclick="return false" onblur="hideClick()" onmouseover="show('от англ. слов max instanced count<br>- максимальное число инстанцированных экземпляров')" onmouseout="hide()">.maxInstancedCount</a></span></pre>
Значение по умолчанию равно <tt>undefined</tt>, т.е. не определено.<br><br>
<pre id="9isInstancedBufferGeometry"><span onclick="showClick(type_bool)"><a href="#" onclick="return false" onblur="hideClick()" onmouseover="show('от англ. слов is instanced buffer geometry<br>- является инстанцированной буферной геометрией')" onmouseout="hide()">.isInstancedBufferGeometry</a></span></pre>
Значение по умолчанию равно <tt>true</tt>.</div><br>

<h4>Методы</h4>
Смотрите наследуемые методы в описании <tt><a href="#2" onmouseover="show('BufferGeometry')" onmouseout="hide()">BufferGeometry</a></tt>.
<div class=blockindent><br>
<pre id="9addGroup"><span onclick="showClick(type_number)"><a href="#" onclick="return false" onblur="hideClick()" onmouseover="show('от англ. слов add group - добавить группу')" onmouseout="hide()">.addGroup</a></span>( start, count, materialIndex )</pre>
</div><br>

<h4>Исходники</h4>
<div class=blockindent><a href="https://github.com/mrdoob/three.js/blob/master/src/core/InstancedBufferGeometry.js" target="_blank">InstancedBufferGeometry.js на github.com</a></div><br><br>


<span class="right_side"><a href="core.htm#11" title="Переход к родительскому классу"><tt>InterleavedBuffer &rarr;</tt></a></span>
<h3 id="10">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; InstancedInterleavedBuffer</h3>
Инстанцированная версия <tt><a href="#11" onmouseover="show('InterleavedBuffer')" onmouseout="hide()">InterleavedBuffer</a></tt>.
<h4>Конструктор</h4>
<pre>InstancedInterleavedBuffer( <span onclick="showClick(type_typearray)"><a href="#" onclick="return false" onblur="hideClick()" onmouseover="show('array - массив')" onmouseout="hide()">array</a></span>, <span onclick="showClick(type_int)"><a href="#" onclick="return false" onblur="hideClick()" onmouseover="show('от англ. слов item size - размер элемента')" onmouseout="hide()">itemSize</a></span>, <span onclick="showClick(type_number)"><a href="#" onclick="return false" onblur="hideClick()" onmouseover="show('от англ. слов mesh per attribute - сетка по атрибуту')" onmouseout="hide()">meshPerAttribute</a></span> )</pre><br>

<h4>Свойства</h4>
Смотрите наследуемые свойства в описании <tt><a href="#11" onmouseover="show('InterleavedBuffer')" onmouseout="hide()">InterleavedBuffer</a></tt>.
<div class=blockindent><br>
<pre id="10meshPerAttribute"><span onclick="showClick(type_number)"><a href="#" onclick="return false" onblur="hideClick()" onmouseover="show('от англ. слов mesh per attribute - сетка по атрибуту')" onmouseout="hide()">.meshPerAttribute</a></span></pre>
Значение по умолчанию равно <tt>1</tt>.

<pre id="10isInstancedInterleavedBuffer"><span onclick="showClick(type_bool)"><a href="#" onclick="return false" onblur="hideClick()" onmouseover="show('от англ. слов is instanced interleaved buffer<br>- является инстанцированным, чередующимся буфером')" onmouseout="hide()">.isInstancedInterleavedBuffer</a></span></pre>
Значение по умолчанию равно <tt>true</tt>.</div>

<h4>Методы</h4>
Смотрите наследуемые методы в описании <tt><a href="#11" onmouseover="show('InterleavedBuffer')" onmouseout="hide()">InterleavedBuffer</a></tt>.<br><br>

<h4>Исходники</h4>
<div class=blockindent><a href="https://github.com/mrdoob/three.js/blob/master/src/core/InstancedInterleavedBuffer.js" target="_blank">InstancedInterleavedBuffer.js на github.com</a></div><br><br>


<h3 id="11">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; InterleavedBuffer</h3>
Слово "Interleaved" (т.е. "с чередованием") в названии означает, что несколько атрибутов
(возможно разных типов, например, <tt>position</tt> - положение, <tt>normal</tt> - нормаль, <tt>uv</tt> - UV-координаты, <tt>color</tt> - цвет) упаковываются в один-единственный буфер массива.<br>
Введение в массивы с чередованием можно найти здесь: <a href="https://blog.tojicode.com/2011/05/interleaved-array-basics.html" target="_blank">Interleaved array basics</a> (Основы массива с чередованием).<br><br>

<h4>Пример</h4>
<pre><a href="https://threejs.org/examples/#webgl_buffergeometry_points_interleaved" target="_blank">webgl / buffergeometry / points / interleaved</a></pre><br>

<h4>Конструктор</h4>
<pre>InterleavedBuffer( <span onclick="showClick(type_typearray)"><a href="#" onclick="return false" onblur="hideClick()" onmouseover="show('array - массив')" onmouseout="hide()">array</a></span>, <span onclick="showClick(type_int)"><a href="#" onclick="return false" onblur="hideClick()" onmouseover="show('stride - шаг')" onmouseout="hide()">stride</a></span> )</pre>
<div class=list><tt><span onclick="showClick(type_typearray)"><a href="#" onclick="return false" onblur="hideClick()" onmouseover="show('array - массив')" onmouseout="hide()">array</a></span></tt> -- типизированный массив с общим буфером. Содержит данные геометрического элемента.</div>
<div class=list><tt><span onclick="showClick(type_int)"><a href="#" onclick="return false" onblur="hideClick()" onmouseover="show('stride - шаг')" onmouseout="hide()">stride</a></span></tt> -- количество элементов типизированного массива, приходящихся на одну вершину.</div><br>

<h4>Свойства</h4>
<div class=blockindent><br>
<pre id="11array"><span onclick="showClick(type_typearray)"><a href="#" onclick="return false" onblur="hideClick()" onmouseover="show('array - массив')" onmouseout="hide()">.array</a></span></pre>
Типизированный массив с общим буфером. Содержит данные геометрического элемента.<br><br>

<pre id="11stride"><span onclick="showClick(type_int)"><a href="#" onclick="return false" onblur="hideClick()" onmouseover="show('stride - шаг')" onmouseout="hide()">.stride</a></span></pre>
Количество элементов типизированного массива, приходящихся на одну вершину.<br><br>

<pre id="11count"><span onclick="showClick(type_int)"><a href="#" onclick="return false" onblur="hideClick()" onmouseover="show('count - счет, подсчитывать')" onmouseout="hide()">.count</a></span></pre>
Указывает общее число элементов в массиве.<br><br>

<pre id="11dynamic"><span onclick="showClick(type_bool)"><a href="#" onclick="return false" onblur="hideClick()" onmouseover="show('dynamic - активный, динамический')" onmouseout="hide()">.dynamic</a></span></pre>
Значение по умолчанию равно <tt>false</tt>.<br><br>

<pre id="11updateRange"><span onclick="showClick(type_obj)"><a href="#" onclick="return false" onblur="hideClick()" onmouseover="show('update range - диапазон обновления')" onmouseout="hide()">.updateRange</a></span></pre>
Объект, содержащий <tt>offset</tt> (смещение) и <tt>count</tt> (счет).<br><br>

<pre id="11updateRange.offset"><span onclick="showClick(type_number)"><a href="#" onclick="return false" onblur="hideClick()" onmouseover="show('update range offset - смещение диапазона обновления')" onmouseout="hide()">.updateRange.offset</a></span></pre>
Значение по умолчанию равно <tt>0</tt>.<br><br>

<pre id="11updateRange.count"><span onclick="showClick(type_number)"><a href="#" onclick="return false" onblur="hideClick()" onmouseover="show('update range count - счет диапазона обновления')" onmouseout="hide()">.updateRange.count</a></span></pre>
Значение по умолчанию равно <tt>-1</tt>.<br><br>

<pre id="11version"><span onclick="showClick(type_int)"><a href="#" onclick="return false" onblur="hideClick()" onmouseover="show('version - версия')" onmouseout="hide()">.version</a></span></pre>
Номер версии, увеличивающийся каждый раз, когда свойство <tt>needsUpdate</tt> установливается как <tt>true</tt>.<br><br>

<pre id="11isInterleavedBuffer"><span onclick="showClick(type_bool)"><a href="#" onclick="return false" onblur="hideClick()" onmouseover="show('is interleaved buffer - является буфером с чередованием')" onmouseout="hide()">.isInterleavedBuffer</a></span></pre>
Значение по умолчанию равно <tt>true</tt>.<br><br>

<pre id="11needsUpdate"><span onclick="showClick(type_bool)"><a href="#" onclick="return false" onblur="hideClick()" onmouseover="show('needs update - нуждается в обновлении')" onmouseout="hide()">.needsUpdate</a></span></pre>
Значение по умолчанию равно <tt>false</tt>. Установка этого свойства как <tt>true</tt> увеличивает значение свойства <tt><a href="#11version" onmouseover="show('InterleavedBuffer.version')" onmouseout="hide()">version</a></tt>.</div><br>

<h4>Методы</h4>
<div class=blockindent><br>
<pre id="11setArray"><span onclick="showClick(type_null)"><a href="#" onclick="return false" onblur="hideClick()" onmouseover="show('set array - установить массив')" onmouseout="hide()">.setArray</a></span>( <span onclick="showClick(type_typearray)"><a href="#" onclick="return false" onblur="hideClick()" onmouseover="show('array - массив')" onmouseout="hide()">array</a></span> )</pre>
<div class=list><tt>array</tt> - должен быть типизированным массивом.</div><br>

<pre id="11setDynamic"><a href="#11" onmouseover="show('InterleavedBuffer.<br>set dynamic - установить свойство dynamic')" onmouseout="hide()">.setDynamic</a>( <span onclick="showClick(type_bool)"><a href="#" onclick="return false" onblur="hideClick()" onmouseover="show('value - значение')" onmouseout="hide()">value</a></span> )</pre>
Устанавливает в свойство <tt><a href="#11dynamic" onmouseover="show('InterleavedBuffer.dynamic')" onmouseout="hide()">dynamic</a></tt> значение, приведенное в аргументе <tt>value</tt>.<br><br>

<pre id="11copy"><a href="#11" onmouseover="show('InterleavedBuffer.<br>copy - копировать')" onmouseout="hide()">.copy</a>( <a href="#11" onmouseover="show('InterleavedBuffer.<br>source - исходник, источник')" onmouseout="hide()">source</a> )</pre>
Копирует InterleavedBuffer, приведенный в аргументе <tt>source</tt>, в данный InterleavedBuffer.<br><br>

<pre id="11copyAt"><a href="#11" onmouseover="show('InterleavedBuffer.<br>copy at - копировать в')" onmouseout="hide()">.copyAt</a>( index1, attribute, index2 )</pre>
Метод копирует данные из <tt><span class="lnk" onmouseover="show('значение с индексом <tt>index2</tt> из массива по имени <tt>attribute</tt>')" onmouseout="hide()">attribute[index2]</span></tt> в <tt><span class="lnk" onmouseover="show('на место в массиве <tt>array</tt> с индексом <tt>index1</tt>')" onmouseout="hide()">array[index1]</span></tt>.<br><br>

<pre id="11set"><a href="#11" onmouseover="show('InterleavedBuffer.<br>set - установить')" onmouseout="hide()">.set</a>( <span onclick="showClick(type_typearray)"><a href="#" onclick="return false" onblur="hideClick()" onmouseover="show('value - значение')" onmouseout="hide()">value</a></span>, <span onclick="showClick(type_int)"><a href="#" onclick="return false" onblur="hideClick()" onmouseover="show('offset - смещение')" onmouseout="hide()">offset</a></span> )</pre>
<div class=list><tt><span onclick="showClick(type_typearray)"><a href="#" onclick="return false" onblur="hideClick()" onmouseover="show('value - значение')" onmouseout="hide()">value</a></span></tt> - исходный (типизированный) массив.</div>
<div class=list><tt><span onclick="showClick(type_int)"><a href="#" onclick="return false" onblur="hideClick()" onmouseover="show('offset - смещение')" onmouseout="hide()">offset</a></span></tt>
- смещение в целевом массиве, с которого начинается запись значений из исходного массива. Значение по умолчанию равно <tt>0</tt>.</div>
Сохраняет несколько значений в буфер, считывая входные значения из указанного массива.<br><br>
		
<pre id="11clone"><a href="#11" onmouseover="show('InterleavedBuffer.<br>clone - клон, клонировать')" onmouseout="hide()">.clone</a>( )</pre>
Создает клон данного InterleavedBuffer.</div><br>

<h4>Исходники</h4>
<div class=blockindent><a href="https://github.com/mrdoob/three.js/blob/master/src/core/InterleavedBuffer.js" target="_blank">InterleavedBuffer.js на github.com</a></div><br><br>


<h3 id="12">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; InterleavedBufferAttribute</h3>
<h4>Конструктор</h4>
<pre>InterleavedBufferAttribute( <a href="#11" onmouseover="show('InterleavedBuffer')" onmouseout="hide()">interleavedBuffer</a>, <span onclick="showClick(type_int)"><a href="#" onclick="return false" onblur="hideClick()" onmouseover="show('item size - размер элемента')" onmouseout="hide()">itemSize</a></span>, <span onclick="showClick(type_int)"><a href="#" onclick="return false" onblur="hideClick()" onmouseover="show('offset - смещение')" onmouseout="hide()">offset</a></span>, <span onclick="showClick(type_bool)"><a href="#" onclick="return false" onblur="hideClick()" onmouseover="show('normalized - нормализованный')" onmouseout="hide()">normalized</a></span> )</pre><br>

<h4>Свойства</h4>
<div class=blockindent><br>
<pre id="12data"><a href="#11" onmouseover="show('InterleavedBuffer.<br>data - данные')" onmouseout="hide()">.data</a></pre>
Экземпляр <tt><a href="#11" onmouseover="show('InterleavedBuffer')" onmouseout="hide()">InterleavedBuffer</a></tt> переданный в конструкторе.<br><br>

<pre id="12array"><span onclick="showClick(type_typearray)"><a href="#" onclick="return false" onblur="hideClick()" onmouseover="show('array - массив')" onmouseout="hide()">.array</a></span></pre>
Значение <tt><a href="#12data" onmouseover="show('InterleavedBufferAttribute.data')" onmouseout="hide()">data</a>.array</tt>.<br><br>

<pre id="12count"><span onclick="showClick(type_int)"><a href="#" onclick="return false" onblur="hideClick()" onmouseover="show('count - счет')" onmouseout="hide()">.count</a></span></pre>
Значение <tt><a href="#12data" onmouseover="show('InterleavedBufferAttribute.data')" onmouseout="hide()">data</a>.count</tt>.
Если буфер хранит трехкомпонентный элемент (такой как <tt>position</tt> - положение, <tt>normal</tt> - нормаль, или <tt>color</tt> - цвет), то здесь будет подсчитываться число сохранённых подобных элементов.<br><br>

<pre id="12itemSize"><span onclick="showClick(type_int)"><a href="#" onclick="return false" onblur="hideClick()" onmouseover="show('item size - размер элемента')" onmouseout="hide()">.itemSize</a></span></pre>
Количество значений, составляющих каждый элемент.<br><br>

<pre id="12offset"><span onclick="showClick(type_int)"><a href="#" onclick="return false" onblur="hideClick()" onmouseover="show('offset - смещение')" onmouseout="hide()">.offset</a></span></pre>
Смещение в базовом буфере массива, с которого начинается элемент.<br><br>

<pre id="12normalized"><span onclick="showClick(type_bool)"><a href="#" onclick="return false" onblur="hideClick()" onmouseover="show('normalized - нормализованный')" onmouseout="hide()">.normalized</a></span></pre>
Значение по умолчанию равно <tt>false</tt>.<br><br>

<pre id="12isInterleavedBufferAttribute"><span onclick="showClick(type_bool)"><a href="#" onclick="return false" onblur="hideClick()" onmouseover="show('is interleaved buffer attribute - является атрибутом буфера с чередованием')" onmouseout="hide()">.isInterleavedBufferAttribute</a></span></pre>
Значение по умолчанию равно <tt>true</tt>.</div><br>

<h4>Методы</h4>
<div class=blockindent><br>
<pre id="12getX"><span onclick="showClick(type_null)"><a href="#" onclick="return false" onblur="hideClick()" onmouseover="show('get X - получить (компонент) X')" onmouseout="hide()">.getX</a></span>( index )</pre>
Метод возвращает компонент <tt>x</tt> элемента по индексу, приведенному в аргументе <tt>index</tt>.<br><br>

<pre id="12getY"><span onclick="showClick(type_null)"><a href="#" onclick="return false" onblur="hideClick()" onmouseover="show('get Y - получить (компонент) Y')" onmouseout="hide()">.getY</a></span>( index )</pre>
Метод возвращает компонент <tt>y</tt> элемента по индексу, приведенному в аргументе <tt>index</tt>.<br><br>

<pre id="12getZ"><span onclick="showClick(type_null)"><a href="#" onclick="return false" onblur="hideClick()" onmouseover="show('get Z - получить (компонент) Z')" onmouseout="hide()">.getZ</a></span>( index )</pre>
Метод возвращает компонент <tt>z</tt> элемента по индексу, приведенному в аргументе <tt>index</tt>.<br><br>

<pre id="12getW"><span onclick="showClick(type_null)"><a href="#" onclick="return false" onblur="hideClick()" onmouseover="show('get W - получить (компонент) W')" onmouseout="hide()">.getW</a></span>( index )</pre>
Метод возвращает компонент <tt>w</tt> элемента по индексу, приведенному в аргументе <tt>index</tt>.<br><br>

<pre id="12setX"><span onclick="showClick(type_null)"><a href="#" onclick="return false" onblur="hideClick()" onmouseover="show('set X - установить (компонент) X')" onmouseout="hide()">.setX</a></span>( index, x )</pre>
Метод устанавливает компонент <tt>x</tt> элемента по индексу, приведенному в аргументе <tt>index</tt>.<br><br>

<pre id="12setY"><span onclick="showClick(type_null)"><a href="#" onclick="return false" onblur="hideClick()" onmouseover="show('set Y - установить (компонент) Y')" onmouseout="hide()">.setY</a></span>( index, y )</pre>
Метод устанавливает компонент <tt>y</tt> элемента по индексу, приведенному в аргументе <tt>index</tt>.<br><br>

<pre id="12setZ"><span onclick="showClick(type_null)"><a href="#" onclick="return false" onblur="hideClick()" onmouseover="show('set Z - установить (компонент) Z')" onmouseout="hide()">.setZ</a></span>( index, z )</pre>
Метод устанавливает компонент <tt>z</tt> элемента по индексу, приведенному в аргументе <tt>index</tt>.<br><br>

<pre id="12setW"><span onclick="showClick(type_null)"><a href="#" onclick="return false" onblur="hideClick()" onmouseover="show('set W - установить (компонент) W')" onmouseout="hide()">.setW</a></span>( index, w )</pre>
Метод устанавливает компонент <tt>w</tt> элемента по индексу, приведенному в аргументе <tt>index</tt>.<br><br>

<pre id="12setXY"><span onclick="showClick(type_null)"><a href="#" onclick="return false" onblur="hideClick()" onmouseover="show('set X Y - установить (компоненты) X и Y')" onmouseout="hide()">.setXY</a></span>( index, x, y )</pre>
Метод устанавливает компоненты <tt>x</tt> и <tt>y</tt> элемента по индексу, приведенному в аргументе <tt>index</tt>.<br><br>

<pre id="12setXYZ"><span onclick="showClick(type_null)"><a href="#" onclick="return false" onblur="hideClick()" onmouseover="show('set X Y Z - установить (компоненты) X Y и Z')" onmouseout="hide()">.setXYZ</a></span>( index, x, y, z )</pre>
Метод устанавливает компоненты <tt>x</tt>, <tt>y</tt> и <tt>z</tt> элемента по индексу, приведенному в аргументе <tt>index</tt>.<br><br>

<pre id="12setXYZW"><span onclick="showClick(type_null)"><a href="#" onclick="return false" onblur="hideClick()" onmouseover="show('set X Y Z W - установить (компоненты) X Y Z и W')" onmouseout="hide()">.setXYZW</a></span>( index, x, y, z, w )</pre>
Метод устанавливает компоненты <tt>x</tt>, <tt>y</tt>, <tt>z</tt> и <tt>w</tt> элемента по индексу, приведенному в аргументе <tt>index</tt>.</div><br>

<h4>Исходники</h4>
<div class=blockindent><a href="https://github.com/mrdoob/three.js/blob/master/src/core/InterleavedBufferAttribute.js" target="_blank">InterleavedBufferAttribute.js на github.com</a></div><br><br>


<h3 id="13">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; Layers</h3>
Объект Layers назначает для <a href="#14" onmouseover="show('Object3D')" onmouseout="hide()">Object3D</a> 1 или больше (до 32) слоев, пронумерованных от 0 до 31 - внутренне слои хранятся в виде <a href="https://en.wikipedia.org/wiki/Mask_(computing)" target="_blank">битовой маски</a>
(<a href="https://ru.wikipedia.org/wiki/%D0%91%D0%B8%D1%82%D0%BE%D0%B2%D0%B0%D1%8F_%D0%BC%D0%B0%D1%81%D0%BA%D0%B0" target="_blank">вот эта статья на русском</a>), и по умолчанию все объекты Object3D имеют принадлежность к слою 0.<br>
Это можно использовать для управления видимостью - чтобы быть видимым, при визуализации представления этой камеры, объект должен иметь общий слой с <a href="cameras.htm#1" onmouseover="show('Camera')" onmouseout="hide()">камерой</a>.<br>
Все классы, которые наследуют от <a href="#14" onmouseover="show('Object3D')" onmouseout="hide()">Object3D</a> имеют свойство <tt><a href="#14layers" onmouseover="show('Object3D.layers')" onmouseout="hide()">layers</a></tt>, являющееся экземпляром данного класса.<br><br>

<h4>Конструктор</h4>
<pre>Layers()</pre>
Создает новый объект <tt>Layers</tt>, принадлежность которого установлена изначально на слой <tt>0</tt>.<br><br>

<h4>Свойства</h4>
<div class=blockindent><br>
<pre id="13mask"><span onclick="showClick(type_int)"><a href="#" onclick="return false" onblur="hideClick()" onmouseover="show('mask - маска')" onmouseout="hide()">.mask</a></span></pre>
Битовая маска, в которой хранится к каким из 32 слоев принадлежит этот объект в данный момент.</div><br>

<h4>Методы</h4>
<div class=blockindent><br>
<pre id="13disable"><span onclick="showClick(type_null)"><a href="#" onclick="return false" onblur="hideClick()" onmouseover="show('disable - отключить, запретить')" onmouseout="hide()">.disable</a></span>( <span onclick="showClick(type_int)"><a href="#" onclick="return false" onblur="hideClick()" onmouseover="show('layer - слой')" onmouseout="hide()">layer</a></span> )</pre>
<div class=list><tt><span onclick="showClick(type_int)"><a href="#" onclick="return false" onblur="hideClick()" onmouseover="show('layer - слой')" onmouseout="hide()">layer</a></span></tt> - целое число от <tt>0</tt> до <tt>31</tt>.</div>
Метод удаляет принадлежность объекта к данному слою (указанному в <tt>layer</tt>).<br><br>
<pre id="13enable"><span onclick="showClick(type_null)"><a href="#" onclick="return false" onblur="hideClick()" onmouseover="show('enable - включить, разрешить')" onmouseout="hide()">.enable</a></span>( <span onclick="showClick(type_int)"><a href="#" onclick="return false" onblur="hideClick()" onmouseover="show('layer - слой')" onmouseout="hide()">layer</a></span> )</pre>
<div class=list><tt><span onclick="showClick(type_int)"><a href="#" onclick="return false" onblur="hideClick()" onmouseover="show('layer - слой')" onmouseout="hide()">layer</a></span></tt> - целое число от <tt>0</tt> до <tt>31</tt>.</div>
Метод добавляет принадлежность объекта к данному слою (указанному в <tt>layer</tt>).<br><br>

<pre id="13set"><span onclick="showClick(type_null)"><a href="#" onclick="return false" onblur="hideClick()" onmouseover="show('set - установить')" onmouseout="hide()">set</a></span>( <span onclick="showClick(type_int)"><a href="#" onclick="return false" onblur="hideClick()" onmouseover="show('layer - слой')" onmouseout="hide()">layer</a></span> )</pre>
<div class=list><tt><span onclick="showClick(type_int)"><a href="#" onclick="return false" onblur="hideClick()" onmouseover="show('layer - слой')" onmouseout="hide()">layer</a></span></tt> - целое число от <tt>0</tt> до <tt>31</tt>.</div>
Метод устанавливает принадлежность объекта к указанному слою (в аргументе <tt>layer</tt>) и удаляет принадлежность ко всем другим слоям.<br><br>

<pre id="13test"><span onclick="showClick(type_bool)"><a href="#" onclick="return false" onblur="hideClick()" onmouseover="show('test - проверка')" onmouseout="hide()">.test</a></span>( <span onclick="showClick(type_int)"><a href="#" onclick="return false" onblur="hideClick()" onmouseover="show('layers - слои')" onmouseout="hide()">layers</a></span> )</pre>
<div class=list><tt><span onclick="showClick(type_int)"><a href="#" onclick="return false" onblur="hideClick()" onmouseover="show('layers - слои')" onmouseout="hide()">layers</a></span></tt> - объект Layers.</div>
Метод возвращает значение <tt>true</tt>, если этот и переданный объект (в аргументе <tt>layers</tt>) принадлежать к одному и тому же набору слоев.<br><br>

<pre id="13toggle"><span onclick="showClick(type_null)"><a href="#" onclick="return false" onblur="hideClick()" onmouseover="show('toggle - переключить')" onmouseout="hide()">.toggle</a></span>( <span onclick="showClick(type_int)"><a href="#" onclick="return false" onblur="hideClick()" onmouseover="show('layer - слой')" onmouseout="hide()">layer</a></span> )</pre>
<div class=list><tt><span onclick="showClick(type_int)"><a href="#" onclick="return false" onblur="hideClick()" onmouseover="show('layer - слой')" onmouseout="hide()">layer</a></span></tt> - целое число от <tt>0</tt> до <tt>31</tt>.</div>
Метод переключает принадлежность к слою.</div><br>

<h4>Исходники</h4>
<div class=blockindent><a href="https://github.com/mrdoob/three.js/blob/master/src/core/Layers.js" target="_blank">Layers.js на github.com</a></div><br><br>


<h3 id="14">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; Object3D</h3>
<b>Object3D</b> является базовым классом для большинства объектов <em>three.js</em> и предоставляет набор свойств и методов для управления объектами в трехмерном пространстве.<br>
Обратите внимание, что имеется возможность для группировки объектов с помощью метода <tt><a href="#14add" onmouseover="show('Object3D.add')" onmouseout="hide()">.add( object )</a></tt>, который добавляет объект в качестве дочернего,
но все же для этого лучше использовать класс <tt><a href="objects.htm#2" onmouseover="show('Group')" onmouseout="hide()">Group</a></tt>.<br><br>

<h4>Конструктор</h4>
<pre>Object3D()</pre>
Конструктор не принимает аргументов.<br><br>

<h4>Свойства</h4>
<div class=blockindent>
<pre id="14castShadow"><span onclick="showClick(type_bool)"><a href="#" onclick="return false" onblur="hideClick()" onmouseover="show('cast shadow - бросать тень')" onmouseout="hide()">.castShadow</a></span></pre>
Будет ли объект представлен в теневой карте. Значением по умолчанию является <tt>false</tt>.<br><br>

<pre id="14children"><a href="#14" onmouseover="show('Object3D.<br>children - дети, здесь имеются ввиду дочерние объекты,<br>т.е. объекты, являющиеся производными от объекта-родителя')" onmouseout="hide()">.children</a></pre>
Массив дочерних объектов. Для информации о группировке объектов вручную, смотрите <a href="objects.htm#2" onmouseover="show('Group')" onmouseout="hide()">Group</a>.<br><br>

<pre id="14frustumCulled"><span onclick="showClick(type_bool)"><a href="#" onclick="return false" onblur="hideClick()" onmouseover="show('от англ. слов frustum culled -<br>отбраковка (объектов вне) усеченного<br>конуса видимости (камеры)')" onmouseout="hide()">.frustumCulled</a></span></pre>
При установке данного свойства как <tt>true</tt> перед отображением объекта в каждом кадре будет проверяться, входит ли он в зону видимости камеры (в виде усеченного конуса).
В противном случае, объект будет обрабатываться визуализатором в каждом кадре, даже если он невидим. Значением по умолчанию является <tt>true</tt>.<br><br>

<pre id="14id"><span onclick="showClick(type_int)"><a href="#" onclick="return false" onblur="hideClick()" onmouseover="show('сокращение от англ. слова identifier - идентификатор')" onmouseout="hide()">.id</a></span></pre>
Уникальное число для данного экземпляра объекта, свойство только для чтения.<br><br>

<pre id="14isObject"><span onclick="showClick(type_bool)"><a href="#" onclick="return false" onblur="hideClick()" onmouseover="show('is object - является объектом')" onmouseout="hide()">.isObject</a></span></pre>
Используется для проверки, является ли этот класс или классы, производные от него, трехмерными объектами (Object3D). Значением по умолчанию является <tt>true</tt>.<br>
Это свойство нельзя изменять, так как оно используется для оптимизации внутри <em>three.js</em>.<br><br>

<pre id="14layers"><a href="#13" onmouseover="show('Layers.<br>layers - слои, уровни')" onmouseout="hide()">.layers</a></pre>
Принадлежность к какому-либо слою. Объект отображается только в том случае, если имеет хотя бы один слой, используемый совместно с <a href="cameras.htm#1" onmouseover="show('Camera')" onmouseout="hide()">камерой</a>.<br><br>

<pre id="14matrix"><a href="math.htm#11" onmouseover="show('Matrix4.<br>matrix - матрица')" onmouseout="hide()">.matrix</a></pre>
Матрица локальных преобразований.<br><br>

<pre id="14matrixAutoUpdate"><span onclick="showClick(type_bool)"><a href="#" onclick="return false" onblur="hideClick()" onmouseover="show('matrix auto update - автоматическое обновление матрицы')" onmouseout="hide()">.matrixAutoUpdate</a></span></pre>
При установке данного свойства как <tt>true</tt>, рассчитывается матрица положения (поворот или кватернион) и масштаб каждого кадра, а также пересчитывается значение свойства <tt>matrixWorld</tt>.
Значением по умолчанию является <tt><a href="#14DefaultMatrixAutoUpdate" onmouseover="show('Object3D.DefaultMatrixAutoUpdate')" onmouseout="hide()">Object3D.DefaultMatrixAutoUpdate</a></tt> (<tt>true</tt>).<br><br>

<pre id="14matrixWorld"><a href="math.htm#11" onmouseover="show('Matrix4.<br>matrix world - матрица мира')" onmouseout="hide()">.matrixWorld</a></pre>
Глобальное трансформация объекта. Если Object3D не имеет родителя, то она идентична <a href="#14matrix" onmouseover="show('Object3D.matrix')" onmouseout="hide()">матрице локального преобразования</a>.<br><br>

<pre id="14matrixWorldNeedsUpdate"><span onclick="showClick(type_bool)"><a href="#" onclick="return false" onblur="hideClick()" onmouseover="show('matrix world needs update - требуется обновление матрицы мира')" onmouseout="hide()">.matrixWorldNeedsUpdate</a></span></pre>
При установке данного свойства как <tt>true</tt>, вычисляется <tt>matrixWorld</tt> в данном кадре и сбрасывается значение этого свойства в <tt>false</tt>. Значением по умолчанию является <tt>false</tt>.<br><br>

<pre id="14modelViewMatrix"><a href="math.htm#11" onmouseover="show('Matrix4.<br>model view matrix - матрица вида (представления) модели')" onmouseout="hide()">.modelViewMatrix</a></pre>
Это свойство передается шейдеру и используется для вычисления положения объекта.<br><br>

<pre id="14name"><span onclick="showClick(type_string)"><a href="#" onclick="return false" onblur="hideClick()" onmouseover="show('name - имя, название')" onmouseout="hide()">.name</a></span></pre>
Дополнительное, необязательное название объекта (оно может быть и не уникальным). Значением по умолчанию является пустая строка (<tt>""</tt>).<br><br>

<pre id="14normalMatrix"><a href="math.htm#10" onmouseover="show('Matrix3.<br>normal matrix - матрица нормалей')" onmouseout="hide()">.normalMatrix</a></pre>
Это свойство передается шейдеру и используется для расчета освещения объекта. Представляет собой транспонирование инверсии вложенной верхней левой матрицы <tt>3&#215;3</tt> матрицы <tt>modelViewMatrix</tt> данного объекта.<br>
Причиной применения такой особой матрицы является то, что простое использование <tt>modelViewMatrix</tt> может привести к неединичной длине нормалей
(при масштабировании) или к неперпендикулярному направлению (при неравномерном масштабировании по осям).<br>
С другой стороны, переставляемая часть <tt>modelViewMatrix</tt> не имеет отношения к вычислению нормалей.
Так что достаточно <a href="math.htm#10" onmouseover="show('Matrix3')" onmouseout="hide()">.трехмерной матрицы</a>.<br><br>

<pre id="14onAfterRender"><span onclick="showClick(type_func)"><a href="#" onclick="return false" onblur="hideClick()" onmouseover="show('on after render - на (событие) после визуализации')" onmouseout="hide()">.onAfterRender</a></span></pre>
Дополнительная, необязательная функция обратного вызова, которая выполняется сразу после визуализации Object3D.
Эта функция вызывается со следующими параметрами: <tt><span class="lnk" onmouseover="show('renderer - визуализатор, рендерер')" onmouseout="hide()">renderer</span></tt>,
<tt><span class="lnk" onmouseover="show('scene - сцена')" onmouseout="hide()">scene</span></tt>, <tt><span class="lnk" onmouseover="show('camera - камера')" onmouseout="hide()">camera</span></tt>,
<tt><span class="lnk" onmouseover="show('geometry - геометрический элемент')" onmouseout="hide()">geometry</span></tt>, <tt><span class="lnk" onmouseover="show('material - материал')" onmouseout="hide()">material</span></tt>,
<tt><span class="lnk" onmouseover="show('group - группа')" onmouseout="hide()">group</span></tt>.<br><br>

<pre id="14onBeforeRender"><span onclick="showClick(type_func)"><a href="#" onclick="return false" onblur="hideClick()" onmouseover="show('on before render - на (событие) перед визуализацией')" onmouseout="hide()">.onBeforeRender</a></span></pre>
Дополнительная, необязательная функция обратного вызова, которая выполняется непосредственно перед визуализацией Object3D.
Эта функция вызывается со следующими параметрами: <tt><span class="lnk" onmouseover="show('renderer - визуализатор, рендерер')" onmouseout="hide()">renderer</span></tt>,
<tt><span class="lnk" onmouseover="show('scene - сцена')" onmouseout="hide()">scene</span></tt>, <tt><span class="lnk" onmouseover="show('camera - камера')" onmouseout="hide()">camera</span></tt>,
<tt><span class="lnk" onmouseover="show('geometry - геометрический элемент')" onmouseout="hide()">geometry</span></tt>, <tt><span class="lnk" onmouseover="show('material - материал')" onmouseout="hide()">material</span></tt>,
<tt><span class="lnk" onmouseover="show('group - группа')" onmouseout="hide()">group</span></tt>.<br><br>

<pre id="14parent"><a href="#14" onmouseover="show('Object3D.<br>parent - родитель')" onmouseout="hide()">.parent</a></pre>
Родительский объект в <a href="https://en.wikipedia.org/wiki/Scene_graph" target="_blank">графе сцены</a>. Вот статья Википедии &#171;<a href="https://ru.wikipedia.org/wiki/%D0%93%D1%80%D0%B0%D1%84_%D1%81%D1%86%D0%B5%D0%BD%D1%8B" target="_blank">Граф сцены</a>&#187; на русском языке.<br><br>

<pre id="14position"><a href="math.htm#19" onmouseover="show('Vector3.<br>position - позиция')" onmouseout="hide()">.position</a></pre>
<a href="math.htm#19" onmouseover="show('Vector3')" onmouseout="hide()">Трехмерный вектор</a>, представляющий локальную позицию объекта. Значение по умолчанию равно <tt>(0, 0, 0)</tt>.<br><br>

<pre id="14quaternion"><a href="math.htm#13" onmouseover="show('Quaternion.<br>quaternion - кватернион')" onmouseout="hide()">.quaternion</a></pre>
Локальный поворот объекта в виде <a href="math.htm#13" onmouseover="show('Quaternion')" onmouseout="hide()">кватерниона</a>.<br><br>

<pre id="14receiveShadow"><span onclick="showClick(type_bool)"><a href="#" onclick="return false" onblur="hideClick()" onmouseover="show('receive shadow - получить тень')" onmouseout="hide()">.receiveShadow</a></span></pre>
Свойство определяет, будет ли материал получать тени. Значением по умолчанию является <tt>false</tt>.<br><br>

<pre id="14renderOrder"><span onclick="showClick(type_number)"><a href="#" onclick="return false" onblur="hideClick()" onmouseover="show('render order - порядок отображения')" onmouseout="hide()">.renderOrder</a></span></pre>
Значение этого свойства позволяет переопределить порядок отображения графических объектов на сцене, хотя сортировка прозрачных и непрозрачных объектов остается раздельной.
Сортировка происходит от самого низкого до самого высокого значения <tt>renderOrder</tt>. Значением по умолчанию является <tt>0</tt>.<br><br>

<pre id="14rotation"><a href="math.htm#5" onmouseover="show('Euler.<br>rotation - вращение, поворот')" onmouseout="hide()">.rotation</a></pre>
Локальный поворот объекта (смотрите статью &#171;<a href="https://en.wikipedia.org/wiki/Euler_angles" target="_blank">Euler angles</a>&#187;), в радианах.<br>
Статья &#171;<a href="https://ru.wikipedia.org/wiki/%D0%A3%D0%B3%D0%BB%D1%8B_%D0%AD%D0%B9%D0%BB%D0%B5%D1%80%D0%B0" target="_blank">Углы Эйлера</a>&#187; в Википедии на русском языке.<br><br>

<pre id="14scale"><a href="math.htm#19" onmouseover="show('Vector3.<br>scale - масштаб')" onmouseout="hide()">.scale</a></pre>
Локальный масштаб объекта. Значением по умолчанию является <tt><a href="math.htm#19" onmouseover="show('Vector3')" onmouseout="hide()">Vector3</a>( 1, 1, 1 )</tt>. <br><br>

<pre id="14up"><a href="math.htm#19" onmouseover="show('Vector3.<br>up - вверх')" onmouseout="hide()">.up</a></pre>
Это свойство используется методом <tt><a href="#14lookAt" onmouseover="show('Object3D.lookAt')" onmouseout="hide()">lookAt</a></tt>, например для определения ориентации результата.<br>
Значением по умолчанию является <tt><a href="#14DefaultUp" onmouseover="show('Object3D.DefaultUp')" onmouseout="hide()">Object3D.DefaultUp</a></tt> - то есть, <tt>( 0, 1, 0 )</tt>.<br><br>

<pre id="14userData"><span onclick="showClick(type_obj)"><a href="#" onclick="return false" onblur="hideClick()" onmouseover="show('user data - данные пользователя')" onmouseout="hide()">.userData</a></span></pre>
Объект, который можно использовать для хранения пользовательских данных об Object3D. Он не должен содержать ссылки на функции, так как они не будут клонированы.<br><br>

<pre id="14uuid"><span onclick="showClick(type_string)"><a href="#" onclick="return false" onblur="hideClick()" onmouseover="show('сокращение от англ. слов  universally unique identifier<br>- универсальный уникальный идентификатор')" onmouseout="hide()">.uuid</a></span></pre>
<a href="https://ru.wikipedia.org/wiki/UUID" target="_blank" onmouseover="show('сокращение англ. слов Universally Unique Identifier<br>- универсальный уникальный идентификатор')" onmouseout="hide()">UUID</a> данного экземпляра объекта. Он присваивается автоматически и не должен изменяться.<br><br>

<pre id="14visible"><span onclick="showClick(type_bool)"><a href="#" onclick="return false" onblur="hideClick()" onmouseover="show('visible - видимый')" onmouseout="hide()">.visible</a></span></pre>
Если установлено значение <tt>true</tt>, объект будет отображен. Значением по умолчанию является <tt>true</tt>.</div><br>

<h4>Статические свойства</h4><br>
Статические свойства и методы устанавливаются для всего класса, а не для экземпляра этого класса.
Это означает, что при изменении <tt><a href="#14DefaultUp" onmouseover="show('Object3D.DefaultUp')" onmouseout="hide()">Object3D.DefaultUp</a></tt> или
<tt><a href="#14DefaultMatrixAutoUpdate" onmouseover="show('Object3D.DefaultMatrixAutoUpdate')" onmouseout="hide()">Object3D.DefaultMatrixAutoUpdate</a></tt>
изменятся значения свойств <tt><a href="#14up" onmouseover="show('Object3D.up')" onmouseout="hide()">up</a></tt> и <tt><a href="#14matrixAutoUpdate" onmouseover="show('Object3D.matrixAutoUpdate')" onmouseout="hide()">matrixAutoUpdate</a></tt>
каждого экземпляра Object3D (или производных от него), созданных после внесения изменений (объекты Object3D, уже созданные к этому моменту, не будут затронуты).
<div class=blockindent><br>
<pre id="14DefaultUp"><a href="math.htm#19" onmouseover="show('Vector3.<br>default up - по умолчанию вверх')" onmouseout="hide()">.DefaultUp</a></pre>
Значение по умолчанию направления вверх (свойство <tt><a href="#14up" onmouseover="show('Object3D.up')" onmouseout="hide()">up</a></tt>) для объектов,
также используемое в качестве положения по умолчанию для <a href="lights.htm#2" onmouseover="show('directional light - направленное освещение')" onmouseout="hide()">DirectionalLight</a>,
<a href="lights.htm#3" onmouseover="show('hemisphere light - полусферическое освещение')" onmouseout="hide()">HemisphereLight</a> и
<a href="lights.htm#7" onmouseover="show('spot light - прожекторное освещение')" onmouseout="hide()">SpotLight</a> (которые создают освещение, направленное сверху вниз).<br>
По умолчанию устанавливается как <tt>( 0, 1, 0 )</tt>.<br><br>

<pre id="14DefaultMatrixAutoUpdate"><a href="math.htm#19" onmouseover="show('Vector3.<br>default matrix auto update - автоматическое обновление матрицы по умолчанию')" onmouseout="hide()">.DefaultMatrixAutoUpdate</a></pre>
Значение по умолчанию для свойства <tt><a href="#14matrixAutoUpdate" onmouseover="show('Object3D.matrixAutoUpdate')" onmouseout="hide()">matrixAutoUpdate</a></tt> для вновь созданных объектов Object3D.</div><br>

<h4>Методы</h4>
В данном классе возможно применение методов <tt><a href="#5" onmouseover="show('EventDispatcher')" onmouseout="hide()">EventDispatcher</a></tt>.
<div class=blockindent><br>
<pre id="14add"><span onclick="showClick(type_null)"><a href="#" onclick="return false" onblur="hideClick()" onmouseover="show('add - добавить')" onmouseout="hide()">.add</a></span>( <a href="#14" onmouseover="show('Object3D')" onmouseout="hide()">object</a>, ... )</pre>
Метод добавляет заданный объект в качестве дочернего к этому объекту. Можно добавлять произвольное количество объектов.<br>
Посмотрите описание класса <tt><a href="objects.htm#2" onmouseover="show('Group')" onmouseout="hide()">Group</a></tt> для получения информации о группировке объектов вручную.<br><br>

<pre id="14applyMatrix"><span onclick="showClick(type_null)"><a href="#" onclick="return false" onblur="hideClick()" onmouseover="show('apply matrix - применить матрицу')" onmouseout="hide()">.applyMatrix</a></span>( <a href="math.htm#11" onmouseover="show('Matrix4.<br>matrix - матрица')" onmouseout="hide()">matrix</a> )</pre>
Применяет матричное преобразование к объекту и обновляет положение объекта, угол поворота объекта и масштаб объекта.<br><br>

<pre id="14applyQuaternion"><a href="#14" onmouseover="show('Object3D.<br>apply quaternion - применить кватернион')" onmouseout="hide()">.applyQuaternion</a>( quaternion )</pre>
Примененяет поворот, представленный кватернионом, к объекту.<br><br>

<pre id="14clone"><a href="#14" onmouseover="show('Object3D.<br>clone - клонировать')" onmouseout="hide()">.clone</a>( <span onclick="showClick(type_bool)"><a href="#" onclick="return false" onblur="hideClick()" onmouseover="show('recursive - рекурсивно')" onmouseout="hide()">recursive</a></span> )</pre>
<div class=list><tt>recursive</tt> -- если значение установлено как <tt>true</tt>, то клонируются и потомки объекта. Значением по умолчанию является <tt>true</tt>.</div>
Возвращает клон данного объекта и опционально клоны всех его потомков.<br><br>

<pre id="14copy"><a href="#14" onmouseover="show('Object3D.<br>copy - копировать')" onmouseout="hide()">.copy</a>( <a href="#14" onmouseover="show('Object3D.<br>object - объект')" onmouseout="hide()">object</a>, <span onclick="showClick(type_bool)"><a href="#" onclick="return false" onblur="hideClick()" onmouseover="show('recursive - рекурсивно')" onmouseout="hide()">recursive</a></span> )</pre>
<div class=list><tt>recursive</tt> -- если значение установлено как <tt>true</tt>, то клонируются и потомки объекта. Значением по умолчанию является <tt>true</tt>.</div>
Метод копирует объект, заданный в аргументе <tt>object</tt> в данный объект.<br><br>

<pre id="14getObjectById"><a href="#14" onmouseover="show('Object3D.<br>get object by id - получить объект по идентификатору')" onmouseout="hide()">.getObjectById</a>( <span onclick="showClick(type_int)"><a href="#" onclick="return false" onblur="hideClick()" onmouseover="show('id - сокращение от англ. слова identifier - идентификатор')" onmouseout="hide()">id</a></span> )</pre>
<div class=list><tt>id</tt> -- уникальное число экземпляра объекта.</div>
Метод проводит поиск среди дочерних элементов объекта и возвращает первый найденный с соответствующим идентификатором.<br>
Обратите внимание, что идентификаторы назначаются в хронологическом порядке: 1, 2, 3, ..., увеличиваясь на единицу для каждого нового объекта.<br><br>

<pre id="14getObjectByName"><a href="#14" onmouseover="show('Object3D.<br>get object by name - получить объект по имени')" onmouseout="hide()">.getObjectByName</a>( <span onclick="showClick(type_string)"><a href="#" onclick="return false" onblur="hideClick()" onmouseover="show('name - имя, название')" onmouseout="hide()">name</a></span> )</pre>
<div class=list><tt>name</tt> -- строковое значение в соответствии со свойством дочернего элемента <tt>Object3D.name</tt>.</div>
Метод проводит поиск среди дочерних элементов объекта и возвращает первый найденный с соответствующим именем.<br>
Обратите внимание, что для большинства объектов значением свойства <tt><a href="#14name" onmouseover="show('Object3D.name')" onmouseout="hide()">name</a></tt> по умолчанию является пустая строка. Так что для того, чтобы этот метод работал, нужно установить их вручную.<br><br>

<pre id="14getObjectByProperty"><a href="#14" onmouseover="show('Object3D.<br>get object by property - получить объект по свойству')" onmouseout="hide()">.getObjectByProperty</a>( <span onclick="showClick(type_string)"><a href="#" onclick="return false" onblur="hideClick()" onmouseover="show('name - имя, название')" onmouseout="hide()">name</a></span>, <span onclick="showClick(type_float)"><a href="#" onclick="return false" onblur="hideClick()" onmouseover="show('value - значение')" onmouseout="hide()">value</a></span> )</pre>
<div class=list><tt>name</tt> -- название разыскиваемого свойства.</div>
<div class=list><tt>value</tt> -- значение заданного свойства.</div>
Метод проводит поиск среди дочерних элементов объекта и возвращает первое найденное свойство, соответствующее заданному значению.<br><br>

<pre id="14getWorldPosition"><a href="math.htm#19" onmouseover="show('Vector3.<br>get world position - получить &#34;мировую&#34; позицию')" onmouseout="hide()">.getWorldPosition</a>( <a href="math.htm#19" onmouseover="show('Vector3.<br>target - цель')" onmouseout="hide()">target</a> )</pre>
<div class=list><tt>target</tt> — результат будет скопирован в этот Vector3.</div>
Возвращает вектор, представляющий позицию объекта в "мировом" пространстве.<br><br>

<pre id="14getWorldQuaternion"><a href="math.htm#13" onmouseover="show('Quaternion.<br>get world quaternion - получить<br>кватернион в &#34;мировом&#34;<br>(пространстве)')" onmouseout="hide()">.getWorldQuaternion</a>( <a href="math.htm#13" onmouseover="show('Quaternion.<br>target - цель')" onmouseout="hide()">target</a> )</pre>
<div class=list><tt>target</tt> — результат будет скопирован в этот Quaternion.</div>
Возвращает кватернион, представляющий поворот объекта в "мировом" пространстве.<br><br>

<pre id="14getWorldScale"><a href="math.htm#19" onmouseover="show('Vector3.<br>get world scale - получить &#34;мировой&#34; масштаб')" onmouseout="hide()">.getWorldScale</a>( <a href="math.htm#19" onmouseover="show('Vector3.<br>target - цель')" onmouseout="hide()">target</a> )</pre>
<div class=list><tt>target</tt> — результат будет скопирован в этот Vector3.</div>
Возвращает вектор коэффициентов масштабирования, примененных к объекту, для каждой оси в "мировом" пространстве.<br><br>

<pre id="14getWorldDirection"><a href="math.htm#19" onmouseover="show('Vector3.<br>get world direction - получить &#34;мировое&#34; направление')" onmouseout="hide()">.getWorldDirection</a>( <a href="math.htm#19" onmouseover="show('Vector3.<br>target - цель')" onmouseout="hide()">target</a> )</pre>
<div class=list><tt>target</tt> — результат будет скопирован в этот Vector3.</div>
Возвращает вектор, представляющий направление положительной оси координат <tt>z</tt> в "мировом" пространстве.<br><br>

<pre id="14localToWorld"><a href="math.htm#19" onmouseover="show('Vector3.<br>local to world - локальные в &#34;мировые&#34;')" onmouseout="hide()">.localToWorld</a>( <a href="math.htm#19" onmouseover="show('Vector3.<br>vector - вектор')" onmouseout="hide()">vector</a> )</pre>
<div class=list><tt>vector</tt> - вектор, представляющий позицию в локальном пространстве (в пространстве объекта).</div>
Метод конвертирует вектор из локального пространства в "мировое" пространство.<br><br>

<pre id="14lookAt"><span onclick="showClick(type_null)"><a href="#" onclick="return false" onblur="hideClick()" onmouseover="show('look at - смотреть на')" onmouseout="hide()">.lookAt</a></span>( <a href="math.htm#19" onmouseover="show('Vector3.<br>vector - вектор')" onmouseout="hide()">vector</a> )
<span onclick="showClick(type_null)"><a href="#" onclick="return false" onblur="hideClick()" onmouseover="show('look at - смотреть на')" onmouseout="hide()">.lookAt</a></span>( <span onclick="showClick(type_float)"><a href="#" onclick="return false" onblur="hideClick()" onmouseover="show('координата x')" onmouseout="hide()">x</a></span>, <span onclick="showClick(type_float)"><a href="#" onclick="return false" onblur="hideClick()" onmouseover="show('координата y')" onmouseout="hide()">y</a></span>, <span onclick="showClick(type_float)"><a href="#" onclick="return false" onblur="hideClick()" onmouseover="show('координата z')" onmouseout="hide()">z</a></span> )</pre>
<div class=list><tt>vector</tt> - вектор, представляющий позицию в "мировом" пространстве.</div>
По желанию, точка может быть представлена координатами <tt><a href="#14x" onmouseover="show('Object3D.x')" onmouseout="hide()">x</a></tt>, <tt><a href="#14y" onmouseover="show('Object3D.y')" onmouseout="hide()">y</a></tt> и <tt><a href="#14z" onmouseover="show('Object3D.z')" onmouseout="hide()">z</a></tt> в "мировом" пространстве.<br>
Метод поворачивает объект к заданной точке в "мировом" пространстве.<br>
Этот метод не поддерживает объекты с развернутым и/или перенесенным родительским объектом(ами).<br><br>

<pre id="14raycast"><span onclick="showClick(type_array)"><a href="#" onclick="return false" onblur="hideClick()" onmouseover="show('raycast - бросок луча')" onmouseout="hide()">.raycast</a></span>( <a href="#15" onmouseover="show('Raycaster.<br>raycaster - излучатель, рейкастер')" onmouseout="hide()">raycaster</a>, <span onclick="showClick(type_array)"><a href="#" onclick="return false" onblur="hideClick()" onmouseover="show('intersects - пересечения')" onmouseout="hide()">intersects</a></span> )</pre>
Абстрактный (пустой) метод для получения пересечений между брошенным лучом и данным объектом.
Такие подклассы, как <a href="objects.htm#7" onmouseover="show('Mesh')" onmouseout="hide()">Mesh</a>, <a href="objects.htm#3" onmouseover="show('Line')" onmouseout="hide()">Line</a>
и <a href="objects.htm#8" onmouseover="show('Points')" onmouseout="hide()">Points</a> применяют этот метод при использовании рейкастинга.<br><br>

<pre id="14remove"><span onclick="showClick(type_null)"><a href="#" onclick="return false" onblur="hideClick()" onmouseover="show('remove - удалить')" onmouseout="hide()">.remove</a></span>( <a href="#14" onmouseover="show('Object3D.<br>object - объект')" onmouseout="hide()">object</a>, ... )</pre>
Метод удаляет объект как дочерний элемент данного объекта. Может быть удалено произвольное число объектов.<br><br>

<pre id="14rotateOnAxis"><a href="#14" onmouseover="show('Object3D.<br>rotate on axis - повернуть по оси')" onmouseout="hide()">.rotateOnAxis</a>( <a href="math.htm#19" onmouseover="show('Vector3.<br>axis - ось')" onmouseout="hide()">axis</a>, <span onclick="showClick(type_float)"><a href="#" onclick="return false" onblur="hideClick()" onmouseover="show('angle - угол')" onmouseout="hide()">angle</a></span> )</pre>
<div class=list><tt>axis</tt> -- нормализованный вектор в пространстве объекта.</div>
<div class=list><tt>angle</tt> -- угол в радианах.</div>
Поворачивает объект по оси в пространстве объекта. Предполагается, что ось нормализована.<br><br>

<pre id="14rotateOnWorldAxis"><a href="#14" onmouseover="show('Object3D.<br>rotate on world axis - повернуть по &#34;мировой&#34; оси')" onmouseout="hide()">.rotateOnWorldAxis</a>( <a href="math.htm#19" onmouseover="show('Vector3.<br>axis - ось')" onmouseout="hide()">axis</a>, <span onclick="showClick(type_float)"><a href="#" onclick="return false" onblur="hideClick()" onmouseover="show('angle - угол')" onmouseout="hide()">angle</a></span> )</pre>
<div class=list><tt>axis</tt> -- нормализованный вектор в "мировом" пространстве.</div>
<div class=list><tt>angle</tt> -- угол в радианах.</div>
Поворачивает объект по оси в "мировом" пространстве. Предполагается, что ось нормализована. Метод не предполагает поворота родительского объекта.<br><br>

<pre id="14rotateX"><span onclick="showClick(type_null)"><a href="#" onclick="return false" onblur="hideClick()" onmouseover="show('rotateX - поворот вокруг оси X')" onmouseout="hide()">.rotateX</a></span>( <span onclick="showClick(type_float)"><a href="#" onclick="return false" onblur="hideClick()" onmouseover="show('rad - сокращ. англ. слова radian - радиан')" onmouseout="hide()">rad</a></span> )</pre>
<div class=list><tt>rad</tt> - угол поворота, в радианах.</div>
Поворачивает объект вокруг оси <tt>x</tt> в локальном пространстве.<br><br>

<pre id="14rotateY"><span onclick="showClick(type_null)"><a href="#" onclick="return false" onblur="hideClick()" onmouseover="show('rotateY - поворот вокруг оси Y')" onmouseout="hide()">.rotateY</a></span>( <span onclick="showClick(type_float)"><a href="#" onclick="return false" onblur="hideClick()" onmouseover="show('rad - сокращ. англ. слова radian - радиан')" onmouseout="hide()">rad</a></span> )</pre>
<div class=list><tt>rad</tt> - угол поворота, в радианах.</div>
Поворачивает объект вокруг оси <tt>y</tt> в локальном пространстве.<br><br>

<pre id="14rotateZ"><span onclick="showClick(type_null)"><a href="#" onclick="return false" onblur="hideClick()" onmouseover="show('rotateZ - поворот вокруг оси Z')" onmouseout="hide()">.rotateZ</a></span>( <span onclick="showClick(type_float)"><a href="#" onclick="return false" onblur="hideClick()" onmouseover="show('rad - сокращ. англ. слова radian - радиан')" onmouseout="hide()">rad</a></span> )</pre>
<div class=list><tt>rad</tt> - угол поворота, в радианах.</div>
Поворачивает объект вокруг оси <tt>z</tt> в локальном пространстве.<br><br>

<pre id="14setRotationFromAxisAngle"><span onclick="showClick(type_null)"><a href="#" onclick="return false" onblur="hideClick()" onmouseover="show('set rotation from axis angle - установить поворот по углу оси')" onmouseout="hide()">.setRotationFromAxisAngle</a></span>( <a href="math.htm#19" onmouseover="show('Vector3.<br>axis - ось')" onmouseout="hide()">axis</a>, <span onclick="showClick(type_float)"><a href="#" onclick="return false" onblur="hideClick()" onmouseover="show('angle - угол')" onmouseout="hide()">angle</a></span> )</pre>
<div class=list><tt>axis</tt> -- нормализованный вектор в пространстве объекта.</div>
<div class=list><tt>angle</tt> -- угол в радианах.</div>
Вызывает метод <tt><a href="math.htm#13setFromAxisAngle" onmouseover="show('Quaternion.setFromAxisAngle')" onmouseout="hide()">setFromAxisAngle</a>( <a href="math.htm#19" onmouseover="show('Vector3.<br>axis - ось')" onmouseout="hide()">axis</a>,
<span onclick="showClick(type_float)"><a href="#" onclick="return false" onblur="hideClick()" onmouseover="show('angle - угол')" onmouseout="hide()">angle</a></span> )</tt>
на <tt><a href="#14quaternion" onmouseover="show('Object3D.quaternion')" onmouseout="hide()">quaternion</a></tt>.<br><br>

<pre id="14setRotationFromEuler"><span onclick="showClick(type_null)"><a href="#" onclick="return false" onblur="hideClick()" onmouseover="show('set rotation from euler - установить поворот по углу Эйлера')" onmouseout="hide()">.setRotationFromEuler</a></span>( <a href="math.htm#5" onmouseover="show('Euler.<br>euler - угол Эйлера')" onmouseout="hide()">euler</a> )</pre>
<div class=list><tt>euler</tt> -- угол Эйлера, определяющий размер поворота объекта.</div>
Вызывает метод <tt><a href="math.htm#13setFromEuler" onmouseover="show('Quaternion.setFromEuler')" onmouseout="hide()">setFromEuler</a>( <a href="math.htm#5" onmouseover="show('Euler')" onmouseout="hide()">euler</a> )</tt>
на <tt><a href="#14quaternion" onmouseover="show('Object3D.quaternion')" onmouseout="hide()">quaternion</a></tt>.<br><br>

<pre id="14setRotationFromMatrix"><span onclick="showClick(type_null)"><a href="#" onclick="return false" onblur="hideClick()" onmouseover="show('set rotation from matrix - установить поворот по матрице')" onmouseout="hide()">.setRotationFromMatrix</a></span>( <a href="math.htm#11" onmouseover="show('Matrix4.<br>m - сокращ. англ. слова matrix - матрица')" onmouseout="hide()">m</a> )</pre>
<div class=list><tt>m</tt> -- поворот кватерниона по компоненту вращения матрицы.</div>
Вызывает метод <tt><a href="math.htm#13setFromRotationMatrix" onmouseover="show('Quaternion.setFromRotationMatrix')" onmouseout="hide()">setFromRotationMatrix</a>( <a href="math.htm#11" onmouseover="show('Matrix4')" onmouseout="hide()">m</a> )</tt>
на <tt><a href="#14quaternion" onmouseover="show('Object3D.quaternion')" onmouseout="hide()">quaternion</a></tt>.<br>
Обратите внимание на то, что верхняя матрица <tt>3&#215;3</tt> в матрице <tt>m</tt> - это чистая матрица вращения (т.е. она не масштабирована).<br><br>

<pre id="14setRotationFromQuaternion"><span onclick="showClick(type_null)"><a href="#" onclick="return false" onblur="hideClick()" onmouseover="show('set rotation from quaternion - установить поворот по кватерниону')" onmouseout="hide()">.setRotationFromQuaternion</a></span>( <a href="math.htm#13" onmouseover="show('Quaternion.<br>q - сокращ. англ. слова quaternion')" onmouseout="hide()">q</a> )</pre>
<div class=list><tt>q</tt> -- нормализованный кватернион.</div>
Копирует заданный кватернион в <tt><a href="#14quaternion" onmouseover="show('Object3D.quaternion')" onmouseout="hide()">quaternion</a></tt>.<br><br>

<pre id="14toJSON"><span onclick="showClick(type_null)"><a href="#" onclick="return false" onblur="hideClick()" onmouseover="show('to JSON - сокр. от англ. слов to JavaScript Object<br>Notation, — то есть, в текстовый формат описания<br>объекта, основанный на JavaScript')" onmouseout="hide()">.toJSON</a></span>( <a href="math.htm#13" onmouseover="show('Quaternion.<br>q - сокращ. англ. слова quaternion')" onmouseout="hide()">q</a> )</pre>
Конвертирует объект в формат JSON.<br><br>

<pre id="14translateOnAxis"><a href="#14" onmouseover="show('Object3D.<br>translate on axis - перенос по осям')" onmouseout="hide()">.translateOnAxis</a>( <a href="math.htm#19" onmouseover="show('Vector3.<br>axis - ось')" onmouseout="hide()">axis</a>, <span onclick="showClick(type_float)"><a href="#" onclick="return false" onblur="hideClick()" onmouseover="show('distance - расстояние')" onmouseout="hide()">distance</a></span> )</pre>
<div class=list><tt>axis</tt> -- нормализованный вектор в пространстве объекта.</div>
<div class=list><tt>distance</tt> -- расстояние переноса.</div>
Метод переносит объект на расстояние, указанное в аргументе <tt>distance</tt>, по осям в пространстве объекта. Предполагается, что оси нормализованы.<br><br>

<pre id="14translateX"><span onclick="showClick(type_null)"><a href="#" onclick="return false" onblur="hideClick()" onmouseover="show('translate X - перенос (перевод) по оси X')" onmouseout="hide()">.translateX</a></span>( <span onclick="showClick(type_float)"><a href="#" onclick="return false" onblur="hideClick()" onmouseover="show('distance - расстояние')" onmouseout="hide()">distance</a></span> )</pre>
Метод переносит объект по оси <tt>x</tt> на расстояние, указанное в аргументе <tt>distance</tt>.<br><br>

<pre id="14translateY"><span onclick="showClick(type_null)"><a href="#" onclick="return false" onblur="hideClick()" onmouseover="show('translate Y - перенос (перевод) по оси Y')" onmouseout="hide()">.translateY</a></span>( <span onclick="showClick(type_float)"><a href="#" onclick="return false" onblur="hideClick()" onmouseover="show('distance - расстояние')" onmouseout="hide()">distance</a></span> )</pre>
Метод переносит объект по оси <tt>y</tt> на расстояние, указанное в аргументе <tt>distance</tt>.<br><br>

<pre id="14translateZ"><span onclick="showClick(type_null)"><a href="#" onclick="return false" onblur="hideClick()" onmouseover="show('translate Z - перенос (перевод) по оси Z')" onmouseout="hide()">.translateZ</a></span>( <span onclick="showClick(type_float)"><a href="#" onclick="return false" onblur="hideClick()" onmouseover="show('distance - расстояние')" onmouseout="hide()">distance</a></span> )</pre>
Метод переносит объект по оси <tt>z</tt> на расстояние, указанное в аргументе <tt>distance</tt>.<br><br>

<pre id="14traverse"><span onclick="showClick(type_null)"><a href="#" onclick="return false" onblur="hideClick()" onmouseover="show('traverse - перемещать, пересекать')" onmouseout="hide()">.traverse</a></span>( <span onclick="showClick(type_func)"><a href="#" onclick="return false" onblur="hideClick()" onmouseover="show('callback - обратный (повторный) вызов')" onmouseout="hide()">callback</a></span> )</pre>
<div class=list><tt>callback</tt> - функция с Object3D в качестве первого аргумента.</div>
Метод выполняет функцию обратного вызова (<tt>callback</tt>) на данном объекте и всех его потомках.<br><br>

<pre id="14traverseVisible"><span onclick="showClick(type_null)"><a href="#" onclick="return false" onblur="hideClick()" onmouseover="show('traverse visible - перемещение видимых (объектов)')" onmouseout="hide()">.traverseVisible</a></span>( <span onclick="showClick(type_func)"><a href="#" onclick="return false" onblur="hideClick()" onmouseover="show('callback - обратный (повторный) вызов')" onmouseout="hide()">callback</a></span> )</pre>
<div class=list><tt>callback</tt> - функция с Object3D в качестве первого аргумента.</div>
Метод подобен методу <tt>traverse</tt>, но функция обратного вызова (<tt>callback</tt>) будет выполняться только для видимых объектов. Потомки невидимых объектов не переносятся.<br><br>

<pre id="14traverseAncestors"><span onclick="showClick(type_null)"><a href="#" onclick="return false" onblur="hideClick()" onmouseover="show('traverse ancestors - перемещение предков')" onmouseout="hide()">.traverseAncestors</a></span>( <span onclick="showClick(type_func)"><a href="#" onclick="return false" onblur="hideClick()" onmouseover="show('callback - обратный (повторный) вызов')" onmouseout="hide()">callback</a></span> )</pre>
<div class=list><tt>callback</tt> - функция с Object3D в качестве первого аргумента.</div>
Метод выполняет функцию обратного вызова (<tt>callback</tt>) на всех предках данного объекта.<br><br>

<pre id="14updateMatrix"><span onclick="showClick(type_null)"><a href="#" onclick="return false" onblur="hideClick()" onmouseover="show('от англ. слов update matrix - обновить матрицу')" onmouseout="hide()">.updateMatrix</a></span>( )</pre>
Обновление локального преобразования.<br><br>

<pre id="14updateMatrixWorld"><span onclick="showClick(type_null)"><a href="#" onclick="return false" onblur="hideClick()" onmouseover="show('от англ. слов update matrix world - обновить матрицу мира')" onmouseout="hide()">.updateMatrixWorld</a></span>( <span onclick="showClick(type_bool)"><a href="#" onclick="return false" onblur="hideClick()" onmouseover="show('от англ. слова force - сила, принудительно')" onmouseout="hide()">force</a></span> )</pre>
Обновление глобальных преобразований объекта и его дочерних объектов.<br><br>

<pre id="14worldToLocal"><a href="math.htm#19" onmouseover="show('Vector3.<br>world to local - &#34;мировой&#34; (вектор) к локальному')" onmouseout="hide()">.worldToLocal</a>( <a href="math.htm#19" onmouseover="show('Vector3.<br>vector - вектор')" onmouseout="hide()">vector</a> )</pre>
<div class=list><tt>vector</tt> - вектор "мирового" пространства.</div>
Метод обновляет вектор "мирового" пространства на вектор локального пространства.</div><br>

<h4>Исходники</h4>
<div class=blockindent><a href="https://github.com/mrdoob/three.js/blob/master/src/core/Object3D.js" target="_blank">Object3D.js на github.com</a></div><br><br>


<h3 id="15">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; Raycaster</h3>
<div class=note_trans><b>Примечание переводчика:</b> Raycasting в переводе на русский - бросание луча (ray - луч, casting - бросание). <a class='link' onclick='javascript:spoiler(this)'>... читать далее</a>
<div style='display:none;'>Следовательно, raycaster - это тот, кто бросает лучи. В русском языке для перевода слова raycaster есть такие слова как излучатель и облучатель, а для raycasting - излучение, облучение, но прижилась озвучка английский слов - рейкастер, рейкастинг.<br><br>
В основу рейкастинга положена идея испускать лучи из «глаз» наблюдателя, один луч на пиксель, и находить самый близкий объект, который блокирует путь распространения этого луча.
Используя свойства материала и эффект света в сцене, алгоритм рейкастинга может определить затенение данного объекта. Предположение в упрощении основано на том, что если поверхность размещена перед светом, то свет достигнет поверхности и не будет блокирован или находиться в тени.
Затенение поверхности вычисляется, используя алгоритмы затенения традиционной компьютерной трёхмерной графики.
Одним из преимуществ рейкастинга является способность легко обрабатывать неплоские поверхности и сплошные тела вроде сферы или конуса.
Если математическая поверхность может быть пересечена лучом, то она может быть отрендерена, используя рейкастинг. Сложные объекты могут быть созданы с использованием методов моделирования сплошных тел и легко отрендерены.</div></div>
Данный класс предназначен для оказания помощи с <a href="https://en.wikipedia.org/wiki/Ray_casting" target="_blank">raycasting</a>. <a href="https://ru.wikipedia.org/wiki/Ray_casting" target="_blank">Вот описание рейкастинга</a> в Википедии на русском языке.
Рейкастинг используется для выборки объекта курсором мышки среди других объектов (вычисляет какие из объектов в трехмерном пространстве накрывает курсор мышки).<br><br>

<h4>Пример</h4>
<pre>var raycaster = new THREE.Raycaster();
var mouse = new THREE.Vector2();<br>
function onMouseMove( event ) {<br>
  // calculate mouse position in normalized device coordinates
  // (-1 to +1) for both components
  // вычисляем положение курсора мышки в нормализованной
  // системе координат (от -1 до +1) для обоих компонентов<br>
  mouse.x = ( event.clientX / window.innerWidth ) * 2 - 1;
  mouse.y = - ( event.clientY / window.innerHeight ) * 2 + 1;<br>
}<br>
function render() {<br>
  // update the picking ray with the camera and mouse position
  // обновляем луч выборки с позиций камеры и курсора мышки
  raycaster.setFromCamera( mouse, camera );<br>
  // calculate objects intersecting the picking ray
  // вычисляем объекты, пересекающие луч выборки
  var intersects = raycaster.intersectObjects( scene.children );<br>
  for ( var i = 0; i &lt; intersects.length; i++ ) {<br>
    intersects[ i ].object.material.color.set( 0xff0000 );<br>
  }<br>
  renderer.render( scene, camera );<br>
}<br>
window.addEventListener( 'mousemove', onMouseMove, false );<br>
window.requestAnimationFrame(render);</pre>

<h5>Другие примеры:</h5>
<pre><a href="https://threejs.org/examples/#webgl_interactive_cubes" target="_blank">рейкастинг к сетке (Mesh)</a>,
<a href="https://threejs.org/examples/#webgl_interactive_cubes_ortho" target="_blank">рейкастинг к сетке (Mesh) при использовании камеры с ортографической проекцией</a>,
<a href="https://threejs.org/examples/#webgl_interactive_buffergeometry" target="_blank">рейкастинг к сетке (Mesh) с BufferGeometry</a>,
<a href="https://threejs.org/examples/#webgl_interactive_lines" target="_blank">рейкастинг к линии</a>,
<a href="https://threejs.org/examples/#webgl_interactive_raycasting_points" target="_blank">рейкастинг к точкам</a>,
<a href="https://threejs.org/examples/#webgl_geometry_terrain_raycast" target="_blank">рейкастинг к рельефу местности</a>,
<a href="https://threejs.org/examples/#webgl_octree_raycasting" target="_blank">рейкастинг, использующий</a> <a href="https://ru.wikipedia.org/wiki/%D0%9E%D0%BA%D1%82%D0%BE%D0%B4%D0%B5%D1%80%D0%B5%D0%B2%D0%BE" onmouseover="show('Октодерево (дерево октантов, восьмеричное дерево, англ. octree)<br>— тип древовидной структуры данных, в которой у каждого внутреннего<br>узла ровно восемь «потомков». Восьмеричные деревья чаще всего<br>используются для разделения трёхмерного пространства, рекурсивно<br>разделяя его на восемь ячеек.')" onmouseout="hide()">октодерево (octree)</a>,
<a href="https://threejs.org/examples/#webgl_interactive_voxelpainter" target="_blank">рейкастинг к окрашенным</a> <a href="https://ru.wikipedia.org/wiki/%D0%92%D0%BE%D0%BA%D1%81%D0%B5%D0%BB" onmouseover="show('от англ. слова voxel — образованного из слов volumetric (объёмный)<br>и pixel (пиксель) — элемент объёмного изображения, содержащий<br>значение элемента растра в трёхмерном пространстве.')" onmouseout="hide()">вокселям</a>,
<a href="https://threejs.org/examples/#webgl_raycast_texture" target="_blank">рейкастинг к текстуре</a></pre>

<h4>Конструктор</h4>
<pre>Raycaster( <a href="math.htm#19" onmouseover="show('Vector3.<br>от англ. слова origin - начало, источник')" onmouseout="hide()">origin</a>, <a href="math.htm#19" onmouseover="show('Vector3.<br>от англ. слова direction - направление')" onmouseout="hide()">direction</a>, <span onclick="showClick(type_float)"><a href="#" onclick="return false" onblur="hideClick()" onmouseover="show('от англ. слова near - близко')" onmouseout="hide()">near</a></span>, <span onclick="showClick(type_float)"><a href="#" onclick="return false" onblur="hideClick()" onmouseover="show('от англ. слова far - далеко')" onmouseout="hide()">far</a></span> ) {</pre>
<div class=list><tt>origin</tt> -- начальный вектор, из которого берется луч.</div>
<div class=list><tt>direction</tt> — направляющий вектор, который задает направление лучу, должен быть нормализованным.</div>
<div class=list><tt>near</tt> — все возвращаемые результаты должны быть дальше <tt>near</tt>. Значение <tt>near</tt> не может быть отрицательным. Значение по умолчанию равно&nbsp;<tt>0</tt>.</div>
<div class=list><tt>far</tt> — все возвращаемые результаты должны быть ближе <tt>far</tt>. Значение <tt>far</tt> не может быть меньше значения <tt>near</tt>. Значение по умолчанию равно <tt>Infinity</tt> (бесконечность).</div>
Данный метод создает новый объект raycaster.<br><br>

<h4>Свойства</h4>
<div class=blockindent><br>
<pre id="15far"><span onclick="showClick(type_float)"><a href="#" onclick="return false" onblur="hideClick()" onmouseover="show('от англ. слова far - далеко')" onmouseout="hide()">.far</a></span></pre>
Фактор дальности рейкастера. Это значение показывает какие объекты можно отбросить из-за расстояния (то есть, они не будут отображаться, так как их не видно из-за большого расстояния до них).
Данное значение не может быть отрицательным, а также должно быть больше значения свойства <tt>near</tt>.<br><br>

<pre id="15linePrecision"><span onclick="showClick(type_float)"><a href="#" onclick="return false" onblur="hideClick()" onmouseover="show('от англ. слов line precision - линейная точность')" onmouseout="hide()">.linePrecision</a></span></pre>
Фактор точности рейкастера при пересечении объектов <a href="objects.htm#4" onmouseover="show('Line - линия')" onmouseout="hide()">Line</a>.<br><br>

<pre id="15near"><span onclick="showClick(type_float)"><a href="#" onclick="return false" onblur="hideClick()" onmouseover="show('от англ. слова near - близко')" onmouseout="hide()">.near</a></span></pre>
Фактор близости рейкастера. Это значение показывает какие объекты можно отбросить из-за расстояния (то есть, они не будут отображаться, так как до них слишком близко).
Данное значение не может быть отрицательным, а также должно быть меньше значения свойства <tt>far</tt>.<br><br>

<pre id="15params"><span onclick="showClick(type_obj)"><a href="#" onclick="return false" onblur="hideClick()" onmouseover="show('сокращение англ. слова parameters - параметры')" onmouseout="hide()">.params</a></span></pre>
Это объект со следующими свойствами:
<pre>{
  Mesh: {},
  Line: {},
  LOD: {},
  Points: { threshold: 1 },
  Sprite: {}
}</pre><br>

<pre id="15ray"><a href="math.htm#14" onmouseover="show('ray - луч')" onmouseout="hide()">.ray</a></pre>
<a href="math.htm#14" onmouseover="show('Ray')" onmouseout="hide()">Луч</a>, используемый для рейкастинга.</div><br>

<h4>Методы</h4>
<div class=blockindent><br>
<pre id="15set"><span onclick="showClick(type_null)"><a href="#" onclick="return false" onblur="hideClick()" onmouseover="show('сокращение англ. слова set - установить')" onmouseout="hide()">.set</a></span>( <a href="math.htm#19" onmouseover="show('Vector3.<br>от англ. слова origin - начало, источник')" onmouseout="hide()">origin</a>, <a href="math.htm#19" onmouseover="show('Vector3.<br>от англ. слова direction - направление')" onmouseout="hide()">direction</a> )</pre>
<div class=list><tt>origin</tt> -- начальный вектор, из которого берется луч.</div>
<div class=list><tt>direction</tt> -- нормализованный вектор направления, который задает направление луча.</div>
Метод обновляет луч (ray) с новыми значениями <tt>origin</tt> и <tt>direction</tt>.<br><br>

<pre id="15setFromCamera"><span onclick="showClick(type_null)"><a href="#" onclick="return false" onblur="hideClick()" onmouseover="show('от англ. слов set from camera - установка от (позиции) камеры')" onmouseout="hide()">.setFromCamera</a></span>( <a href="math.htm#18" onmouseover="show('Vector2.<br>сокращение англ. слова coordinates - координаты')" onmouseout="hide()">coords</a>, <a href="cameras.htm#1" onmouseover="show('Camera.<br>camera - камера')" onmouseout="hide()">camera</a> )</pre>
<div class=list><tt>coords</tt> — двумерные (2D) координаты курсора мышки, в нормализованных координатах устройства (normalized device coordinates - NDC), т.е. значения координат <tt>X</tt> и <tt>Y</tt> должны быть в диапазоне между <tt>-1</tt> и <tt>1</tt>.</div>
<div class=list><tt>camera</tt> -- камера, из которой должен исходить луч.</div>
Метод обновляет луч (ray) с новыми координатами курсора мышки и камерой.<br><br>

<pre id="15intersectObject"><span onclick="showClick(type_array)"><a href="#" onclick="return false" onblur="hideClick()" onmouseover="show('от англ. слов intersect object - пересечение объекта')" onmouseout="hide()">.intersectObject</a></span>( <a href="#14" onmouseover="show('Object3D.<br>object - объект')" onmouseout="hide()">object</a>, <span onclick="showClick(type_bool)"><a href="#" onclick="return false" onblur="hideClick()" onmouseover="show('recursive - рекурсивный')" onmouseout="hide()">recursive</a></span>, <span onclick="showClick(type_array)"><a href="#" onclick="return false" onblur="hideClick()" onmouseover="show('optional target - дополнительная цель')" onmouseout="hide()">optionalTarget</a></span> )</pre>
<div class=list><tt>object</tt> — объект, проверяемый на пересечение данным лучом.</div>
<div class=list><tt>recursive</tt> - если установить как <tt>true</tt>, то будут проверены на пересечение все дочерние элементы данного объекта. В противном случае, метод проверит на пересечение с лучом только сам объект. По умолчанию значение равно <tt>false</tt>.</div>
<div class=list><tt>optionalTarget</tt> — дополнительный, необязательный аргумент для установки результата метода, в противном случае будет создан новый экземпляр массива. Если аргумент определен, необходимо очищать этот массив перед каждым вызовом (т. е. <tt>array.length = 0;</tt>).</div>
Метод проверяет на пересечение лучом объекта, при этом в проверку могут быть включены (или не включены) все потомки объекта. Случаи пересечения возвращаются отсортированными по расстоянию, первым оказывается самое ближайшее пересечение.<br>
Возвращаемый массив пересечений...
<pre>[ { distance, point, face, faceIndex, object }, ... ]</pre>
<div class=blockindent>
<div class=list><tt><span onclick="showClick(type_float)"><a href="#" onclick="return false" onblur="hideClick()" onmouseover="show('distance - расстояние')" onmouseout="hide()">distance</a></span></tt>
-- расстояние между началом луча и точкой пересечения.</div>
<div class=list><tt><a href="math.htm#19" onmouseover="show('Vector3.<br>point - точка')" onmouseout="hide()">point</a></tt> -- точка пересечения, в "мировых" координатах.</div>
<div class=list><tt><a href="#6" onmouseover="show('Face3.<br>face - грань')" onmouseout="hide()">face</a></tt> -- пересекаемая грань.</div>
<div class=list><tt><span onclick="showClick(type_int)"><a href="#" onclick="return false" onblur="hideClick()" onmouseover="show('face index - индексы граней')" onmouseout="hide()">faceIndex</a></span></tt> -- индекс пересекаемой грани.</div>
<div class=list><tt><a href="#14" onmouseover="show('Object3D.<br>object - объект')" onmouseout="hide()">object</a></tt> -- пересекаемый объект.</div>
<div class=list><tt><a href="math.htm#18" onmouseover="show('Vector2.<br>uv - координаты U и V')" onmouseout="hide()">uv</a></tt> -- координаты U, V точки пересечения.</div></div>

Raycaster делегирует методу <tt><a href="#14raycast" onmouseover="show('Object3D.raycast')" onmouseout="hide()">raycast</a></tt> переданного объекта определение того, пересекает ли луч объект или нет. Это позволяет <a href="objects.htm#7" onmouseover="show('Mesh')" onmouseout="hide()">сеткам</a> реагировать на рейкастинг по-другому, нежели <a href="objects.htm#3" onmouseover="show('Line')" onmouseout="hide()">линии</a> и <a href="objects.htm#8" onmouseover="show('Points')" onmouseout="hide()">облака точек</a>.<br><br>
Обратите внимание, что для <a href="objects.htm#7" onmouseover="show('Mesh')" onmouseout="hide()">сеток</a>, чтобы обнаружить грани, эти грани должны быть направлены передней стороной к исходной точке <a href="#15ray" onmouseover="show('Raycaster.ray')" onmouseout="hide()">луча</a>; пересечение лучом грани через обратную (заднюю) сторону, не "замечает" грань.
Чтобы луч срабатывал на обоих сторонах грани объекта, следует установить свойство <tt><a href="materials.htm#3side" onmouseover="show('Material.side')" onmouseout="hide()">side</a></tt> <a href="objects.htm#7material" onmouseover="show('Mesh.material')" onmouseout="hide()">материала</a> как <tt><a href="constants.htm#5.1" onmouseover="show('константа THREE.DoubleSide')" onmouseout="hide()">THREE.DoubleSide</a></tt>.<br><br>

<pre id="15intersectObjects"><span onclick="showClick(type_array)"><a href="#" onclick="return false" onblur="hideClick()" onmouseover="show('intersect objects - пересечение объектов')" onmouseout="hide()">.intersectObjects</a></span>( <span onclick="showClick(type_array)"><a href="#" onclick="return false" onblur="hideClick()" onmouseover="show('objects - объекты')" onmouseout="hide()">objects</a></span>, <span onclick="showClick(type_bool)"><a href="#" onclick="return false" onblur="hideClick()" onmouseover="show('recursive - рекурсивный')" onmouseout="hide()">recursive</a></span>, <span onclick="showClick(type_array)"><a href="#" onclick="return false" onblur="hideClick()" onmouseover="show('optional target - дополнительная цель')" onmouseout="hide()">optionalTarget</a></span> )</pre>
<div class=list><tt>objects</tt> — объекты, проверяемые на пересечение с данным лучом.</div>
<div class=list><tt>recursive</tt> — если установить как <tt>true</tt>, то будут проверены на пересечение все дочерние элементы данного объекта. В противном случае, метод проверит на пересечение с лучом только сам объект. По умолчанию значение равно <tt>false</tt>.</div>
<div class=list><tt>optionalTarget</tt> — дополнительный, необязательный аргумент для установки результата метода, в противном случае будет создан новый экземпляр массива. Если аргумент определен, необходимо очищать этот массив перед каждым вызовом (т. е. <tt>array.length = 0;</tt>).</div>
Метод проверяет на пересечение лучом объекты, при этом в проверку могут быть включены (или не включены) все потомки объектов. Случаи пересечения возвращаются отсортированными по расстоянию, первым оказывается самое ближайшее пересечение.
Пересечения возвращаются в том же самом виде, что и у метода <tt><a href="#15intersectObject" onmouseover="show('Raycaster.intersectObject')" onmouseout="hide()">intersectObject</a></tt>.</div><br>

<h4>Исходники</h4>
<div class=blockindent><a href="https://github.com/mrdoob/three.js/blob/master/src/core/Raycaster.js" target="_blank">Raycaster.js на github.com</a></div><br><br>


<h3 id="16">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; Uniform</h3>
<span class="lnk" onmouseover="show('от англ. слова uniform - единообразный, однородный')" onmouseout="hide()">Униформы</span> - это глобальные переменные <a href="https://www.opengl.org/documentation/glsl/" target="_blank">GLSL</a>, передаваемые в шейдерные программы (т.е. в вершинный и фрагментный шейдеры), в качестве параметров.<br>
Называются они так потому, что имеют единообразное значение для всех вершин; освещение, туман и карты тени - вот примеры данных, которые будут храниться в униформах. Обращаться к униформам можно как с помощью вершинного шейдера, так и с помощью шейдера фрагментов.<br>
Обратите внимание, что внутри собственно самого шейдера, униформы действуют как константы, т.е. их значения не изменяются от одного выполнения шейдерной программы до следующего, в рамках конкретного вызова визуализации (рендеринга);
изменять их значения можно только передачей различных значений в буферы из JavaScript кода.
Этим они отличаются от входных и выходных данных шейдерной шагов, которые часто различаются при каждом вызове шага программы.<br><br>

<h4>Пример</h4>
При объявлении uniform из <a href="materials.htm#14">ShaderMaterial</a>, он объявляется по значению или по объекту.
<pre>uniforms: {
	time: { value: 1.0 },
	resolution: new THREE.Uniform(new THREE.Vector2())
}</pre><br>

<h4>Типы униформ</h4>
Каждый униформ должен иметь свойство <tt>value</tt>. Тип этого <tt>value</tt> должен соответствовать типу переменной униформ в коде GLSL, как указано для примитивных типов GLSL в таблице ниже.
Поддерживаются также структуры и массивы униформ. Массивы примитивных типов GLSL должны либо указываться как массивы соответствующих THREE-объектов, либо как двумерный массив, содержащий данные всех объектов.
Другими словами; примитивы GLSL в массивах не должны быть представлены массивами. Это правило не применяется <a href="http://dic.academic.ru/dic.nsf/bse/140735/%D0%A2%D1%80%D0%B0%D0%BD%D0%B7%D0%B8%D1%82%D0%B8%D0%B2%D0%BD%D0%BE%D1%81%D1%82%D1%8C" onmouseover="show('Транзитивность (от лат. transitivus — переходный, &#171;переходность&#187;)<br>- одно из свойств логического отношения величин.<br>Отношение <tt>а*b</tt> называется транзитивным, если из <tt>а*b</tt> и <tt>b*c</tt><br>вытекает, что <tt>а*c</tt>. Здесь звездочкой (*) обозначено какое-либо действие.<br>Например, отношение равенства (<tt>а = b</tt>) транзитивно, так как из <tt>а = b</tt><br>и <tt>b = с</tt> вытекает <tt>а = с</tt>. Аналогично, транзитивным является отношение<br>&#171;a больше b&#187; (а > b). Отношение же &#171;<tt>a</tt> не равно <tt>b</tt>&#187; (<tt>a &#8800; b</tt>) не транзитивно,<br>так как из <tt>a &#8800; b</tt> и <tt>b &#8800; c</tt> ещё не вытекает <tt>a &#8800; c</tt>.<br>В геометрии транзитивным является отношение параллельности между<br>двумя прямыми (если <tt>&#945;</tt> параллельна <tt>&#946;</tt>, а <tt>&#946;</tt> параллельна <tt>&#947;</tt>, то и<br><tt>&#945;</tt> параллельна <tt>&#947;</tt>), отношение же перпендикулярности прямых не транзитивно.')" onmouseout="hide()">транзитивно</a>.
(<a href="https://ru.wikipedia.org/wiki/%D0%A2%D1%80%D0%B0%D0%BD%D0%B7%D0%B8%D1%82%D0%B8%D0%B2%D0%BD%D0%BE%D1%81%D1%82%D1%8C" target="_blank">Статья Википедии о транзитивности</a>.)
Массив из массивов <tt>vec2</tt>, каждый из которых длиной в пять векторов, должен быть массивом массивов либо из пяти объектов <a href="math.htm#18" onmouseover="show('Vector2')" onmouseout="hide()">Vector2</a>, либо из десяти чисел.<br>
<span class="caption_top">Типы Uniform</span>
<table class="tbl_1" border="1" cellpadding="5" width="90%">
<tr class="head"><td>Типы GLSL</td><td>Типы JavaScript</td><td width="1"></td><td>Типы GLSL</td><td>Типы JavaScript</td></tr>
<tr valign="top"><td><tt>int</tt></td><td><span class="lnk" onmouseover="show('number - число')" onmouseout="hide()">Number</span></td><td width="1"></td><td><tt>float</tt></td><td><span class="lnk" onmouseover="show('number - число')" onmouseout="hide()">Number</span></td></tr>
<tr valign="top"><td><tt>bool</tt></td><td><span class="lnk" onmouseover="show('boolean - логическое (булево) значение<br>т.е. либо true, либо false')" onmouseout="hide()">Boolean</span></td><td width="1"></td><td><tt>bool</tt></td><td><span class="lnk" onmouseover="show('number - число')" onmouseout="hide()">Number</span></td></tr>
<tr valign="top"><td><tt>vec2</tt></td><td><a href="math.htm#18" onmouseover="show('Vector2<br>двумерный вектор')" onmouseout="hide()">THREE.Vector2</a></td><td width="1"></td><td><tt>vec2</tt></td><td><span class="lnk" onmouseover="show('массив из 32-разрядных чисел с плавающей запятой')" onmouseout="hide()">Float32Array</span> (*)</td></tr>
<tr valign="top"><td><tt>vec2</tt></td><td><span class="lnk" onmouseover="show('array - массив')" onmouseout="hide()">Array</span> (*)</td><td width="1"></td><td><tt>vec3</tt></td><td><a href="math.htm#19" onmouseover="show('Vector3<br>трехмерный вектор')" onmouseout="hide()">THREE.Vector3</a></td></tr>
<tr valign="top"><td><tt>vec3</tt></td><td><a href="math.htm#3" onmouseover="show('Color<br>color - цвет')" onmouseout="hide()">THREE.Color</a></td><td width="1"></td><td><tt>vec3</tt></td><td><span class="lnk" onmouseover="show('массив из 32-разрядных чисел с плавающей запятой')" onmouseout="hide()">Float32Array</span> (*)</td></tr>
<tr valign="top"><td><tt>vec3</tt></td><td><span class="lnk" onmouseover="show('array - массив')" onmouseout="hide()">Array</span> (*)</td><td width="1"></td><td><tt>vec4</tt></td><td><a href="math.htm#20" onmouseover="show('Vector4<br>четырехмерный вектор')" onmouseout="hide()">THREE.Vector4</a></td></tr>
<tr valign="top"><td><tt>vec4</tt></td><td><a href="math.htm#13" onmouseover="show('Quaternion<br>кватернион')" onmouseout="hide()">THREE.Quaternion</a></td><td width="1"></td><td><tt>vec4</tt></td><td><span class="lnk" onmouseover="show('массив из 32-разрядных чисел с плавающей запятой')" onmouseout="hide()">Float32Array</span> (*)</td></tr>
<tr valign="top"><td><tt>vec4</tt></td><td><span class="lnk" onmouseover="show('array - массив')" onmouseout="hide()">Array</span> (*)</td><td width="1"></td><td><tt>mat2</tt></td><td><span class="lnk" onmouseover="show('массив из 32-разрядных чисел с плавающей запятой')" onmouseout="hide()">Float32Array</span> (*)</td></tr>
<tr valign="top"><td><tt>mat2</tt></td><td><span class="lnk" onmouseover="show('array - массив')" onmouseout="hide()">Array</span> (*)</td><td width="1"></td><td><tt>mat3</tt></td><td><a href="math.htm#10" onmouseover="show('Matrix3<br>матрица 3&#215;3')" onmouseout="hide()">THREE.Matrix3</a></td></tr>
<tr valign="top"><td><tt>mat3</tt></td><td><span class="lnk" onmouseover="show('массив из 32-разрядных чисел с плавающей запятой')" onmouseout="hide()">Float32Array</span> (*)</td><td width="1"></td><td><tt>mat3</tt></td><td><span class="lnk" onmouseover="show('array - массив')" onmouseout="hide()">Array</span> (*)</td></tr>
<tr valign="top"><td><tt>mat4</tt></td><td><a href="math.htm#11" onmouseover="show('Matrix4<br>матрица 4&#215;4')" onmouseout="hide()">THREE.Matrix4</a></td><td width="1"></td><td><tt>mat4</tt></td><td><span class="lnk" onmouseover="show('массив из 32-разрядных чисел с плавающей запятой')" onmouseout="hide()">Float32Array</span> (*)</td></tr>
<tr valign="top"><td><tt>mat4</tt></td><td><span class="lnk" onmouseover="show('array - массив')" onmouseout="hide()">Array</span> (*)</td><td width="1"></td><td><tt>ivec2</tt>, <tt>bvec2</tt></td><td><span class="lnk" onmouseover="show('массив из 32-разрядных чисел с плавающей запятой')" onmouseout="hide()">Float32Array</span> (*)</td></tr>
<tr valign="top"><td><tt>ivec2</tt>, <tt>bvec2</tt></td><td><span class="lnk" onmouseover="show('array - массив')" onmouseout="hide()">Array</span> (*)</td><td width="1"></td><td><tt>ivec3</tt>, <tt>bvec3</tt></td><td><span class="lnk" onmouseover="show('массив из 32-разрядных целых чисел')" onmouseout="hide()">Int32Array</span> (*)</td></tr>
<tr valign="top"><td><tt>ivec3</tt>, <tt>bvec3</tt></td><td><span class="lnk" onmouseover="show('array - массив')" onmouseout="hide()">Array</span> (*)</td><td width="1"></td><td><tt>ivec4</tt>, <tt>bvec4</tt></td><td><span class="lnk" onmouseover="show('массив из 32-разрядных целых чисел')" onmouseout="hide()">Int32Array</span> (*)</td></tr>
<tr valign="top"><td><tt>ivec4</tt>, <tt>bvec4</tt></td><td><span class="lnk" onmouseover="show('array - массив')" onmouseout="hide()">Array</span> (*)</td><td width="1"></td><td><tt>sampler2D</tt></td><td><a href="textures.htm#6" onmouseover="show('Texture')" onmouseout="hide()">THREE.Texture</a></td></tr>
<tr valign="top"><td><tt>samplerCube</tt></td><td><a href="textures.htm#3" onmouseover="show('CubeTexture')" onmouseout="hide()">THREE.CubeTexture</a><td width="1"></td><td></td></tr></table>
<span class="caption">(*) То же самое для (внутреннего) массива (размерности) того же типа GLSL, содержащего компоненты всех векторов или матриц в массиве.</span><br><br>

<h4>Конструктор</h4><br>
<pre>Uniform( <span onclick="showClick(type_obj)"><a href="#" onclick="return false" onblur="hideClick()" onmouseover="show('от англ. слова value - значение')" onmouseout="hide()">value</a></span> )</pre>
<div class=list><tt>value</tt> -- объект, содержащий значение для установки в униформ. Его тип должен быть одним из типов Uniform описанных выше.</div><br>

<h4>Свойства</h4>
<div class=blockindent><br>
<pre id="16value"><span onclick="showClick(type_obj)"><a href="#" onclick="return false" onblur="hideClick()" onmouseover="show('от англ. слова value - значение')" onmouseout="hide()">.value</a></span></pre>
Текущее значение униформа.</div><br>

<h4>Методы</h4>
<div class=blockindent><br>
<pre id="16clone"><a href="#16" onmouseover="show('Uniform.<br>clone - клонировать')" onmouseout="hide()">.clone</a>( )</pre>
Возвращает клона данного униформа. Если свойство <tt>value</tt> униформа является объектом с методом <tt>clone()</tt>, то это используется, в противном случае, значение копируется по назначению. Значения массива являются общими для клонов Uniform.<br>
В качестве примера использования данного метода посмотрите <a href="https://threejs.org/examples/#webgldeferred_animation" target="_blank">WebGL deferred animation</a>.</div><br>

<h4>Исходники</h4>
<div class=blockindent><a href="https://github.com/mrdoob/three.js/blob/master/src/core/Uniform.js" target="_blank">Uniform.js на github.com</a></div><br>

<br><br>
</body></html>
