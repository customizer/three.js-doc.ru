<!DOCTYPE html PUBLIC "-//W3C//DTD HTML 4.01 Transitional//EN">
<html><head>
<title>Three.js</title>
<meta http-equiv="content-type" content="text/html; charset=utf-8">
<link rel="stylesheet" type="text/css" href="1.css">
<script type="text/javascript" src="1.js"></script>
</head>
<body>
<h2 class=head1>Справочник разработчика</h2>
<h2 id="1">Полифиллы</h2>
<div class=note_trans>«Полифилл» (англ. «polyfill» - poly - много, fill - наполнять, заполнять)<br><a class='link' onclick='javascript:spoiler(this)'>... читать далее</a>
<div style='display:none;'> — это библиотека, которая добавляет в старые браузеры поддержку возможностей, которые в современных браузерах являются встроенными.
Или, если говорить о современных браузерах, то они тоже не все идут «в ногу», всегда какие-то современные возможности реализуются сначала в одном, потом в другом.
Так вот, первая часть слова говорит о привлечении любого числа технологий, то есть с поставленной задачей можно справиться не только посредством JavaScript, а вторая часть подразумевает заполнение той «дыры» браузера, в которой и должна находиться реализуемая таким образом технология.<br><br>
Полифиллы позволяют исправлять ошибки в конкретном API или добавлять в веб-браузер функционал, который по умолчанию частично или полностью им не поддерживается. Полифиллы не создают лишних зависимостей и могут быть легко удалены, когда они больше не нужны.<br>
Обычно полифилл состоит из двух частей:
<div class=blockindent>Проверка, есть ли встроенная возможность.<br>Эмуляция, если её нет.</div>
По мнению <span class="lnk" onmouseover="show('Термин был придуман Реми Шарпом (англ. Remy Sharp) в 2009 году<br>во время работы над книгой «Введение в HTML5»')" onmouseout="hide()">автора термина</span>,
ассоциация с заделыванием трещин и дыр в стенах вполне подходит для визуализации того, как полифиллы в веб-программировании «ремонтируют» браузер.</div></div>
В <em>three.js</em> включены полифиллы для следующих функций и констант.
<div class=blockindent><br>
<pre id="1Number.EPSILON"><span class="lnk" onmouseover="show('Number.EPSILON')" onmouseout="hide()">Number.EPSILON</span></pre>
Разница между единицей и наименьшим значением, большим единицы, которую можно представить в виде числа.<br>
<a href="https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Number/EPSILON" target="_blank">Справка MDN (Mozilla Developer Network - сеть разработчиков Mozilla)</a>,<br>
<a href="https://developer.mozilla.org/ru/docs/Web/JavaScript/Reference/Global_Objects/Number/EPSILON" target="_blank">то же и там же, но на русском языке</a>.<br><br>

<pre id="1Math.sign"><span class="lnk" onmouseover="show('Math.sign')" onmouseout="hide()">Math.sign</span>( <span onclick="showClick(type_number)"><a href="#" onclick="return false" onblur="hideClick()" onmouseover="show('x')" onmouseout="hide()">x</a></span> )</pre>
Если аргумент является положительным числом, отрицательным числом, положительным нулем или отрицательным нулем, функция возвратит соответственно <tt>1</tt>, <tt>-1</tt>, <tt>0</tt> или <tt>-0</tt>.
В противном случае возвращается значение <tt><span class="lnk" onmouseover="show('от англ. Not-a-Number - «не число»')" onmouseout="hide()">NaN</span></tt>.<br>
<a href="https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Math/sign" target="_blank">Справка MDN (Mozilla Developer Network - сеть разработчиков Mozilla)</a>,<br>
<a href="https://developer.mozilla.org/ru/docs/Web/JavaScript/Reference/Global_Objects/Math/sign" target="_blank">то же и там же, но на русском языке</a>.<br><br>

<pre id="1Function.prototype.name"><a href="#" onmouseover="show('Function.prototype.name')" onmouseout="hide()">Function.prototype.name</a>( <span onclick="showClick(type_number)"><a href="#" onclick="return false" onblur="hideClick()" onmouseover="show('x - обозначение неизвестного')" onmouseout="hide()">x</a></span> )</pre>
Возвращает имя функции или (до внедрения ES6) пустую строку для безымянных функций.<br>
<a href="https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Function/name" target="_blank">Справка MDN (Mozilla Developer Network - сеть разработчиков Mozilla)</a>,<br>
<a href="https://developer.mozilla.org/ru/docs/Web/JavaScript/Reference/Global_Objects/Function/name" target="_blank">то же и там же, но на русском языке</a>.<br><br>

<pre id="1Object.assign"><a href="#" onmouseover="show('object assign - назначить объект')" onmouseout="hide()">Object.assign</a>( <span onclick="showClick(type_obj)"><a href="#" onclick="return false" onblur="hideClick()" onmouseover="show('target - цель')" onmouseout="hide()">target</a></span>, <span onclick="showClick(type_obj)"><a href="#" onclick="return false" onblur="hideClick()" onmouseover="show('sources - источники, исходники')" onmouseout="hide()">...sources</a></span> )</pre>
Метод <tt>Object.assign()</tt> используется для копирования значений всех имеющихся перечислимых свойств одного или нескольких исходных объектов в целевой объект (<tt>target</tt>). Метод возвратит целевой объект.<br>
<a href="https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Object/assign" target="_blank">Справка MDN (Mozilla Developer Network - сеть разработчиков Mozilla)</a>,<br>
<a href="https://developer.mozilla.org/ru/docs/Web/JavaScript/Reference/Global_Objects/Object/assign" target="_blank">то же и там же, но на русском языке</a>.</div><br>

<h4>Исходники</h4>
<div class=blockindent><a href="https://github.com/mrdoob/three.js/blob/master/src/polyfills.js" target="_blank">Polyfills.js на github.com</a></div><br><br>

<h2 id="2">WebGLRenderer</h2>
<h3 id="2.1">WebGLProgram</h3>
Конструктор для программы GLSL, отправляемой в вершинные и фрагментарные шейдеры, включая стандартные атрибуты и униформы.

<h4>Встроенные униформы и атрибуты</h4>
<h5>Вершинный шейдер (безусловный):</h5>
<pre>// = object.matrixWorld
uniform mat4 modelMatrix;<br>
// = camera.matrixWorldInverse * object.matrixWorld
uniform mat4 modelViewMatrix;<br>
// = camera.projectionMatrix
uniform mat4 projectionMatrix;<br>
// = camera.matrixWorldInverse
uniform mat4 viewMatrix;<br>
// = inverse transpose of modelViewMatrix (обратная перестановка modelViewMatrix)
uniform mat3 normalMatrix;<br>
// = camera position in world space (положение камеры в мировом пространстве)
uniform vec3 cameraPosition;</pre><br>
<pre>// default vertex attributes provided by Geometry and BufferGeometry
// стандартные атрибуты вершин, предоставленные Geometry и BufferGeometry
attribute vec3 position;
attribute vec3 normal;
attribute vec2 uv;
attribute vec2 uv2;</pre>
Обратите внимание, что таким образом можно рассчитать положение вершины в вершинном шейдере посредством:
<pre>gl_Position = projectionMatrix * modelViewMatrix * vec4( position, 1.0 );</pre>
или же
<pre>gl_Position = projectionMatrix * viewMatrix * modelMatrix * vec4( position, 1.0 );</pre>

<h5>Шейдер вершин (условный):</h5>
<pre>#ifdef USE_COLOR
  // vertex color attribute (атрибут цвета вершины)
	attribute vec3 color;
#endif</pre><br>
<pre>#ifdef USE_MORPHTARGETS<br>
  attribute vec3 morphTarget0;
  attribute vec3 morphTarget1;
  attribute vec3 morphTarget2;
  attribute vec3 morphTarget3;<br>
  #ifdef USE_MORPHNORMALS<br>
    attribute vec3 morphNormal0;
    attribute vec3 morphNormal1;
    attribute vec3 morphNormal2;
    attribute vec3 morphNormal3;<br>
  #else<br>
    attribute vec3 morphTarget4;
    attribute vec3 morphTarget5;
    attribute vec3 morphTarget6;
    attribute vec3 morphTarget7;<br>
  #endif
#endif</pre>
<pre>#ifdef USE_SKINNING
  attribute vec4 skinIndex;
  attribute vec4 skinWeight;
#endif</pre>

<h5>Шейдер фрагментов:</h5>
<pre>uniform mat4 viewMatrix;
uniform vec3 cameraPosition;</pre><br>


<h4>Конструктор</h4>
<pre>WebGLProgram( <a href="renderers.htm#1.1" onmouseover="show('WebGLRenderer')" onmouseout="hide()">renderer</a>, <span onclick="showClick(type_obj)"><a href="#" onclick="return false" onblur="hideClick()" onmouseover="show('code - код')" onmouseout="hide()">code</a></span>, <a href="materials.htm#3" onmouseover="show('Material.<br>material - материал')" onmouseout="hide()">material</a>, <span onclick="showClick(type_obj)"><a href="#" onclick="return false" onblur="hideClick()" onmouseover="show('parameters - параметры')" onmouseout="hide()">parameters</a></span> )</pre>
Параметры смотрите в описании <a href="renderers.htm#1" onmouseover="show('WebGLRenderer')" onmouseout="hide()">WebGLRenderer</a>.<br><br>

<h4>Свойства</h4>
<div class=blockindent><br>
<pre id="2id"><span onclick="showClick(type_string)"><a href="#" onclick="return false" onblur="hideClick()" onmouseover="show('id - сокращение от англ. слова identifier - идентификатор')" onmouseout="hide()">.id</a></span></pre>

<pre id="2code"><span onclick="showClick(type_string)"><a href="#" onclick="return false" onblur="hideClick()" onmouseover="show('code - код')" onmouseout="hide()">.code</a></span></pre>

<pre id="2usedTimes"><span onclick="showClick(type_int)"><a href="#" onclick="return false" onblur="hideClick()" onmouseover="show('used times - ')" onmouseout="hide()">.usedTimes</a></span></pre>

<pre id="2program"><span onclick="showClick(type_obj)"><a href="#" onclick="return false" onblur="hideClick()" onmouseover="show('program - программа')" onmouseout="hide()">.program</a></span></pre>

<pre id="2vertexShader"><a href="#2.2" onmouseover="show('WebGLShader.<br>vertex shader - вершинный шейдер')" onmouseout="hide()">.vertexShader</a></pre>

<pre id="2fragmentShader"><a href="#2.2" onmouseover="show('WebGLShader.<br>fragment shader - шейдер фрагментов')" onmouseout="hide()">.fragmentShader</a></pre>
</div><br>

<h4>Методы</h4>
<div class=blockindent><br>
<pre id="2getUniforms"><span onclick="showClick(type_obj)"><a href="#" onclick="return false" onblur="hideClick()" onmouseover="show('get uniforms - получить униформы')" onmouseout="hide()">.getUniforms</a></span>( )</pre>
Метод возвращает сопоставления имя-значение из всех активных мест, где расположены униформы.<br><br>

<pre id="2getAttributes"><span onclick="showClick(type_obj)"><a href="#" onclick="return false" onblur="hideClick()" onmouseover="show('get attributes - получить атрибуты')" onmouseout="hide()">.getAttributes</a></span>( )</pre>
Метод возвращает сопоставления имя-значение из всех активных мест, где расположены атрибуты вершин.</div><br>

<h4>Исходники</h4>
<div class=blockindent><a href="https://github.com/mrdoob/three.js/blob/master/src/renderers/webgl/WebGLProgram.js" target="_blank">WebGLProgram.js на github.com</a></div><br><br>


<h3 id="2.2">WebGLShader</h3>
Низкоуровневая функция для компиляции либо вершинного, либо фрагментарного шейдера.<br><br>

<h4>Пример</h4>
<pre>var gl = renderer.context;<br>
var glVertexShader = new THREE.WebGLShader( gl, gl.VERTEX_SHADER, vertexSourceCode );
var glFragmentShader = new THREE.WebGLShader( gl, gl.FRAGMENT_SHADER, fragmentSourceCode );<br>
var program = gl.createProgram();<br>
gl.attachShader( program, glVertexShader );
gl.attachShader( program, glFragmentShader );<br>
gl.linkProgram( program );</pre><br>

<h4>Функция</h4>
<div class=blockindent><br>
<pre><a href="#2.2" onmouseover="show('WebGLShader.<br>objects - объекты')" onmouseout="hide()">objects</a>( <a href="#" onmouseover="show('WebGLContext.<br>gl - сокращ. от англ. слов graphics library - графическая библиотека')" onmouseout="hide()">gl</a>, <a href="#" onmouseover="show('WebGLEnum.<br>type - тип')" onmouseout="hide()">type</a>, <span onclick="showClick(type_string)"><a href="#" onclick="return false" onblur="hideClick()" onmouseover="show('source - источник, исходник')" onmouseout="hide()">source</a></span> )</pre>
<div class=list><tt>gl</tt> -- текущий контекст WebGL</div>
<div class=list><tt>type</tt> -- тип WebGL, либо <tt>gl.VERTEX_SHADER</tt>, либо <tt>gl.FRAGMENT_SHADER</tt></div>
<div class=list><tt>source</tt> -- исходный код для шейдера</div>
Функция скомпилирует (соберет) индивидуальный шейдер, но не увяжет (слинкует) его до полной <a href="#2.1" onmouseover="show('WebGLProgram')" onmouseout="hide()">WebGLProgram</a>.
<div class=note><b>Примечание:</b> Это функция, так что другие операторы использовать нельзя.</div></div><br>

<h4>Исходники</h4>
<div class=blockindent><a href="https://github.com/mrdoob/three.js/blob/master/src/renderers/webgl/WebGLShader.js" target="_blank">WebGLShader.js на github.com</a></div><br><br>


<h3 id="2.3">WebGLState</h3>
<br><br>
<h4>Методы</h4>
<div class=blockindent><br>
<pre id="2.3enable"><span onclick="showClick(type_null)"><a href="#" onclick="return false" onblur="hideClick()" onmouseover="show('enable - включить')" onmouseout="hide()">.enable</a></span>( <span onclick="showClick(type_int)"><a href="#" onclick="return false" onblur="hideClick()" onmouseover="show('id - сокращ. англ. слова identifier - идентификатор')" onmouseout="hide()">id</a></span>, <span onclick="showClick(type_bool)"><a href="#" onclick="return false" onblur="hideClick()" onmouseover="show('boolean - булев, логический')" onmouseout="hide()">boolean</a></span> )</pre>
TODO<br><br>

<pre id="2.3disable"><span onclick="showClick(type_null)"><a href="#" onclick="return false" onblur="hideClick()" onmouseover="show('disable - отключить')" onmouseout="hide()">.disable</a></span>( <span onclick="showClick(type_int)"><a href="#" onclick="return false" onblur="hideClick()" onmouseover="show('id - сокращ. англ. слова identifier - идентификатор')" onmouseout="hide()">id</a></span>, <span onclick="showClick(type_bool)"><a href="#" onclick="return false" onblur="hideClick()" onmouseover="show('boolean - булев, логический')" onmouseout="hide()">boolean</a></span> )</pre>
TODO<br><br>

<pre id="2.3setDepthTest"><span onclick="showClick(type_null)"><a href="#" onclick="return false" onblur="hideClick()" onmouseover="show('set depth test - установить проверку глубины')" onmouseout="hide()">.setDepthTest</a></span>( <span onclick="showClick(type_bool)"><a href="#" onclick="return false" onblur="hideClick()" onmouseover="show('depth test - проверка глубины')" onmouseout="hide()">depthTest</a></span> )</pre>
<div class=list><tt>depthTest</tt> -- логическое значение для определения необходимости проверки глубины фрагмента по буферу глубины.</div>
Метод устанавливает (на основе значения <tt>depthTest</tt>) необходимость проверки данных глубины по буферу глубины.<br><br>

<pre id="2.3setDepthWrite"><span onclick="showClick(type_null)"><a href="#" onclick="return false" onblur="hideClick()" onmouseover="show('set depth write - установить запись глубины')" onmouseout="hide()">.setDepthWrite</a></span>( <span onclick="showClick(type_bool)"><a href="#" onclick="return false" onblur="hideClick()" onmouseover="show('depth write - запись глубины')" onmouseout="hide()">depthWrite</a></span> )</pre>
<div class=list><tt>depthWrite</tt> -- логическое значение для определения необходимости сохранения глубины фрагмента.</div>
Метод устанавливает (на основе значения <tt>depthWrite</tt>) необходимо ли записывать данные глубины в буфер глубины.<br><br>

<pre id="2.3setBlending"><span onclick="showClick(type_null)"><a href="#" onclick="return false" onblur="hideClick()" onmouseover="show('set blending - установить смешивание')" onmouseout="hide()">.setBlending</a></span>( <span onclick="showClick(type_number)"><a href="#" onclick="return false" onblur="hideClick()" onmouseover="show('blending - смешивание')" onmouseout="hide()">blending</a></span>, <span onclick="showClick(type_number)"><a href="#" onclick="return false" onblur="hideClick()" onmouseover="show('blending equation - уравнение смешивания')" onmouseout="hide()">blendEquation</a></span>, <span onclick="showClick(type_number)"><a href="#" onclick="return false" onblur="hideClick()" onmouseover="show('blend src - сокращ. англ. слов blending source - исходники смешивания')" onmouseout="hide()">blendSrc</a></span>, <span onclick="showClick(type_number)"><a href="#" onclick="return false" onblur="hideClick()" onmouseover="show('blend dst - сокращ. англ. слов blending destination - назначение смешивания')" onmouseout="hide()">blendDst</a></span> )</pre>
<div class=list><tt>blending</tt> -- число, показывающее режим смешивания.
Возможными значениями являются <tt><a href="constants.htm#5.3" onmouseover="show('no blending - нет смешивания')" onmouseout="hide()">THREE.NoBlending</a></tt>,
<tt><a href="constants.htm#5.3" onmouseover="show('normal blending - нормальное (обычное) смешивание')" onmouseout="hide()">THREE.NormalBlending</a></tt>,
<tt><a href="constants.htm#5.3" onmouseover="show('additive blending - смешивание с дополнением')" onmouseout="hide()">THREE.AdditiveBlending</a></tt>,
<tt><a href="constants.htm#5.3" onmouseover="show('subtractive blending - смешивание с вычитанием')" onmouseout="hide()">THREE.SubtractiveBlending</a></tt>,
<tt><a href="constants.htm#5.3" onmouseover="show('multiply blending - смешивание с перемножением')" onmouseout="hide()">THREE.MultiplyBlending</a></tt>
или <tt><a href="constants.htm#5.3" onmouseover="show('custom blending - настраиваемое смешивание')" onmouseout="hide()">THREE.CustomBlending</a></tt>.</div>
<div class=list><tt>blendEquation</tt> -- при установке в качестве режима смешивания (аргумент <tt>blending</tt>) <tt>THREE.CustomBlending</tt>, появляется возможность выбора <tt>blendEquation</tt> - уравнения смешивания.
Возможными значениями являются <tt><a href="constants.htm#3.1" onmouseover="show('add equation - уравнение сложения')" onmouseout="hide()">THREE.AddEquation</a></tt>,
<tt><a href="constants.htm#3.1" onmouseover="show('subtract equation - уравнение вычитания')" onmouseout="hide()">THREE.SubtractEquation</a></tt> или
<tt><a href="constants.htm#3.1" onmouseover="show('reverse subtract equation - уравнение обратного вычитания')" onmouseout="hide()">THREE.ReverseSubtractEquation</a></tt>.</div>
<div class=list><tt>blendSrc</tt> -- при установке в качестве режима смешивания (аргумент <tt>blending</tt>) <tt>THREE.CustomBlending</tt>, появляется возможность выбора <tt>blendSrc</tt> - исходников смешивания.
Возможными значениями являются <tt><a href="constants.htm#3.2" onmouseover="show('zero factor - нулевой фактор')" onmouseout="hide()">THREE.ZeroFactor</a></tt>,
<tt><a href="constants.htm#3.2" onmouseover="show('one factor - единичный фактор')" onmouseout="hide()">THREE.OneFactor</a></tt>,
<tt><a href="constants.htm#3.2" onmouseover="show('сокращ. от source color factor - исходный фактор цвета')" onmouseout="hide()">THREE.SrcColorFactor</a></tt>,
<tt><a href="constants.htm#3.2" onmouseover="show('сокращ. от one minus source color factor<br>- исходный фактор цвета минус единица')" onmouseout="hide()">THREE.OneMinusSrcColorFactor</a></tt>,
<tt><a href="constants.htm#3.2" onmouseover="show('сокращ. от source alpha factor -<br>исходный фактор прозрачности<br>(альфа-канала)')" onmouseout="hide()">THREE.SrcAlphaFactor</a></tt>,
<tt><a href="constants.htm#3.2" onmouseover="show('сокращ. от one minus source alpha factor -<br>исходный фактор прозрачности (альфа-канала)<br>минус единица')" onmouseout="hide()">THREE.OneMinusSrcAlphaFactor</a></tt>,
<tt><a href="constants.htm#3.2" onmouseover="show('сокращ. от destination alpha factor -<br>целевой фактор прозрачности (альфа-канала)')" onmouseout="hide()">THREE.DstAlphaFactor</a></tt>,
<tt><a href="constants.htm#3.2" onmouseover="show('сокращ. от one minus destination alpha factor -<br>целевой фактор прозрачности (альфа-канала)<br>минус единица')" onmouseout="hide()">THREE.OneMinusDstAlphaFactor</a></tt>,
<tt><a href="constants.htm#3.2" onmouseover="show('сокращ. от destination color factor<br>- целевой фактор цвета')" onmouseout="hide()">THREE.DstColorFactor</a></tt>,
<tt><a href="constants.htm#3.2" onmouseover="show('сокращ. от one minus destination color factor<br>- целевой фактор цвета минус единица')" onmouseout="hide()">THREE.OneMinusDstColorFactor</a></tt> или
<tt><a href="constants.htm#3.2" onmouseover="show('сокращ. от source alpha saturate factor<br>- исходный фактор насыщения<br>прозрачности (альфа-канала)')" onmouseout="hide()">THREE.SrcAlphaSaturateFactor</a></tt>.</div>
<div class=list><tt>blendDst</tt> -- при установке в качестве режима смешивания (аргумент <tt>blending</tt>) <tt>THREE.CustomBlending</tt>, появляется возможность выбора <tt>blendDst</tt> - назначения смешивания.
Возможными значениями являются <tt><a href="constants.htm#3.2" onmouseover="show('zero factor - нулевой фактор')" onmouseout="hide()">THREE.ZeroFactor</a></tt>,
<tt><a href="constants.htm#3.2" onmouseover="show('one factor - единичный фактор')" onmouseout="hide()">THREE.OneFactor</a></tt>,
<tt><a href="constants.htm#3.2" onmouseover="show('сокращ. от source color factor - исходный фактор цвета')" onmouseout="hide()">THREE.SrcColorFactor</a></tt>,
<tt><a href="constants.htm#3.2" onmouseover="show('сокращ. от one minus source color factor<br>- исходный фактор цвета минус единица')" onmouseout="hide()">THREE.OneMinusSrcColorFactor</a></tt>,
<tt><a href="constants.htm#3.2" onmouseover="show('сокращ. от source alpha factor -<br>исходный фактор прозрачности<br>(альфа-канала)')" onmouseout="hide()">THREE.SrcAlphaFactor</a></tt>,
<tt><a href="constants.htm#3.2" onmouseover="show('сокращ. от one minus source alpha factor -<br>исходный фактор прозрачности (альфа-канала)<br>минус единица')" onmouseout="hide()">THREE.OneMinusSrcAlphaFactor</a></tt>,
<tt><a href="constants.htm#3.2" onmouseover="show('сокращ. от destination alpha factor -<br>целевой фактор прозрачности (альфа-канала)')" onmouseout="hide()">THREE.DstAlphaFactor</a></tt>,
<tt><a href="constants.htm#3.2" onmouseover="show('сокращ. от one minus destination alpha factor -<br>целевой фактор прозрачности (альфа-канала)<br>минус единица')" onmouseout="hide()">THREE.OneMinusDstAlphaFactor</a></tt>,
<tt><a href="constants.htm#3.2" onmouseover="show('сокращ. от destination color factor<br>- целевой фактор цвета')" onmouseout="hide()">THREE.DstColorFactor</a></tt>,
<tt><a href="constants.htm#3.2" onmouseover="show('сокращ. от one minus destination color factor<br>- целевой фактор цвета минус единица')" onmouseout="hide()">THREE.OneMinusDstColorFactor</a></tt> или
<tt><a href="constants.htm#3.2" onmouseover="show('сокращ. от source alpha saturate factor<br>- исходный фактор насыщения<br>прозрачности (альфа-канала)')" onmouseout="hide()">THREE.SrcAlphaSaturateFactor</a></tt>.</div>
Данный метод устанавливает правильное смешивание.</div><br>

<h4>Исходники</h4>
<div class=blockindent><a href="https://github.com/mrdoob/three.js/blob/master/src/renderers/webgl/WebGLState.js" target="_blank">WebGLState.js на github.com</a></div><br><br>


<h2 id="3">Плагины WebGLRenderer</h2>
<h3 id="3.1">SpritePlugin</h3>
Класс подключаемого модуля (плагина) визуализатора WebGL, позволяющий отображать спрайты в WebGLRenderer'е. Данный плагин автоматически загружается в WebGLRenderer.<br><br>

<h4>Конструктор</h4>
<pre>SpritePlugin()</pre>
Создает новый <tt>SpritePlugin</tt>.<br><br>

<h4>Методы</h4>
<div class=blockindent><br>
<pre id="6render"><span onclick="showClick(type_null)"><a href="#" onclick="return false" onblur="hideClick()" onmouseover="show('render - показать, отобразить')" onmouseout="hide()">.render</a></span>( <a href="scenes.htm#3" onmouseover="show('scene - сцена, картина')" onmouseout="hide()">scene</a>, <a href="cameras.htm#1" onmouseover="show('camera - камера')" onmouseout="hide()">camera</a> )</pre>
<div class=list><tt>scene</tt> -- сцена для визуализации (рендеринга).</div>
<div class=list><tt>camera</tt> -- камера для визуализации (рендеринга).</div>
Метод отображает спрайты, определенные на сцене. Он вызывается автоматически как функция пост-рендеринга для рисования бликов от линз.</div><br>

<h4>Исходники</h4>
<div class=blockindent><a href="https://github.com/mrdoob/three.js/blob/master/src/renderers/webgl/plugins/SpritePlugin.js" target="_blank">SpritePlugin.js на github.com</a></div><br>

<br><br>
</body></html>
