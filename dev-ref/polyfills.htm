<!DOCTYPE html PUBLIC "-//W3C//DTD HTML 4.01 Transitional//EN">
<html><head>
<title>Three.js</title>
<meta http-equiv="content-type" content="text/html; charset=utf-8">
<link rel="stylesheet" type="text/css" href="../1.css">
<script type="text/javascript" src="../1.js"></script>
</head>
<body>

<h2>Полифиллы</h2>
<div class=note_trans>«Полифилл» (англ. «polyfill» - poly - много, fill - наполнять, заполнять)<br><a class='link' onclick='javascript:spoiler(this)'>... читать далее</a>
<div style='display:none;'> — это библиотека, которая добавляет в старые браузеры поддержку возможностей, которые в современных браузерах являются встроенными.
Или, если говорить о современных браузерах, то они тоже не все идут «в ногу», всегда какие-то современные возможности реализуются сначала в одном, потом в другом.
Так вот, первая часть слова говорит о привлечении любого числа технологий, то есть с поставленной задачей можно справиться не только посредством JavaScript, а вторая часть подразумевает заполнение той «дыры» браузера, в которой и должна находиться реализуемая таким образом технология.<br><br>
Полифиллы позволяют исправлять ошибки в конкретном API или добавлять в веб-браузер функционал, который по умолчанию частично или полностью им не поддерживается. Полифиллы не создают лишних зависимостей и могут быть легко удалены, когда они больше не нужны.<br>
Обычно полифилл состоит из двух частей:
<div class=blockindent>Проверка, есть ли встроенная возможность.<br>Эмуляция, если её нет.</div>
По мнению <span class="lnk" onmouseover="show('Термин был придуман Реми Шарпом (англ. Remy Sharp) в 2009 году<br>во время работы над книгой «Введение в HTML5»')" onmouseout="hide()">автора термина</span>,
ассоциация с заделыванием трещин и дыр в стенах вполне подходит для визуализации того, как полифиллы в веб-программировании «ремонтируют» браузер.</div></div>
В <em>three.js</em> включены полифиллы для следующих функций и констант.
<div class=blockindent><br>
<pre id="Number.EPSILON"><span class="lnk" onmouseover="show('Number.EPSILON')" onmouseout="hide()">Number.EPSILON</span></pre>
Разница между единицей и наименьшим значением, большим единицы, которую можно представить в виде числа.<br>
<a href="https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Number/EPSILON" target="_blank">Справка MDN (Mozilla Developer Network - сеть разработчиков Mozilla)</a>,<br>
<a href="https://developer.mozilla.org/ru/docs/Web/JavaScript/Reference/Global_Objects/Number/EPSILON" target="_blank">то же и там же, но на русском языке</a>.<br><br>

<pre id="Math.sign"><span class="lnk" onmouseover="show('Math.sign')" onmouseout="hide()">Math.sign</span>( <span onclick="showClick(type_number)"><a href="#" onclick="return false" onblur="hideClick()" onmouseover="show('x')" onmouseout="hide()">x</a></span> )</pre>
Если аргумент является положительным числом, отрицательным числом, положительным нулем или отрицательным нулем, функция возвратит соответственно <tt>1</tt>, <tt>-1</tt>, <tt>0</tt> или <tt>-0</tt>.
В противном случае возвращается значение <tt><span class="lnk" onmouseover="show('от англ. Not-a-Number - «не число»')" onmouseout="hide()">NaN</span></tt>.<br>
<a href="https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Math/sign" target="_blank">Справка MDN (Mozilla Developer Network - сеть разработчиков Mozilla)</a>,<br>
<a href="https://developer.mozilla.org/ru/docs/Web/JavaScript/Reference/Global_Objects/Math/sign" target="_blank">то же и там же, но на русском языке</a>.<br><br>

<pre id="Function.prototype.name"><a href="#" onmouseover="show('Function.prototype.name')" onmouseout="hide()">Function.prototype.name</a>( <span onclick="showClick(type_number)"><a href="#" onclick="return false" onblur="hideClick()" onmouseover="show('x - обозначение неизвестного')" onmouseout="hide()">x</a></span> )</pre>
Возвращает имя функции или (до внедрения ES6) пустую строку для безымянных функций.<br>
<a href="https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Function/name" target="_blank">Справка MDN (Mozilla Developer Network - сеть разработчиков Mozilla)</a>,<br>
<a href="https://developer.mozilla.org/ru/docs/Web/JavaScript/Reference/Global_Objects/Function/name" target="_blank">то же и там же, но на русском языке</a>.<br><br>

<pre id="Object.assign"><a href="#" onmouseover="show('object assign - назначить объект')" onmouseout="hide()">Object.assign</a>( <span onclick="showClick(type_obj)"><a href="#" onclick="return false" onblur="hideClick()" onmouseover="show('target - цель')" onmouseout="hide()">target</a></span>, <span onclick="showClick(type_obj)"><a href="#" onclick="return false" onblur="hideClick()" onmouseover="show('sources - источники, исходники')" onmouseout="hide()">...sources</a></span> )</pre>
Метод <tt>Object.assign()</tt> используется для копирования значений всех имеющихся перечислимых свойств одного или нескольких исходных объектов в целевой объект (<tt>target</tt>). Метод возвратит целевой объект.<br>
<a href="https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Object/assign" target="_blank">Справка MDN (Mozilla Developer Network - сеть разработчиков Mozilla)</a>,<br>
<a href="https://developer.mozilla.org/ru/docs/Web/JavaScript/Reference/Global_Objects/Object/assign" target="_blank">то же и там же, но на русском языке</a>.</div><br>

<h4>Исходники</h4>
<div class=blockindent><a href="https://github.com/mrdoob/three.js/blob/master/src/polyfills.js" target="_blank">Polyfills.js на github.com</a></div><br><br>

<br><br>
</body></html>