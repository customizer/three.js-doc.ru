<!DOCTYPE html PUBLIC "-//W3C//DTD HTML 4.01 Transitional//EN">
<html><head>
<title>Three.js - Примеры</title>
<meta http-equiv="content-type" content="text/html; charset=utf-8">
<link rel="stylesheet" type="text/css" href="1.css">
<script type="text/javascript" src="1.js"></script>
</head>
<body>
<h2 class=head1>Примеры</h2>
<div class=below>Здесь даются примеры реализации различных подсобных объектов и функций.<br><br>
<table width=100%>
<tr><td width=50% valign=top>
<div class=blockindent><a href="#0">Анимации</a>
<div class=list><a href="#0.1">CCDIKSolver</a> - решатель для инверсной кинематики с алгоритмом&nbsp;CCD</div>
<div class=list><a href="#0.2">MMDAnimationHelper</a> - вспомогательный элемент для анимации с ресурсами в формате&nbsp;MMD</div>
<div class=list><a href="#0.3">MMDPhysics</a> - обработка физических свойств для ресурсов&nbsp;MMD</div></div>
<div class=blockindent><a href="#1">Контролы (элементы управления)</a>
<div class=list><a href="#1.1">OrbitControls</a> - элемент управления, позволяющий камере вращаться вокруг цели.</div></div>
<div class=blockindent><a href="#2">Геометрические элементы</a>
<div class=list><a href="#2.1">ConvexBufferGeometry</a> - буферный вариант ConvexGeometry</div>
<div class=list><a href="#2.2">ConvexGeometry</a> - создание выпуклой оболочки по заданному массиву трехмерных точек</div>
<div class=list><a href="#2.3">DecalGeometry</a> -  создание сетки (mesh) с декалью</div></div>
<div class=blockindent><a href="#3">Загрузчики</a>
<div class=list><a href="#3.1">BabylonLoader</a> - загрузка в формате <tt>babylon</tt></div>
<div class=list><a href="#3.2">GLTFLoader</a> - загрузка в формате <tt>glTF 2.0</tt></div>
<div class=list><a href="#3.mmd">MMDLoader</a> - загрузка в формате <tt>mmd</tt></div>
<div class=list><a href="#3.3">MTLLoader</a> - загрузка в формате <tt>mtl</tt></div>
<div class=list><a href="#3.4">OBJLoader</a> - загрузка в формате <tt>obj</tt></div>
<div class=list><a href="#3.5">OBJLoader2</a> - загрузка в формате <tt>obj</tt></div>
<div class=list><a href="#3.6">LoaderSupport</a> - вспомогательные классы для загрузчиков файлов</div>
<div class=list><a href="#3.7">PCDLoader</a> - загрузка ресурсов в формате <tt>pcd</tt></div>
<div class=list><a href="#3.8">PDBLoader</a> - загрузка в формате <tt>pdb</tt></div>
<div class=list><a href="#3.9">SVGLoader</a> - загрузка в формате <tt>svg</tt></div>
<div class=list><a href="#3.10">TGALoader</a> - загрузка в формате <tt>tga</tt></div>
<div class=list><a href="#3.11">PRWMLoader</a> - загрузка в формате <tt>prwm</tt></div></div>
</td>
<td width=50% valign=top>
<div class=blockindent><a href="#4">Объекты</a>
<div class=list><a href="#4.1">LensFlare</a> -  имитация блика объектива камеры</div></div>
<div class=blockindent><a href="#5">Экспортеры</a>
<div class=list><a href="#5.1">GLTFExporter</a> - экспорт ресурсов в формате  glTF 2.0</div>
<div class=list><a href="#5.2">PLYExporter</a> - экспорт ресурсов в формате  PLY</div></div>
<div class=blockindent><a href="#6">Плагины</a>
<div class=list><a href="#6.1">LookupTable</a> - таблица поиска для карт цвета</div></div>
<div class=blockindent><a href="#7">QuickHull</a>
<div class=list><a href="#7.1">Face</a> - секция, ограниченная определенным числом полуребер</div>
<div class=list><a href="#7.2">HalfEdge</a> - основа для полурёберной структуры данных</div>
<div class=list><a href="#7.3">QuickHull</a> - алгоритм построения выпуклой оболочки на плоскости</div>
<div class=list><a href="#7.4">VertexNode</a> - вершина в качестве узла двусвязного списка</div>
<div class=list><a href="#7.5">VertexList</a> - двусвязный список вершин</div></div>
<div class=blockindent><a href="#8">Визуализаторы (рендереры)</a>
<div class=list><a href="#8.2">CSS2DRenderer</a> - упрощенная версия CSS3DRenderer</div>
<div class=list><a href="#8.3">CSS3DRenderer</a> - иерархические 3D-преобразования элементов DOM (свойство <tt>transform</tt> CSS3)</div>
<div class=list><a href="#8.4">SVGRenderer</a> - визуализация геометрических элементов в формате&nbsp;<tt>svg</tt></div></div>
<div class=blockindent><a href="#9">Подсобные функции (утилиты)</a>
<div class=list><a href="#9.1">BufferGeometryUtils</a> - вспомогательные функции для экземпляров BufferGeometry</div>
<div class=list><a href="#9.2">SceneUtils</a> - полезные функции для работы со сценой</div></div>
</td></tr></table>
</div>

<h2 id="0">Анимация</h2>

<h3 id="0.1">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; CCDIKSolver</h3>
Решающее устройство (<span class=lnk onmouseover="show('Решатель — (англ. solver)  программное обеспечение,<br>предназначенное для решения рассматриваемой<br>математической задачи. На вход решателю поступает<br>описание задачи в некоторой заданной форме, а на<br>выходе он выдает решение задачи.')" onmouseout="hide()">решатель</span>)
для <a href="https://ru.wikipedia.org/wiki/%D0%98%D0%BD%D0%B2%D0%B5%D1%80%D1%81%D0%BD%D0%B0%D1%8F_%D0%BA%D0%B8%D0%BD%D0%B5%D0%BC%D0%B0%D1%82%D0%B8%D0%BA%D0%B0" target="_blank" onmouseover="show('Инверсная кинематика (инверсная кинематическая анимация,<br>англ. inverse kinematics, IK) — процесс определения<br>параметров связанных гибких объектов (например,<br>кинематическая пара или кинематическая цепь) для достижения<br>необходимой позиции, ориентации и расположения этих<br>объектов. Инверсная кинематика является типом планирования<br>движения (англ.). Инверсная кинематика активно используется<br>в робототехнике, трёхмерной компьютерной анимации и в<br>разработке компьютерных игр. Она используется в основном<br>в тех ситуациях, когда необходимо точное позиционирование<br>гибких сочленений одного объекта относительно других<br>объектов окружающей среды.<br>Инверсная кинематика использует принцип, диаметрально<br>противоположный принципу прямой кинематики — перемещение<br>компонентов-потомков приводит к изменению положения<br>компонентов-предков, то есть алгоритм рассчитывает<br>положение и ориентацию компонентов-предков, исходя из<br>положения и ориентации компонентов-потомков.')" onmouseout="hide()">инверсной кинематики</a>
с <a href="https://sites.google.com/site/auraliusproject/ccd-algorithm" target="_blank" onmouseover="show('CCD - сокращ. англ. слов cyclic coordinate descent<br>- циклический покоординатный спуск')" onmouseout="hide()">алгоритмом CCD</a>.<br>
Статья <a href="https://en.wikipedia.org/wiki/Coordinate_descent" target="_blank">о покоординатном спуске</a> в англоязычной Википедии
и пара (<a href="http://school-sector.relarn.ru/dckt/projects/optim/pocspusc.htm" target="_blank">вот</a> и <a href="http://4exam.info/book_48_glava_26_4.1._Metod_%D1%81iklicheskogo_pokoordinatnogo_spuska.html" target="_blank">вот</a>) русскоязычных ссылок.<br>
CCDIKSolver решает задачу инверсной кинематики с помощью алгоритма CCD.
CCDIKSolver предназначен для работы с <a href="objects.htm#10" onmouseover="show('SkinnedMesh')" onmouseout="hide()">SkinnedMesh</a>, загруженной с помощью MMDLoader,
но также может использоваться для стандартной <a href="objects.htm#10" onmouseover="show('SkinnedMesh')" onmouseout="hide()">SkinnedMesh</a>.<br><br>

<h4>Пример</h4>
<pre>var ikSolver;<br>
// Load MMD resources and instantiate CCDIKSolver
// загрузка ресурсов MMD и создание экземпляра CCDIKSolver
new THREE.MMDLoader().load(
  'models/mmd/miku.pmd',
  function ( mesh ) {
    ikSolver = new CCDIKSolver( mesh, mesh.geometry.iks );
    scene.add( mesh );
  }
);<br>
function render() {
  animate(); // update bones (обновление костей)
  if ( ikSolver !== undefined ) ikSolver.update();
  renderer.render( scene, camera );
}</pre>
<h5>Другие примеры</h5>
<pre><a href="https://threejs.org/examples/#webgl_loader_mmd" target="_blank">webgl_loader_mmd</a>
<a href="https://threejs.org/examples/#webgl_loader_mmd_pose" target="_blank">webgl_loader_mmd_pose</a>
<a href="https://threejs.org/examples/#webgl_loader_mmd_audio" target="_blank">webgl_loader_mmd_audio</a></pre><br>

<h4>Конструктор</h4>
<pre>CCDIKSolver( <a href="objects.htm#10" onmouseover="show('SkinnedMesh.<br>mesh - сетка')" onmouseout="hide()">mesh</a>, <span onclick="showClick(type_array)"><a href="#" onclick="return false" onblur="hideClick()" onmouseover="show('iks - сокращ. англ. слов inverse kinematics<br>- (элементы) инверсной кинематики')" onmouseout="hide()">iks</a></span> )</pre>
<div class=list><tt>mesh</tt> — <a href="objects.htm#10" onmouseover="show('SkinnedMesh')" onmouseout="hide()">SkinnedMesh</a> для которой CCDIKSolver решает задачу инверсной кинематики.</div>
<div class=list><tt>iks</tt> — массив объектов, определяющих параметр инверсной кинематики (IK). <tt><span class="lnk" onmouseover="show('target - цель,- здесь обозначение целевой кости')" onmouseout="hide()">target</span></tt>,
<tt><span class="lnk" onmouseover="show('effector - эффектор, рабочий орган,- здесь это кость,<br>которую передвигают, чтобы целевая кость достигла цели')" onmouseout="hide()">effector</span></tt> и
<tt><span class="lnk" onmouseover="show('link-index - индекс костей-связок, которые связывают<br>родительскую и целевую кости в единую цепочку')" onmouseout="hide()">link-index</span></tt>
- это целочисленные индексы в <tt><span class="lnk" onmouseover="show('skeleton.bones - костях скелета')" onmouseout="hide()">.skeleton.bones</span></tt>.
Кости должны быть увязаны как "<tt>links[ n ]</tt>, <tt>links[ n - 1 ]</tt>, <tt>...</tt>, <tt>links[ 0 ]</tt>, <tt>effector</tt>", по порядку от родительского объекта к дочернему.<br>
&nbsp; &#9679; &nbsp; <tt><span onclick="showClick(type_int)"><a href="#" onclick="return false" onblur="hideClick()" onmouseover="show('target - цель')" onmouseout="hide()">target</a></span></tt> — целевая (target) кость.<br>
&nbsp; &#9679; &nbsp; <tt><span onclick="showClick(type_int)"><a href="#" onclick="return false" onblur="hideClick()" onmouseover="show('effector - эффектор, исполнительный элемент, рабочий орган')" onmouseout="hide()">effector</a></span></tt> — эффекторная кость.<br>
&nbsp; &#9679; &nbsp; <tt><span onclick="showClick(type_array)"><a href="#" onclick="return false" onblur="hideClick()" onmouseover="show('links - связки, соединения')" onmouseout="hide()">links</a></span></tt>
— массив объектов, определяющий кости-связки.<br>
&nbsp; &nbsp; &nbsp; &#9675; &nbsp; <tt><span onclick="showClick(type_int)"><a href="#" onclick="return false" onblur="hideClick()" onmouseover="show('index - индекс')" onmouseout="hide()">index</a></span></tt> — связывающая кость (кость-связка).<br>
&nbsp; &nbsp; &nbsp; &#9675; &nbsp; <tt><a href="math.htm#19" onmouseover="show('Vector3.<br>limitation - ограничение')" onmouseout="hide()">limitation</a></tt> — ось вращения. Значением по умолчанию является <tt>undefined</tt>, т.е. не определено. Дополнительный, необязательный параметр.<br>
&nbsp; &nbsp; &nbsp; &#9675; &nbsp; <tt><a href="math.htm#19" onmouseover="show('Vector3.<br>rotation min - минимум вращения')" onmouseout="hide()">rotationMin</a></tt> — ограничение вращения по минимуму. Значением по умолчанию является <tt>undefined</tt>, т.е. не определено. Дополнительный, необязательный параметр.<br>
&nbsp; &nbsp; &nbsp; &#9675; &nbsp; <tt><a href="math.htm#19" onmouseover="show('Vector3.<br>rotation max - максимум вращения')" onmouseout="hide()">rotationMax</a></tt> — ограничение вращения по максимуму. Значением по умолчанию является <tt>undefined</tt>, т.е. не определено. Дополнительный, необязательный параметр.<br>
&nbsp; &nbsp; &nbsp; &#9675; &nbsp; <tt><span onclick="showClick(type_bool)"><a href="#" onclick="return false" onblur="hideClick()" onmouseover="show('enabled - включено')" onmouseout="hide()">enabled</a></span></tt>
— значением по умолчанию является&nbsp;<tt>true</tt>. Дополнительный, необязательный параметр.<br>
&nbsp; &#9679; &nbsp; <tt><span onclick="showClick(type_int)"><a href="#" onclick="return false" onblur="hideClick()" onmouseover="show('iteration - итерация, повтор, перебор')" onmouseout="hide()">iteration</a></span></tt>
— количество расчетных итераций (шагов).Чем меньше, тем быстрее, но ниже точность. Значение по умолчанию равно&nbsp;<tt>1</tt>. Дополнительный, необязательный параметр.<br>
&nbsp; &#9679; &nbsp; <tt><span onclick="showClick(type_number)"><a href="#" onclick="return false" onblur="hideClick()" onmouseover="show('min angle - минимальный угол')" onmouseout="hide()">minAngle</a></span></tt>
— минимальный угол поворота за один шаг. Значением по умолчанию является <tt>undefined</tt>, т.е. значение неопределено. Дополнительный, необязательный параметр.<br>
&nbsp; &#9679; &nbsp; <tt><span onclick="showClick(type_number)"><a href="#" onclick="return false" onblur="hideClick()" onmouseover="show('max angle - максимальный угол')" onmouseout="hide()">maxAngle</a></span></tt>
— максимальный угол поворота за один шаг. Значением по умолчанию является <tt>undefined</tt>, т.е. значение неопределено. Дополнительный, необязательный параметр.</div>
Создает новый CCDIKSolver.<br><br>

<h4>Свойства</h4>
<div class=blockindent><br>
<pre id="0.1iks"><span onclick="showClick(type_array)"><a href="#" onclick="return false" onblur="hideClick()" onmouseover="show('iks - сокращ. англ. слов inverse kinematics<br>- (элементы) инверсной кинематики')" onmouseout="hide()">.iks</a></span></pre>
Массив параметров инверсной кинематики, переданный конструктору.<br><br>

<pre id="0.1mesh"><a href="objects.htm#10" onmouseover="show('SkinnedMesh.<br>mesh - сетка')" onmouseout="hide()">.mesh</a></pre>
<a href="objects.htm#10" onmouseover="show('SkinnedMesh')" onmouseout="hide()">SkinnedMesh</a>, переданный конструктору.</div><br>

<h4>Методы</h4>
<div class=blockindent><br>
<pre id="0.1createHelper"><span onclick="showClick('CCDIKHelper')"><a href="#" onclick="return false" onblur="hideClick()" onmouseover="show('create helper - создать вспомогательный элемент')" onmouseout="hide()">.createHelper( )</a></span></pre>
Метод возвращает <span class=lnk onmouseover="show('CCDIKHelper - сокращ. англ. слов cyclic coordinate descent<br>inverse kinematic helper - вспомогательный элемент инверсной<br>кинематики циклического покоординатного спуска')" onmouseout="hide()">CCDIKHelper</span>. Можно визуализировать кости инверсной кинематики, добавив на сцену вспомогательный элемент.<br><br>

<pre id="0.1update"><a href="#10.1" onmouseover="show('CCDIKSolver.<br>update - обновить')" onmouseout="hide()">.update</a>( )</pre>
Метод обновляет кватернион костей с помощью алгоритма CCD.</div><br>

<h4>Исходники</h4>
<div class=blockindent><a href="https://github.com/mrdoob/three.js/blob/master/examples/js/animation/CCDIKSolver.js" target="_blank">CCDIKSolver.js на github.com</a></div><br><br>


<h3 id="0.2">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; MMDAnimationHelper</h3>
Вспомогательный элемент (helper - помощник) анимации для <a href="http://www.geocities.jp/higuchuu4/index_e.htm" target="_blank">MMD</a> ресурсов. <a href="http://hatsune-miku.ru/faq-for-mikumikudance-page" target="_blank">Здесь</a> на русском языке.<br>
MMDAnimationHelper обрабатывает анимацию MMD-ресурсов, загруженных с помощью <a href="#3.mmd" onmouseover="show('MMDLoader')" onmouseout="hide()">MMDLoader</a>, со специальными свойствами MMD,
такими как <span class="lnk" onmouseover="show('сокращ. от англ. слов Inverse Kinematics - инверсная (обратная) кинематика')" onmouseout="hide()">IK</span>, Grant,
и <span class="lnk" onmouseover="show('Physics - физика, т.е. физические параметры')" onmouseout="hide()">Physics</span>.
Внутри вспомогательного элемента MMDAnimationHelper используются <a href="#0.1" onmouseover="show('CCDIKSolver')" onmouseout="hide()">CCDIKSolver</a> и <a href="#0.3" onmouseover="show('MMDPhysics')" onmouseout="hide()">MMDPhysics</a>.<br><br>

<h4>Пример</h4>
<pre>// Instantiate a helper (создаем вспомогательный элемент)
var helper = new THREE.MMDAnimationHelper();<br>
// Load MMD resources and add to helper
// Загрузка MMD ресурсов и добавление вспомогательного элемента
new THREE.MMDLoader().loadWithAnimation(
  'models/mmd/miku.pmd',
  'models/mmd/dance.vmd',
  function ( mmd ) {
    helper.add( mmd.mesh, {
      animation: mmd.animation,
      physics: true
    } );<br>
    scene.add( mmd.mesh );<br>
    new THREE.AudioLoader().load(
      'audios/mmd/song.mp3',
      function ( buffer ) {
      var listener = new THREE.AudioListener();
      var audio = new THREE.Audio( listener )
        .setBuffer( buffer );
      listener.position.z = 1;<br>
        scene.add( audio );
        scene.add( listener );
      }
    );
  }
);<br>
function render() {
  helper.update( clock.getDelta() );
  renderer.render( scene, camera );
}</pre>
<h5>Другие примеры</h5>
<pre><a href="https://threejs.org/examples/#webgl_loader_mmd" target="_blank">webgl_loader_mmd</a>
<a href="https://threejs.org/examples/#webgl_loader_mmd_pose" target="_blank">webgl_loader_mmd_pose</a>
<a href="https://threejs.org/examples/#webgl_loader_mmd_audio" target="_blank">webgl_loader_mmd_audio</a></pre><br>

<h4>Конструктор</h4>
<pre>MMDAnimationHelper( <span onclick="showClick(type_obj)"><a href="#" onclick="return false" onblur="hideClick()" onmouseover="show('params - сокращ. англ. слова parameters - параметры')" onmouseout="hide()">params</a></span> )</pre>
<div class=list><tt>params</tt> — дополнительный, необязательный аргумент.<br>
&nbsp; &#9679; &nbsp; <tt><span onclick="showClick(type_bool)"><a href="#" onclick="return false" onblur="hideClick()" onmouseover="show('sync')" onmouseout="hide()">sync</a></span></tt> - определяет, будет ли синхронизированы длительности анимации добавленных объектов. Значением по умолчанию является&nbsp;<tt>true</tt>.<br>
&nbsp; &#9679; &nbsp; <tt><span onclick="showClick(type_number)"><a href="#" onclick="return false" onblur="hideClick()" onmouseover="show('afterglow - послесвечение')" onmouseout="hide()">afterglow</a></span></tt> - Значение по умолчанию равно&nbsp;<tt>0.0</tt>.<br>
&nbsp; &#9679; &nbsp; <tt><span onclick="showClick(type_bool)"><a href="#" onclick="return false" onblur="hideClick()" onmouseover="show('reset physics on loop - сброс физики (т.е. физических параметров) в цикле')" onmouseout="hide()">resetPhysicsOnLoop</a></span></tt> - Значением по умолчанию является&nbsp;<tt>true</tt>.</div>
Создает новый MMDAnimationHelper.<br><br>

<h4>Свойства</h4>
<div class=blockindent><br>
<pre id="0.2audio"><a href="audio.htm#1" onmouseover="show('Audio.<br>audio - аудио, звук, звуковой')" onmouseout="hide()">.audio</a></pre>
К вспомогательному элементу добавляется объект <a href="audio.htm#1" onmouseover="show('Audio')" onmouseout="hide()">Audio</a>.<br><br>

<pre id="0.2camera"><a href="cameras.htm#1" onmouseover="show('Camera.<br>camera - камера')" onmouseout="hide()">.camera</a></pre>
К вспомогательному элементу добавляется объект <a href="cameras.htm#1" onmouseover="show('Camera')" onmouseout="hide()">Camera</a>.<br><br>

<pre id="0.2meshes"><span onclick="showClick(type_array)"><a href="#" onclick="return false" onblur="hideClick()" onmouseover="show('meshes - сетки')" onmouseout="hide()">.meshes</a></span></pre>
К вспомогательному элементу добавляется массив <a href="objects.htm#10" onmouseover="show('SkinnedMesh')" onmouseout="hide()">SkinnedMesh</a>.<br><br>

<pre id="0.2objects"><span onclick="showClick('WeakMap - карта со &quot;слабыми&quot; ссылками')"><a href="#" onclick="return false" onblur="hideClick()" onmouseover="show('objects - объекты')" onmouseout="hide()">.objects</a></span></pre>
Значением свойства является <a href="https://developer.mozilla.org/ru/docs/Web/JavaScript/Reference/Global_Objects/WeakMap" target="_blank" onmouseover="show('weak map - &quot;слабая&quot; карта, т.е. карта со &quot;слабыми&quot;<br>ссылками.<br>Объект WeakMap — коллекция пар ключ-значение.<br>В качестве ключей могут быть использованы только<br>объекты, а значения могут быть произвольных<br>типов.')" onmouseout="hide()">WeakMap</a>,
которая хранит элементы анимации, используемые в помощь объектам, добавленным к вспомогательному элементу.
Например, можно получить доступ к <a href="animation.htm#3" onmouseover="show('AnimationMixer')" onmouseout="hide()">AnimationMixer</a> для добавленной <a href="objects.htm#10" onmouseover="show('SkinnedMesh')" onmouseout="hide()">SkinnedMesh</a> при помощи "<tt>helper.objects.get( mesh ).mixer</tt>"<br><br>

<pre id="0.2onBeforePhysics"><span onclick="showClick(type_func)"><a href="#" onclick="return false" onblur="hideClick()" onmouseover="show('on before physics - на (событие) перед<br>(расчетом) физических (параметров)')" onmouseout="hide()">.onBeforePhysics</a></span></pre>
Дополнительная, необязательная функция обратного вызова, которая исполняется непосредственно перед расчетом физических параметров <a href="objects.htm#10" onmouseover="show('SkinnedMesh')" onmouseout="hide()">SkinnedMesh</a>.
Эта функция вызывается вместе с <a href="objects.htm#10" onmouseover="show('SkinnedMesh')" onmouseout="hide()">SkinnedMesh</a>.</div><br>

<h4>Методы</h4>
<div class=blockindent><br>
<pre id="0.2add"><a href="#0.2" onmouseover="show('MMDAnimationHelper.<br>add - добавить')" onmouseout="hide()">.add</a> ( <a href="core.htm#14" onmouseover="show('Object3D.<br>object - объект')" onmouseout="hide()">object</a>, <span onclick="showClick(type_obj)"><a href="#" onclick="return false" onblur="hideClick()" onmouseover="show('params - сокращ. англ. слова parameters - параметры')" onmouseout="hide()">params</a></span> )</pre>
<div class=list><tt>object</tt> — может быть <a href="objects.htm#10" onmouseover="show('SkinnedMesh')" onmouseout="hide()">SkinnedMesh</a>, <a href="cameras.htm#1" onmouseover="show('Camera')" onmouseout="hide()">Camera</a> или <a href="audio.htm#1" onmouseover="show('Audio')" onmouseout="hide()">Audio</a>.</div>
<div class=list><tt>params</tt> — дополнительный, необязательный аргумент.<br>
&nbsp; &#9679; &nbsp; <tt><a href="animation.htm#2" onmouseover="show('AnimationClip')" onmouseout="hide()">animation</a></tt> - <a href="animation.htm#2" onmouseover="show('AnimationClip')" onmouseout="hide()">AnimationClip</a>
или массив <a href="animation.htm#2" onmouseover="show('AnimationClip')" onmouseout="hide()">AnimationClip</a>'ов установленный в объект.
Только для <a href="objects.htm#10" onmouseover="show('SkinnedMesh')" onmouseout="hide()">SkinnedMesh</a> и <a href="cameras.htm#1" onmouseover="show('Camera')" onmouseout="hide()">Camera</a>.
Значением по умолчанию является <tt>undefined</tt>, т.е. значение не определено.<br>
&nbsp; &#9679; &nbsp; <tt><span onclick="showClick(type_bool)"><a href="#" onclick="return false" onblur="hideClick()" onmouseover="show('physics - физика, в данном случае - физические параметры')" onmouseout="hide()">physics</a></span></tt>
- только для <a href="objects.htm#10" onmouseover="show('SkinnedMesh')" onmouseout="hide()">SkinnedMesh</a>. Флаг, который включает физические параметры. Значением по умолчанию является <tt>true</tt>.<br>
&nbsp; &#9679; &nbsp; <tt><span onclick="showClick(type_int)"><a href="#" onclick="return false" onblur="hideClick()" onmouseover="show('warmup - разминка, прогрев')" onmouseout="hide()">warmup</a></span></tt>
- только для <a href="objects.htm#10" onmouseover="show('SkinnedMesh')" onmouseout="hide()">SkinnedMesh</a> и флаге <tt>physics</tt> установленному как&nbsp;<tt>true</tt>. Физический параметр. Значение по умолчанию равно&nbsp;<tt>60</tt>.<br>
&nbsp; &#9679; &nbsp; <tt><span onclick="showClick(type_number)"><a href="#" onclick="return false" onblur="hideClick()" onmouseover="show('unit step - единичный шаг')" onmouseout="hide()">unitStep</a></span></tt>
- только для <a href="objects.htm#10" onmouseover="show('SkinnedMesh')" onmouseout="hide()">SkinnedMesh</a> и флаге <tt>physics</tt> установленному как&nbsp;<tt>true</tt>. Физический параметр. Значение по умолчанию равно&nbsp;<tt>1/65</tt>.<br>
&nbsp; &#9679; &nbsp; <tt><span onclick="showClick(type_int)"><a href="#" onclick="return false" onblur="hideClick()" onmouseover="show('max step num - сокращ. англ. слов maximum<br>step number - максимальное число шагов')" onmouseout="hide()">maxStepNum</a></span></tt>
- только для <a href="objects.htm#10" onmouseover="show('SkinnedMesh')" onmouseout="hide()">SkinnedMesh</a> и флаге <tt>physics</tt> установленному как&nbsp;<tt>true</tt>. Физический параметр. Значение по умолчанию равно&nbsp;<tt>3</tt>.<br>
&nbsp; &#9679; &nbsp; <tt><a href="math.htm#19" onmouseover="show('Vector3.<br>gravity - гравитация, сила тяжести')" onmouseout="hide()">gravity</a></tt>
- только для <a href="objects.htm#10" onmouseover="show('SkinnedMesh')" onmouseout="hide()">SkinnedMesh</a> и флаге <tt>physics</tt> установленному как&nbsp;<tt>true</tt>. Физический параметр. Значением по умолчанию является&nbsp;<tt>( 0, - 9.8 * 10, 0 )</tt>.<br>
&nbsp; &#9679; &nbsp; <tt><span onclick="showClick(type_number)"><a href="#" onclick="return false" onblur="hideClick()" onmouseover="show('delay time - время задержки')" onmouseout="hide()">delayTime</a></span></tt>
- только для <a href="audio.htm#1" onmouseover="show('Audio')" onmouseout="hide()">Audio</a>. Значение по умолчанию равно&nbsp;<tt>0.0</tt>.</div>
Метод добавляет к вспомогательному элементу <a href="objects.htm#10" onmouseover="show('SkinnedMesh')" onmouseout="hide()">SkinnedMesh</a>, <a href="cameras.htm#1" onmouseover="show('Camera')" onmouseout="hide()">Camera</a>,
или <a href="audio.htm#1" onmouseover="show('Audio')" onmouseout="hide()">Audio</a> и устанавливает анимацию.
Длительность анимации добавленных объектов синхронизируется. Если объекты камера и/или аудио уже были добавлены, они будут заменены на новые.<br><br>

<pre id="0.2enable"><a href="#0.2" onmouseover="show('MMDAnimationHelper.<br>enable - включить, разрешить')" onmouseout="hide()">.enable</a>( <span onclick="showClick(type_string)"><a href="#" onclick="return false" onblur="hideClick()" onmouseover="show('key - ключ')" onmouseout="hide()">key</a></span>, <span onclick="showClick(type_bool)"><a href="#" onclick="return false" onblur="hideClick()" onmouseover="show('enabled - включен, разрешен')" onmouseout="hide()">enabled</a></span> )</pre>
<div class=list><tt>key</tt> — разрешены строковые значения '<tt><span class="lnk" onmouseover="show('animation - анимация')" onmouseout="hide()">animation</span></tt>',
'<tt><span class="lnk" onmouseover="show('ik - сокращ. от англ. слов inverse kinematics - инверсная (обратная) кинематика')" onmouseout="hide()">ik</span></tt>',
'<tt><span class="lnk" onmouseover="show('grant')" onmouseout="hide()">grant</span></tt>',
'<tt><span class="lnk" onmouseover="show('physics - физика, в данном случае - физические параметры')" onmouseout="hide()">physics</span></tt>',
и '<tt><span class="lnk" onmouseover="show('camera animation - анимация камеры')" onmouseout="hide()">cameraAnimation</span></tt>'.</div>
<div class=list><tt>enabled</tt> — установка <tt>true</tt> означает включение, <tt>false</tt> - отключение.</div>
Метод включает/отключает функцию анимации.<br><br>

<pre id="0.2pose"><a href="#0.2" onmouseover="show('MMDAnimationHelper.<br>pose - поза')" onmouseout="hide()">.pose</a>( <a href="objects.htm#10" onmouseover="show('SkinnedMesh.<br>mesh - сетка')" onmouseout="hide()">mesh</a>, <span onclick="showClick(type_obj)"><a href="#" onclick="return false" onblur="hideClick()" onmouseover="show('vpd - сокращ. от англ. слов vocaloid pose data file - файл<br>данных поз для Vocaloid (использовался в рекламе<br>звукосинтезатора Vocaloid от фирмы Yamaha.)<br>Бинарный файл 3D моделей, используемых<br>MikuMikuDance (MMD), синхронизирует партии танца и ритма;<br>сохраняет позиции костей модели персонажа, задающие его<br>позу; может использоваться в последовательности поз,<br>составляющих анимацию танца (VMD файл).')" onmouseout="hide()">vpd</a></span>, <span onclick="showClick(type_obj)"><a href="#" onclick="return false" onblur="hideClick()" onmouseover="show('params - сокращ. англ. слова parameters - параметры')" onmouseout="hide()">params</a></span> )</pre>
<div class=list><tt>mesh</tt> — <a href="objects.htm#10" onmouseover="show('SkinnedMesh')" onmouseout="hide()">SkinnedMesh</a>, которая изменяет позу. Её не нужно добавлять к вспомогательному элементу.</div>
<div class=list><tt>vpd</tt> — содержимое VPD, полученное с помощью метода <tt><a href="#3.mmd" onmouseover="show('MMDLoader')" onmouseout="hide()">MMDLoader.loadVPD</a></tt>.</div>
<div class=list><tt>params</tt> — дополнительный, необязательный аргумент.<br>
&nbsp; &#9679; &nbsp; <tt><span onclick="showClick(type_bool)"><a href="#" onclick="return false" onblur="hideClick()" onmouseover="show('reset pose - сбросить позу')" onmouseout="hide()">resetPose</a></span></tt> - значением по умолчанию является&nbsp;<tt>true</tt>.<br>
&nbsp; &#9679; &nbsp; <tt><span onclick="showClick(type_bool)"><a href="#" onclick="return false" onblur="hideClick()" onmouseover="show('ik - сокращ. от англ. слов inverse kinematics - инверсная (обратная) кинематика')" onmouseout="hide()">ik</a></span></tt> - значением по умолчанию является&nbsp;<tt>true</tt>.<br>
&nbsp; &#9679; &nbsp; <tt><span onclick="showClick(type_bool)"><a href="#" onclick="return false" onblur="hideClick()" onmouseover="show('grant - ')" onmouseout="hide()">grant</a></span></tt> - значением по умолчанию является&nbsp;<tt>true</tt>.</div>
Метод изменяет позу <a href="objects.htm#10" onmouseover="show('SkinnedMesh')" onmouseout="hide()">SkinnedMesh</a> так, как указано в содержимом VPD.<br><br>

<pre id="0.2remove"><a href="#0.2" onmouseover="show('MMDAnimationHelper.<br>remove - удалить')" onmouseout="hide()">.remove</a>( object : Object3D )</pre>
<div class=list><tt>object</tt> — <a href="objects.htm#10" onmouseover="show('SkinnedMesh')" onmouseout="hide()">SkinnedMesh</a>, <a href="cameras.htm#1" onmouseover="show('Camera')" onmouseout="hide()">Camera</a>,
или <a href="audio.htm#1" onmouseover="show('Audio')" onmouseout="hide()">Audio</a></div>
Метод удаляет из вспомогательного элемента <a href="objects.htm#10" onmouseover="show('SkinnedMesh')" onmouseout="hide()">SkinnedMesh</a>, <a href="cameras.htm#1" onmouseover="show('Camera')" onmouseout="hide()">Camera</a>,
или <a href="audio.htm#1" onmouseover="show('Audio')" onmouseout="hide()">Audio</a>.<br><br>

<pre id="0.2update"><a href="#0.2" onmouseover="show('MMDAnimationHelper.<br>update - обновить')" onmouseout="hide()">.update</a>( <span onclick="showClick(type_number)"><a href="#" onclick="return false" onblur="hideClick()" onmouseover="show('delta - ')" onmouseout="hide()">delta</a></span> )</pre>
<div class=list><tt>delta</tt> — число секунд.</div>
Передвигает вперед время микшера и обновляет анимации объектов, добавленных к вспомогательному элементу.</div><br>

<h4>Исходники</h4>
<div class=blockindent><a href="https://github.com/mrdoob/three.js/blob/master/examples/js/animation/MMDAnimationHelper.js" target="_blank">MMDAnimationHelper.js на github.com</a></div><br><br>


<h3 id="0.3">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; MMDPhysics</h3>
Обработчик физических параметров для ресурсов <em><a href="http://www.geocities.jp/higuchuu4/index_e.htm" target="_blank">MMD</a></em>.<br>
MMDPhysics рассчитывает физические параметры для моделей, загруженных при помощи <a href="#3.mmd" onmouseover="show('MMDLoader')" onmouseout="hide()">MMDLoader</a> с <a href="https://github.com/kripken/ammo.js/" target="_blank">ammo.js</a> (физический движок JavaScript на основе <a href="https://pybullet.org/wordpress/" target="_blank" onmouseover="show('Bullet Physics - профессиональное обнаружение столкновений<br>с открытым исходным кодом, библиотека динамики жестких<br>и гибких тел, написанная на портативном C++. Библиотека<br>предназначена в основном для использования в играх,<br>визуальных эффектах и роботизированном моделировании.')" onmouseout="hide()">Bullet</a>).<br><br>

<h4>Пример</h4>
<pre>var physics;<br>
// Load MMD resources and instantiate MMDPhysics
// загрузка MMD ресурсов и создание экземпляра MMDPhysics
new THREE.MMDLoader().load(
  'models/mmd/miku.pmd',
  function ( mesh ) {
    physics = new THREE.MMDPhysics( mesh )
    scene.add( mesh );
  }
);<br>
function render() {
  var delta = clock.getDelta();
  animate( delta );  // update bones
  if ( physics !== undefined ) physics.update( delta );
  renderer.render( scene, camera );
}</pre>
<h5>Другие примеры</h5>
<pre><a href="https://threejs.org/examples/#webgl_loader_mmd" target="_blank">webgl_loader_mmd</a>
<a href="https://threejs.org/examples/#webgl_loader_mmd_audio" target="_blank">webgl_loader_mmd_audio</a></pre><br>

<h4>Конструктор</h4>
<pre>MMDPhysics( <a href="objects.htm#10" onmouseover="show('SkinnedMesh.<br>mesh - сетка')" onmouseout="hide()">mesh</a>, <span onclick="showClick(type_array)"><a href="#" onclick="return false" onblur="hideClick()" onmouseover="show('rigid body param(eter)s - параметры жесткого тела')" onmouseout="hide()">rigidBodyParams</a></span>, <span onclick="showClick(type_array)"><a href="#" onclick="return false" onblur="hideClick()" onmouseover="show('constraint param(eter)s - параметры ограничения')" onmouseout="hide()">constraintParams</a></span>, <span onclick="showClick(type_obj)"><a href="#" onclick="return false" onblur="hideClick()" onmouseover="show('params - сокращ. англ. слова parameters - параметры')" onmouseout="hide()">params</a></span> )</pre>
<div class=list><tt>mesh</tt> — <a href="objects.htm#10" onmouseover="show('SkinnedMesh')" onmouseout="hide()">SkinnedMesh</a>, для которой MMDPhysics рассчитывает физические параметры.</div>
<div class=list><tt>rigidBodyParams</tt> — массив объектов, определяющий параметры жесткого тела.</div>
<div class=list><tt>constraintParams</tt> — массив объектов, определяющий параметры ограничений. Дополнительный, необязательный аргумент.</div>
<div class=list><tt>params</tt> — дополнительный, необязательный аргумент.<br>
&nbsp; &#9679; &nbsp; <tt><span onclick="showClick(type_number)"><a href="#" onclick="return false" onblur="hideClick()" onmouseover="show('unit step - единичный шаг')" onmouseout="hide()">unitStep</a></span></tt> - значение по умолчанию равно&nbsp;<tt>1/65</tt>.<br>
&nbsp; &#9679; &nbsp; <tt><span onclick="showClick(type_int)"><a href="#" onclick="return false" onblur="hideClick()" onmouseover="show('max step num - сокращ. англ. слов maximum<br>step number - максимальное число шагов')" onmouseout="hide()">maxStepNum</a></span></tt> - значение по умолчанию равно&nbsp;<tt>3</tt>.<br>
&nbsp; &#9679; &nbsp; <tt><a href="math.htm#19" onmouseover="show('Vector3.<br>gravity - гравитация, сила тяжести')" onmouseout="hide()">gravity</a></tt> - значением по умолчанию является&nbsp;<tt>( 0, - 9.8 * 10, 0 )</tt></div>
Создает новый MMDPhysics.<br><br>

<h4>Свойства</h4>
<div class=blockindent><br>
<pre id="0.3mesh"><span onclick="showClick(type_array)"><a href="#" onclick="return false" onblur="hideClick()" onmouseover="show('mesh - сетка')" onmouseout="hide()">.mesh</a></span></pre>
<a href="objects.htm#10" onmouseover="show('SkinnedMesh')" onmouseout="hide()">SkinnedMesh</a>, переданная в конструкторе.</div><br>

<h4>Методы</h4>
<div class=blockindent><br>
<pre id="0.3createHelper"><a href="#0.3" onmouseover="show('MMDPhysics.<br>create helper - создать вспомогательный элемент')" onmouseout="hide()">.createHelper</a>( )</pre>
Возвращает MMDPhysicsHelper. Можно показать жесткие тела, добавлением вспомогательного элемента на сцену.<br><br>

<pre id="0.3reset"><a href="#0.1" onmouseover="show('CCDIKSolver.<br>reset - сбросить')" onmouseout="hide()">.reset</a>( )</pre>
Метод сбрасывает изменение жестких тел в текущей кости.<br><br>

<pre id="0.3setGravity"><a href="#0.1" onmouseover="show('CCDIKSolver.<br>set gravity - установить гравитацию')" onmouseout="hide()">.setGravity</a>( <a href="math.htm#19" onmouseover="show('Vector3.<br>gravity - гравитация, сила тяжести')" onmouseout="hide()">gravity</a> )</pre>
<div class=list><tt>gravity</tt> — направление и уровень гравитации.</div>
Метод устанавливает гравитацию (силу тяжести).<br><br>

<pre id="0.3update"><a href="#0.1" onmouseover="show('CCDIKSolver.<br>update - обновить')" onmouseout="hide()">.update</a>( <span onclick="showClick(type_number)"><a href="#" onclick="return false" onblur="hideClick()" onmouseover="show('delta - ')" onmouseout="hide()">delta</a></span> )</pre>
<div class=list><tt>delta</tt> — время в секундах.</div>
Метод производит предварительный расчет физических параметров и обновление костей.<br><br>

<pre id="0.3warmup"><a href="#0.1" onmouseover="show('CCDIKSolver.<br>warmup - разогрев, разминка')" onmouseout="hide()">.warmup</a>( <span onclick="showClick(type_int)"><a href="#" onclick="return false" onblur="hideClick()" onmouseover="show('cycles - циклы')" onmouseout="hide()">cycles</a></span> )</pre>
<div class=list><tt>cycles</tt> — число циклов.</div>
Warm up Rigid bodies. Calculates cycles steps.</div><br>

<h4>Исходники</h4>
<div class=blockindent><a href="https://github.com/mrdoob/three.js/blob/master/examples/js/animation/MMDPhysics.js" target="_blank">MMDPhysics.js на github.com</a></div><br><br>


<h2 id="1">Контролы</h2>
<h3 id="1.1">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; OrbitControls</h3>
Орбитальный контрол (элемент управления) позволяет камере вращаться вокруг цели.<br>
Для его использования, как и всех файлов в директории <tt>/examples</tt>, нужно будет отдельно включить этот файл в HTML-код.<br><br>
<h4>Пример</h4>
<pre>var renderer = new THREE.WebGLRenderer();
renderer.setSize( window.innerWidth, window.innerHeight );
document.body.appendChild( renderer.domElement );<br>
var scene = new THREE.Scene();<br>
var  camera = new THREE.PerspectiveCamera( 45, window.innerWidth / window.innerHeight, 1, 10000 );<br>
var controls = new THREE.OrbitControls( camera );<br>
// controls.update() must be called after any manual changes to the camera's transform
// после любых ручных изменений состояния камеры должен быть вызван controls.update()
camera.position.set( 0, 20, 100 );
controls.update();<br>
function animate() {<br>
  requestAnimationFrame( animate );<br>
  // required if controls.enableDamping or controls.autoRotate are set to true
  // если controls.enableDamping или controls.autoRotate установлен как true, необходимо
  controls.update();<br>
  renderer.render( scene, camera );<br>
}</pre>
<h5>Другие примеры:</h5>
<pre><a href="https://threejs.org/examples/#misc_controls_orbit" target="_blank">misc / controls / orbit</a></pre><br>

<h4>Конструктор</h4>
<pre>OrbitControls( <a href="cameras.htm#1" onmouseover="show('Camera.<br>object - объект')" onmouseout="hide()">object</a>, <span class="lnk" onmouseover="show('domElement - элемент DOM (от англ. Document Object Model — «объектная модель документа»)')" onmouseout="hide()">domElement</span> )</pre>
<div class=list><tt><a href="cameras.htm#1" onmouseover="show('Camera.<br>object - объект')" onmouseout="hide()">object</a></tt> - камера, которой нужно управлять (обязательный аргумент).</div>

<div class=list><tt><span class="lnk" onmouseover="show('domElement - элемент DOM (от англ. Document Object Model — «объектная модель документа»)')" onmouseout="hide()">domElement</span></tt> - элемент HTML, используемый для прослушивателей (приемников) событий (дополнительный, необязательный аргумент).
По умолчанию это весь документ целиком, однако, если нужно чтобы элементы управления (контролы) работали от какого-либо определенного элемента (например, <tt>&lt;canvas&gt;</tt> - холст), укажите его в этом аргументе.<br>
Статья о <a href="https://ru.wikipedia.org/wiki/Document_Object_Model" target="_blank">DOM</a> в Википедии.</div><br>


<h4>Свойства</h4>
<div class=blockindent><br>
<pre id="1autoRotate"><span onclick="showClick(type_bool)"><a href="#" onclick="return false" onblur="hideClick()" onmouseover="show('auto rotate - автоматическое вращение')" onmouseout="hide()">.autoRotate</a></span></pre>
Для автоматического вращения вокруг цели установите значение данного свойства как <tt>true</tt>.<br>
Обратите внимание, если это свойство включено, в цикле анимации нужно вызывать метод <tt><a href="#1update" onmouseover="show('OrbitControls.update')" onmouseout="hide()">update</a></tt>.<br><br>

<pre id="1autoRotateSpeed"><span onclick="showClick(type_float)"><a href="#" onclick="return false" onblur="hideClick()" onmouseover="show('auto rotate speed - скорость автоматического вращения')" onmouseout="hide()">.autoRotateSpeed</a></span></pre>
Свойство определяет скорость вращения камеры вокруг цели, если свойство <tt><a href="#1autoRotate" onmouseover="show('OrbitControls.autoRotate')" onmouseout="hide()">autoRotate</a></tt> установлено как <tt>true</tt>.
Значение по умолчанию равно <tt>2.0</tt>, что равно 30 секундам на один оборот при 60 кадрах в секунду.<br>
Обратите внимание, если свойство <tt><a href="#1autoRotate" onmouseover="show('OrbitControls.autoRotate')" onmouseout="hide()">autoRotate</a></tt> включено, в цикле анимации нужно вызывать метод <tt><a href="#1update" onmouseover="show('OrbitControls.update')" onmouseout="hide()">update</a></tt>.<br><br>

<pre id="1dampingFactor"><span onclick="showClick(type_float)"><a href="#" onclick="return false" onblur="hideClick()" onmouseover="show('damping factor - коэффициент демпфирования (затухания)')" onmouseout="hide()">.dampingFactor</a></span></pre>
Затухающая инерция используется, если для параметра <tt><a href="#1enableDamping" onmouseover="show('OrbitControls.enableDamping')" onmouseout="hide()">enableDamping</a></tt> установлено как <tt>true</tt>.<br>
Обратите внимание, для работы этого свойства в цикле анимации нужно вызывать метод <tt><a href="#1update" onmouseover="show('OrbitControls.update')" onmouseout="hide()">update</a></tt>.<br><br>

<pre id="1domElement"><span class="lnk" onmouseover="show('domElement - HTML элемент DOM (от англ. Document Object Model — «объектная модель документа»)')" onmouseout="hide()">.domElement</span></pre>
DOM элемент HTML, используется для прослушивания (приема) событий от мышки / касаний. Он должен быть передан в конструкторе; его изменение здесь не создаст новых приемников событий.<br>
Значением по умолчанию является весь документ.<br>
Статья о <a href="https://ru.wikipedia.org/wiki/Document_Object_Model" target="_blank">DOM</a> в Википедии.<br><br>

<pre id="1enabled"><span onclick="showClick(type_bool)"><a href="#" onclick="return false" onblur="hideClick()" onmouseover="show('enabled - включить (управление)')" onmouseout="hide()">.enabled</a></span></pre>
Свойство определяет, будет или нет включено управление.<br><br>

<pre id="1enableDamping"><span onclick="showClick(type_bool)"><a href="#" onclick="return false" onblur="hideClick()" onmouseover="show('enable damping - включить затухание')" onmouseout="hide()">.enableDamping</a></span></pre>
Установите значение этого свойства как <tt>true</tt> для включения затухания (инерции), которое может быть использовано чтобы придать ощущение веса элементам управления. Значением по умолчанию является <tt>false</tt>.<br>
Обратите внимание, если данное свойство включено (т.е. <tt>true</tt>), в каждом цикле анимации требуется вызывать <tt><a href="#1update" onmouseover="show('OrbitControls.update')" onmouseout="hide()">update( )</a></tt>.<br><br>

<pre id="1enableKeys"><span onclick="showClick(type_bool)"><a href="#" onclick="return false" onblur="hideClick()" onmouseover="show('enable keys - включить клавиши<br>(в смысле - отслеживать нажатия<br>клавиш клавиатуры)')" onmouseout="hide()">.enableKeys</a></span></pre>
Включает или отключает использование управления от клавиатуры.<br><br>

<pre id="1enablePan"><span onclick="showClick(type_bool)"><a href="#" onclick="return false" onblur="hideClick()" onmouseover="show('enable pan - включить панорамирование')" onmouseout="hide()">.enablePan</a></span></pre>
Включает или отключает панорамирование камерой. Значением по умолчанию является <tt>true</tt>.<br><br>

<pre id="1enableRotate"><span onclick="showClick(type_bool)"><a href="#" onclick="return false" onblur="hideClick()" onmouseover="show('enable rotate - включить поворот')" onmouseout="hide()">.enableRotate</a></span></pre>
Включает или отключает горизонтальный и вертикальный поворот камеры. Значением по умолчанию является <tt>true</tt>.<br>
Обратите внимание, что можно отключать одну ось установкой минимального и максимального значения <a href="#1minPolarAngle" onmouseover="show('OrbitControls.minPolarAngle')" onmouseout="hide()">полярного</a>
или <a href="#1minAzimuthAngle" onmouseover="show('OrbitControls.minAzimuthAngle')" onmouseout="hide()">азимутального</a> углов на одно и тоже значение,
что приведет к тому, что вертикальное или горизонтальное вращение будет зафиксировано в этом значении.<br><br>

<pre id="1enableZoom"><span onclick="showClick(type_bool)"><a href="#" onclick="return false" onblur="hideClick()" onmouseover="show('enable zoom - включить масштабирование')" onmouseout="hide()">.enableZoom</a></span></pre>
Включает или отключает масштабирование (наезд - отъезд) камеры.<br><br>

<pre id="1keyPanSpeed"><span onclick="showClick(type_float)"><a href="#" onclick="return false" onblur="hideClick()" onmouseover="show('key pan speed - скорость панорамирования (от) клавиши')" onmouseout="hide()">.keyPanSpeed</a></span></pre>
Свойство определяет скорость панорамирования камеры при использовании клавиатуры для её управления. Значение по умолчанию равно <tt>7.0</tt> пикселов на одно нажатие клавиши.<br><br>

<pre id="1keys"><span onclick="showClick(type_obj)"><a href="#" onclick="return false" onblur="hideClick()" onmouseover="show('keys - ключи, клавиши, кнопки')" onmouseout="hide()">.keys</a></span></pre>
Этот объект содержит ссылки на коды клавиш, используемых для управления панорамированием камеры.
<pre>controls.keys = {
  LEFT: 37,  // left arrow (стрелка влево)
  UP: 38,    // up arrow (стрелка вверх)
  RIGHT: 39, // right arrow (стрелка вправо)
  BOTTOM: 40 // down arrow (стрелка вниз)
}</pre>
Вот <a href="https://developer.mozilla.org/en-US/docs/Web/API/KeyboardEvent/keyCode" target="_blank">полный список кодов нажатий клавиш клавиатуры</a>.<br><br>

<pre id="1maxAzimuthAngle"><span onclick="showClick(type_float)"><a href="#" onclick="return false" onblur="hideClick()" onmouseover="show('max azimuth angle - максимальный азимутальный угол')" onmouseout="hide()">.maxAzimuthAngle</a></span></pre>
Свойство определяет, насколько велика может быть орбита по горизонтали, верхний предел. Возможный диапазон от <tt>-Math.PI</tt> до <tt>Math.PI</tt> (или <tt>Infinity</tt> при отсутствии ограничений). Значением по умолчанию является <tt>Infinity</tt> (бесконечность).<br><br>

<pre id="1maxDistance"><span onclick="showClick(type_float)"><a href="#" onclick="return false" onblur="hideClick()" onmouseover="show('max distance - максимальное расстояние')" onmouseout="hide()">.maxDistance</a></span></pre>
Свойство определяет, насколько далеко может отъехать камера (только для <a href="cameras.htm#4" onmouseover="show('PerspectiveCamera')" onmouseout="hide()">камеры с перспективной проекцией</a>).
Значением по умолчанию является <tt>Infinity</tt> (бесконечность).<br><br>

<pre id="1maxPolarAngle"><span onclick="showClick(type_float)"><a href="#" onclick="return false" onblur="hideClick()" onmouseover="show('max polar angle - максимальный полярный угол')" onmouseout="hide()">.maxPolarAngle</a></span></pre>
Свойство определяет, насколько велика может быть орбита по вертикали, верхний предел. Возможный диапазон от&nbsp;<tt>0</tt> до&nbsp;<tt>Math.PI</tt>, в радианах.
Значением по умолчанию является <tt>Math.PI</tt>.<br><br>

<pre id="1maxZoom"><span onclick="showClick(type_float)"><a href="#" onclick="return false" onblur="hideClick()" onmouseover="show('max zoom - максимальное увеличение')" onmouseout="hide()">.maxZoom</a></span></pre>
Свойство определяет, насколько можно уменьшить масштаб (только для <a href="cameras.htm#3" onmouseover="show('OrthographicCamera')" onmouseout="hide()">камеры с ортографической проекцией</a>).
Значением по умолчанию является&nbsp;<tt>Infinity</tt> (бесконечность).<br><br>

<pre id="1minAzimuthAngle"><span onclick="showClick(type_float)"><a href="#" onclick="return false" onblur="hideClick()" onmouseover="show('min azimuth angle - минимальный азимутальный угол')" onmouseout="hide()">.minAzimuthAngle</a></span></pre>
Свойство определяет нижний предел ограничения орбиты по горизонтали (т.е. минимальный угол поворота по горизонтали).
Диапазон значений от&nbsp;<tt>-Math.PI</tt> до&nbsp;<tt>Math.PI</tt> (или <tt>-Infinity</tt> при отсутствии ограничений). Значением по умолчанию является&nbsp;<tt>-Infinity</tt> (минус бесконечность).<br><br>

<pre id="1minDistance"><span onclick="showClick(type_float)"><a href="#" onclick="return false" onblur="hideClick()" onmouseover="show('min distance - минимальное расстояние')" onmouseout="hide()">.minDistance</a></span></pre>
Свойство определяет, как близко может наехать камера (только для <a href="cameras.htm#4" onmouseover="show('PerspectiveCamera')" onmouseout="hide()">камеры с перспективной проекцией</a>). Значение по умолчанию равно&nbsp;<tt>0</tt>.<br><br>

<pre id="1minPolarAngle"><span onclick="showClick(type_float)"><a href="#" onclick="return false" onblur="hideClick()" onmouseover="show('min polar angle - минимальный полярный угол')" onmouseout="hide()">.minPolarAngle</a></span></pre>
Свойство определяет нижний предел ограничения орбиты по вертикали (т.е. минимальный угол поворота по вертикали).
Диапазон значений в радианах от&nbsp;<tt>0</tt> до&nbsp;<tt>Math.PI</tt>. Значение по умолчанию равно&nbsp;<tt>0</tt>.<br><br>

<pre id="1minZoom"><span onclick="showClick(type_float)"><a href="#" onclick="return false" onblur="hideClick()" onmouseover="show('min zoom - минимальное увеличение')" onmouseout="hide()">.minZoom</a></span></pre>
Свойство определяет, насколько можно увеличить масштаб (только для <a href="cameras.htm#3" onmouseover="show('OrthographicCamera')" onmouseout="hide()">камеры с ортографической проекцией</a>).
Значение по умолчанию равно&nbsp;<tt>0</tt>.<br><br>

<pre id="1mouseButtons"><span onclick="showClick(type_obj)"><a href="#" onclick="return false" onblur="hideClick()" onmouseover="show('mouse buttons - кнопки мышки')" onmouseout="hide()">.mouseButtons</a></span></pre>
Этот объект содержит ссылки на кнопки мышки, используемые для управления камерой.
<pre>controls.mouseButtons = {
  ORBIT: THREE.MOUSE.LEFT,
  ZOOM: THREE.MOUSE.MIDDLE,
  PAN: THREE.MOUSE.RIGHT
}</pre><br>

<pre id="1object"><a href="cameras.htm#1" onmouseover="show('Camera.<br>object - объект')" onmouseout="hide()">.object</a></pre>
Камера, которой управляет контрол.<br><br>

<pre id="1panSpeed"><span onclick="showClick(type_float)"><a href="#" onclick="return false" onblur="hideClick()" onmouseover="show('pan speed - скорость панорамирования')" onmouseout="hide()">.panSpeed</a></span></pre>
Скорость панорамирования. Значение по умолчанию равно&nbsp;<tt>1</tt>.<br><br>

<pre id="1position0"><a href="math.htm#19" onmouseover="show('Vector3.<br>position 0 - позиция 0')" onmouseout="hide()">.position0</a></pre>
Данное свойство используется внутри контрола методами <tt><a href="#1saveState" onmouseover="show('OrbitControls.saveState')" onmouseout="hide()">saveState</a></tt>
и <tt><a href="#1reset" onmouseover="show('OrbitControls.reset')" onmouseout="hide()">reset</a></tt>.<br><br>

<pre id="1rotateSpeed"><span onclick="showClick(type_float)"><a href="#" onclick="return false" onblur="hideClick()" onmouseover="show('rotate speed - скорость поворота')" onmouseout="hide()">.rotateSpeed</a></span></pre>
Скорость поворота. Значение по умолчанию равно&nbsp;<tt>1</tt>.<br><br>

<pre id="1screenSpacePanning"><span onclick="showClick(type_bool)"><a href="#" onclick="return false" onblur="hideClick()" onmouseover="show('screen space panning - панорамирование пространства экрана')" onmouseout="hide()">.screenSpacePanning</a></span></pre>
Свойство определяет, как позиция камеры изменяется при панорамировании.
Если установлено значение&nbsp;<tt>true</tt>, панорамирование происходит в пространстве экрана. В противном случае, камера поворачивается в плоскости ортогональной (перпендикулярной) к направлению камеры вверх.
Значением по умолчанию является&nbsp;<tt>false</tt>.<br><br>

<pre id="1target0"><a href="math.htm#19" onmouseover="show('Vector3.<br>target 0 - цель 0')" onmouseout="hide()">.target0</a></pre>
Данное свойство используется внутри контрола методами <tt><a href="#1saveState" onmouseover="show('OrbitControls.saveState')" onmouseout="hide()">saveState</a></tt>
и <tt><a href="#1reset" onmouseover="show('OrbitControls.reset')" onmouseout="hide()">reset</a></tt>.<br><br>

<pre id="1target"><a href="math.htm#19" onmouseover="show('Vector3.<br>target - цель')" onmouseout="hide()">.target</a></pre>
Точка фокуса элемента управления, вокруг которой вращается <a href="#1object" onmouseover="show('OrbitControls.object')" onmouseout="hide()">камера</a>.
Для смены фокуса элемента управления её можно в любой момент обновить вручную.<br><br>

<pre id="1zoom0"><span onclick="showClick(type_float)"><a href="#" onclick="return false" onblur="hideClick()" onmouseover="show('zoom 0 - масштабирование 0')" onmouseout="hide()">.zoom0</a></span></pre>
Данное свойство используется внутри контрола методами <tt><a href="#1saveState" onmouseover="show('OrbitControls.saveState')" onmouseout="hide()">saveState</a></tt>
и <tt><a href="#1reset" onmouseover="show('OrbitControls.reset')" onmouseout="hide()">reset</a></tt>.<br><br>

<pre id="1zoomSpeed"><span onclick="showClick(type_float)"><a href="#" onclick="return false" onblur="hideClick()" onmouseover="show('zoom speed - скорость масштабирования')" onmouseout="hide()">.zoomSpeed</a></span></pre>
Скорость масштабирования / наезда - отъезда камеры. Значение по умолчанию равно&nbsp;<tt>1</tt>.</div><br>

<h4>Методы</h4>
<div class=blockindent><br>
<pre id="1dispose"><span onclick="showClick(type_null)"><a href="#" onclick="return false" onblur="hideClick()" onmouseover="show('dispose - удалить, отбросить')" onmouseout="hide()">.dispose</a></span>( )</pre>
Метод удаляет все прослушиватели (приемники) событий.<br><br>

<pre id="1getAzimuthalAngle"><span onclick="showClick(type_rad)"><a href="#" onclick="return false" onblur="hideClick()" onmouseover="show('get azimuthal angle - получить азимутальный угол')" onmouseout="hide()">.getAzimuthalAngle</a></span>( )</pre>
Получает текущий угол поворота по горизонтали, в радианах.<br><br>

<pre id="1getPolarAngle"><span onclick="showClick(type_rad)"><a href="#" onclick="return false" onblur="hideClick()" onmouseover="show('get polar angle - получить полярный угол')" onmouseout="hide()">.getPolarAngle</a></span>( )</pre>
Получает текущий угол поворота по вертикали, в радианах.<br><br>

<pre id="1reset"><span onclick="showClick(type_null)"><a href="#" onclick="return false" onblur="hideClick()" onmouseover="show('reset - сброс')" onmouseout="hide()">.reset</a></span>( )</pre>
Метод сбрасывает состояние элемента управления либо в его состояние, сохраненное последним вызовом <tt><a href="#1saveState" onmouseover="show('OrbitControls.saveState')" onmouseout="hide()">saveState</a></tt>, либо в исходное состояние.<br><br>

<pre id="1saveState"><span onclick="showClick(type_null)"><a href="#" onclick="return false" onblur="hideClick()" onmouseover="show('save state - сохранить состояние')" onmouseout="hide()">.saveState</a></span>( )</pre>
Сохраняет текущее состояние элемента управления. Впоследствии оно может быть восстановлено с помощью метода <tt><a href="#1reset" onmouseover="show('OrbitControls.reset')" onmouseout="hide()">reset</a></tt>.<br><br>

<pre id="1update"><span onclick="showClick('false')"><a href="#" onclick="return false" onblur="hideClick()" onmouseover="show('update - обновление')" onmouseout="hide()">.update</a></span>( )</pre>
Метод обновляет элемент управления. Должен вызываться после любых изменений состояния камеры вручную или в цикле обновления,
если установлены <tt><a href="#1autoRotate" onmouseover="show('OrbitControls.autoRotate')" onmouseout="hide()">autoRotate</a></tt>
или <tt><a href="#1enableDamping" onmouseover="show('OrbitControls.enableDamping')" onmouseout="hide()">enableDamping</a></tt>.</div><br>

<h4>Исходники</h4>
<div class=blockindent><a href="https://github.com/mrdoob/three.js/blob/master/examples/js/controls/OrbitControls.js" target="_blank">OrbitControls.js на github.com</a></div><br><br>


<h2 id="2">Геометрические элементы</h2><br>

<span class="right_side"><a href="core.htm#2" title="Переход к родительскому классу"><tt>BufferGeometry &rarr;</tt></a></span>
<h3 id="2.1">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; ConvexBufferGeometry</h3>
ConvexBufferGeometry можно использовать для создания выпуклой оболочки по заданному массиву трехмерных точек.
Среднее время сложности этой задачи считается как <tt>O(nlog(n))</tt>.<br><br>

<h4>Пример</h4>
<pre>var geometry = new THREE.ConvexBufferGeometry( points );
var material = new THREE.MeshBasicMaterial( {color: 0x00ff00} );
var mesh = new THREE.Mesh( geometry, material );
scene.add( mesh );</pre>
<h5>Другие примеры:</h5>
<pre><a href="https://threejs.org/examples/#webgl_geometry_convex" target="_blank">geometry / convex</a></pre><br>

<h4>Конструктор</h4>
<pre>ConvexBufferGeometry( <span onclick="showClick(type_array)"><a href="#" onclick="return false" onblur="hideClick()" onmouseover="show('points - точки')" onmouseout="hide()">points</a></span> )</pre>
<div class=list><tt><span onclick="showClick(type_array)"><a href="#" onclick="return false" onblur="hideClick()" onmouseover="show('points - точки')" onmouseout="hide()">points</a></span></tt>
 — массив <a href="math.htm#19" onmouseover="show('Vector3')" onmouseout="hide()">трехмерных векторов</a>, который будет содержать получающаяся выпуклая оболочка.</div><br>

<h4>Исходники</h4>
<div class=blockindent><a href="https://github.com/mrdoob/three.js/blob/master/examples/js/geometries/ConvexGeometry.js" target="_blank">ConvexGeometry.js на github.com</a></div><br><br>


<span class="right_side"><a href="core.htm#7" title="Переход к родительскому классу"><tt>Geometry &rarr;</tt></a></span>
<h3 id="2.2">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; ConvexGeometry</h3>
ConvexGeometry можно использовать для создания выпуклой оболочки по заданному массиву трехмерных точек.
Среднее время сложности этой задачи считается как <tt>O(nlog(n))</tt>.<br><br>

<h4>Пример</h4>
<pre>var geometry = new THREE.ConvexGeometry( points );
var material = new THREE.MeshBasicMaterial( {color: 0x00ff00} );
var mesh = new THREE.Mesh( geometry, material );
scene.add( mesh );</pre><br>
<h5>Другие примеры:</h5>
<pre><a href="https://threejs.org/examples/#webgl_geometry_convex" target="_blank">geometry / convex</a></pre><br>

<h4>Конструктор</h4>
<pre>ConvexGeometry( <span onclick="showClick(type_array)"><a href="#" onclick="return false" onblur="hideClick()" onmouseover="show('points - точки')" onmouseout="hide()">points</a></span> )</pre>
<div class=list><tt><span onclick="showClick(type_array)"><a href="#" onclick="return false" onblur="hideClick()" onmouseover="show('points - точки')" onmouseout="hide()">points</a></span></tt>
 — массив <a href="math.htm#19" onmouseover="show('Vector3')" onmouseout="hide()">трехмерных векторов</a>, который будет содержать получающаяся выпуклая оболочка.</div><br>

<h4>Исходники</h4>
<div class=blockindent><a href="https://github.com/mrdoob/three.js/blob/master/examples/js/geometries/ConvexGeometry.js" target="_blank">ConvexGeometry.js на github.com</a></div><br><br>


<span class="right_side"><a href="core.htm#2" title="Переход к родительскому классу"><tt>BufferGeometry &rarr;</tt></a></span>
<h3 id="2.3">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; DecalGeometry</h3>
DecalGeometry можно использовать для создания сетки (mesh) с <a href="https://ru.wikipedia.org/wiki/%D0%94%D0%B5%D0%BA%D0%B0%D0%BB%D1%8C" target="_blank">декалью</a>, которая служит различным видам целей, например добавление уникальных элементов к моделям, выполнение динамически видимых изменений окружающей среды или облицовка стыков.<br><br>

<h4>Пример</h4>
<pre>var geometry =  new THREE.DecalGeometry( mesh, position, orientation, size );
var material = new THREE.MeshBasicMaterial( { color: 0x00ff00 } );
var mesh = new THREE.Mesh( geometry, material );
scene.add( mesh );</pre>
<h5>Другие примеры:</h5>
<pre><a href="https://threejs.org/examples/#webgl_decals" target="_blank">decals</a></pre><br>

<h4>Конструктор</h4>
<pre>DecalGeometry( <a href="objects.htm#7" onmouseover="show('Mesh.<br>mesh - сетка')" onmouseout="hide()">mesh</a>, <a href="math.htm#19" onmouseover="show('Vector3.<br>position - позиция')" onmouseout="hide()">position</a>, <a href="math.htm#5" onmouseover="show('Euler.<br>orientation - ориентация, направление')" onmouseout="hide()">orientation</a>, <a href="math.htm#19" onmouseover="show('Vector3.<br>size - размер')" onmouseout="hide()">size</a> )</pre>
<div class=list><tt>mesh</tt> — любой объект сетка (mesh).</div>
<div class=list><tt>position</tt> — позиция проектора декали.</div>
<div class=list><tt>orientation</tt> — ориентация проектора декали.</div>
<div class=list><tt>size</tt> — размер проектора декали.</div><br>

<h4>Исходники</h4>
<div class=blockindent><a href="https://github.com/mrdoob/three.js/blob/master/examples/js/geometries/DecalGeometry.js" target="_blank">DecalGeometry.js на github.com</a></div><br><br>


<h2 id="3">Загрузчики</h2>
<h3 id="3.1">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; BabylonLoader</h3>
Загрузчик для загрузки ресурсов в формате <em>babylon</em>.<br>
Файловый формат <a href="https://doc.babylonjs.com/generals/file_format_map_(.babylon)" target="_blank">babylon</a> используется JavaScript'овским
<a href="https://ru.wikipedia.org/wiki/%D0%A4%D1%80%D0%B5%D0%B9%D0%BC%D0%B2%D0%BE%D1%80%D0%BA" target="_blank">фреймворком</a> <a href="https://www.babylonjs.com/" target="_blank">Babylon.js</a>.<br><br>

<h4>Пример</h4>
<pre>// instantiate a loader (создаем экземпляр загрузчика)
var loader = new THREE.BabylonLoader();<br>
// load a Babylon resource (загружаем Babylon ресурс)
loader.load(
  // resource URL (URL-адрес ресурса)
  'models/babylon/skull.babylon',
  // Function when resource is loaded (функция при загрузке ресурса)
  function ( object ) {
    scene.add( object );
  },
  // Function called when download progresses
  // функция, вызываемая в процессе загрузки
  function ( xhr ) {
    console.log( (xhr.loaded / xhr.total * 100) + '% loaded' );
  },
  // Function called when download errors
  // функция, вызываемая при ошибках загрузки
  function ( xhr ) {
    console.log( 'Произошла ошибка' );
  }
);</pre>
<h5>Другие примеры:</h5>
<pre><a href="https://threejs.org/examples/#webgl_loader_babylon" target="_blank">webgl_loader_babylon</a></pre><br>

<h4>Конструктор</h4>
<pre>BabylonLoader( <a href="loaders.htm#16.2" onmouseover="show('LoadingManager.<br>manager - менеджер, управляющий')" onmouseout="hide()">manager</a> )</pre>
<div class=list><tt><a href="loaders.htm#16.2" onmouseover="show('LoadingManager.<br>manager - менеджер, управляющий')" onmouseout="hide()">manager</a></tt>
— <a href="loaders.htm#16.2" onmouseover="show('LoadingManager')" onmouseout="hide()">менеджер загрузки</a>, используемый для загрузки.
Значением по умолчанию является <a href="loaders.htm#16.2" onmouseover="show('LoadingManager')" onmouseout="hide()">THREE.DefaultLoadingManager</a>.</div>
Создает новый <tt>BabylonLoader</tt>.<br><br>

<h4>Свойства</h4>
<br><br>

<h4>Методы</h4>
<div class=blockindent><br>
<pre id="3.1load"><span onclick="showClick(type_null)"><a href="#" onclick="return false" onblur="hideClick()" onmouseover="show('load - загрузить')" onmouseout="hide()">.load</a></span>( <span onclick="showClick(type_string)"><a href="#" onclick="return false" onblur="hideClick()" onmouseover="show('url - сокращ. англ. слов Uniform Resource Locator<br>- единообразный локатор (определитель<br>местонахождения) ресурса.')" onmouseout="hide()">url</a></span>, <span onclick="showClick(type_func)"><a href="#" onclick="return false" onblur="hideClick()" onmouseover="show('on load - на загрузку')" onmouseout="hide()">onLoad</a></span>, <span onclick="showClick(type_func)"><a href="#" onclick="return false" onblur="hideClick()" onmouseover="show('on progress - на ход процесса')" onmouseout="hide()">onProgress</a></span>, <span onclick="showClick(type_func)"><a href="#" onclick="return false" onblur="hideClick()" onmouseover="show('on error - на ошибку')" onmouseout="hide()">onError</a></span> )</pre>
<div class=list><tt><span onclick="showClick(type_string)"><a href="#" onclick="return false" onblur="hideClick()" onmouseover="show('url - сокращ. англ. слов Uniform Resource Locator<br>- единообразный локатор (определитель<br>местонахождения) ресурса.')" onmouseout="hide()">url</a></span></tt>
— строка, содержащая путь/URL-адрес babylon-файла (обязательный аргумент).</div>
<div class=list><tt><span onclick="showClick(type_func)"><a href="#" onclick="return false" onblur="hideClick()" onmouseover="show('on load - на загрузку')" onmouseout="hide()">onLoad</a></span></tt> — функция, которая будет вызвана после успешного завершения загрузки, дополнительный, необязательный параметр. В качестве аргумента, эта функция получает загруженный <a href="core.htm#14" onmouseover="show('Object3D')" onmouseout="hide()">Object3D</a>.</div>
<div class=list><tt><span onclick="showClick(type_func)"><a href="#" onclick="return false" onblur="hideClick()" onmouseover="show('on progress - на ход процесса')" onmouseout="hide()">onProgress</a></span></tt>
- функция, которая будет вызываться пока идет процесс загрузки.
Аргументом будет экземпляр XMLHttpRequest, что содержит сведения о загрузке <tt><span onclick="showClick(type_int)"><a href="#" onclick="return false" onblur="hideClick()" onmouseover="show('total - полный (размер ресурса)')" onmouseout="hide()">total</a></span></tt>
и <tt><span onclick="showClick(type_int)"><a href="#" onclick="return false" onblur="hideClick()" onmouseover="show('loaded - загружено, в данном случае<br>размер загруженного ресурса')" onmouseout="hide()">loaded</a></span></tt> в байтах.</div>
<div class=list><tt><span onclick="showClick(type_func)"><a href="#" onclick="return false" onblur="hideClick()" onmouseover="show('on error - на ошибку')" onmouseout="hide()">onError</a></span></tt> — функция, которая будет вызвана в случае ошибки при загрузке, дополнительный, необязательный параметр. Функция принимает ошибку в качестве аргумента.</div>
Начинает загрузку с URL-адреса и после её успешного завершения вызывает функцию, указанную в <tt>onLoad</tt>, с разобранным содержимым ответа.<br><br>

<pre id="3.1parse"><a href="core.htm#14" onmouseover="show('Object3D.<br>parse - разбор, структурный анализ')" onmouseout="hide()">.parse</a>( <span onclick="showClick(type_obj)"><a href="#" onclick="return false" onblur="hideClick()" onmouseover="show('json - сокр. от англ. слов JavaScript Object Notation —<br>текстовый формат описания объекта, основанный на JavaScript')" onmouseout="hide()">json</a></span> )</pre>
<div class=list><tt><span onclick="showClick(type_obj)"><a href="#" onclick="return false" onblur="hideClick()" onmouseover="show('json - сокр. от англ. слов JavaScript Object Notation —<br>текстовый формат описания объекта, основанный на JavaScript')" onmouseout="hide()">json</a></span></tt>
— анализируемая JSON-структура.</div>
Метод проводит анализ JSON-структуры и возвращает <a href="core.htm#14" onmouseover="show('Object3D')" onmouseout="hide()">объект</a> или <a href="scenes.htm#3" onmouseover="show('Scene')" onmouseout="hide()">сцену</a>.<br>
Найденные объекты конвертируются в <a href="objects.htm#7" onmouseover="show('Mesh')" onmouseout="hide()">Mesh</a> c <a href="core.htm#2" onmouseover="show('BufferGeometry')" onmouseout="hide()">BufferGeometry</a>
и по умолчанию с <a href="materials.htm#8" onmouseover="show('MeshPhongMaterial')" onmouseout="hide()">MeshPhongMaterial</a>.<br>
Освещение обрабатывается соответственно.</div><br>

<h4>Исходники</h4>
<div class=blockindent><a href="https://github.com/mrdoob/three.js/blob/master/examples/js/loaders/BabylonLoader.js" target="_blank">BabylonLoader.js на github.com</a></div><br><br>


<span class="right_side"><a href="loaders.htm#12" title="Переход к родительскому классу"><tt>Loader &rarr;</tt></a></span>
<h3 id="3.2">GLTFLoader</h3>
Загрузчик для загрузки ресурсов в формате <em>glTF 2.0</em>.<br>
Формат <a href="https://www.khronos.org/gltf" target="_blank">glTF (GL Transmission Format)</a> это <a href="https://github.com/KhronosGroup/glTF/tree/master/specification/2.0" target="_blank">спецификация открытого формата</a> для эффективной передачи и загрузки 3D content.
Ресурсы могут быть предоставлены либо в формате JSON (с расширением <tt>.gltf</tt>), либо в бинарном формате (<tt>.glb</tt>). Текстуры (<tt>.jpg</tt>, <tt>.png</tt>, ...) и дополнительные бинарные данные (<tt>.bin</tt>) хранятся во внешних файлах.
Ресурс glTF может представить одну или несколько сцен, включая сетки (mesh), материалы, текстуры, оболочки (skin), "скелеты", цели морфинга, анимации, освещение и/или камеры.<br><br>

<h4>Расширения</h4>
GLTFLoader поддерживает следующие <a href="https://github.com/KhronosGroup/glTF/tree/master/extensions/" target="_blank">расширения glTF</a>:
<div class=blockindent>KHR_draco_mesh_compression<br>
KHR_materials_pbrSpecularGlossiness<br>
KHR_materials_unlit<br>
KHR_lights (экспериментально)</div><br>

<h4>Пример</h4>
<div><a class='link' onclick='javascript:spoiler1(this)'>... показать</a>
<div style='display:none;'>
<pre>// Instantiate a loader (создание экземпляра загрузчика)
var loader = new THREE.GLTFLoader();<br>
// Optional: Provide a DRACOLoader instance to decode compressed mesh data
// опционально: предоставление экземпляра DRACOLoader для декодирования сжатых данных сетки
THREE.DRACOLoader.setDecoderPath( '/examples/js/libs/draco' );
loader.setDRACOLoader( new THREE.DRACOLoader() );<br>
// Load a glTF resource (загрузка ресурсов в формате glTF)
loader.load(
  // resource URL (URL-адрес ресурса)
  'models/gltf/duck/duck.gltf',
  // called when the resource is loaded (вызывается по завершении загрузки)
  function ( gltf ) {<br>
    scene.add( gltf.scene );<br>
    gltf.animations; // Array (массив) &#60;THREE.AnimationClip>
    gltf.scene; // THREE.Scene
    gltf.scenes; // Array (массив) &#60;THREE.Scene>
    gltf.cameras; // Array (массив) &#60;THREE.Camera>
    gltf.asset; // Object (объект)<br>
  },
  // called when loading is in progresses (вызывается во время загрузки)
  function ( xhr ) {<br>
    console.log( ( xhr.loaded / xhr.total * 100 ) + '% loaded' );<br>
  },
  // called when loading has errors (вызывается при ошибках в загрузке)
  function ( error ) {<br>
    console.log( 'Произошла ошибка' );
  }
);</pre></div></div>
<h5>Другие примеры:</h5>
<pre><a href="https://threejs.org/examples/#webgl_loader_gltf" target="_blank">webgl / loader / gltf</a></pre><br>

<h4>Совместимость с браузером</h4>
GLTFLoader полагается на <a href="https://developer.mozilla.org/ru/docs/Web/JavaScript/Reference/Global_Objects/Promise" target="_blank">обещания (Promise)</a> от ES6, которые не поддерживаются в IE11.
Для использования загрузчика в IE11, нужно подключить полифилл предоставляющий подмену Promise (обещания).<br>
Вот <a href="https://learn.javascript.ru/promise" target="_blank">описание Promise на javascript.ru</a>.<br><br>

<h4>Нестандартные расширения</h4>
Метаданные из неизвестных расширений сохраняются в экземплярах Object3D, Scene и Material как “<tt>.userData.gltfExtensions</tt>” или прилагаются к ответу объекта “<tt>gltf</tt>”. Вот пример:
<pre>loader.load('foo.gltf', function ( gltf ) {
  var scene = gltf.scene;
  var mesh = scene.children[ 3 ];
  var fooExtension = mesh.userData.gltfExtensions.EXT_foo;<br>
  gltf.parser.getDependency( 'bufferView', fooExtension.bufferView )
		.then( function ( fooBuffer ) { ... } );
} );</pre><br>

<h4>Конструктор</h4>
<pre>GLTFLoader( <a href="loaders.htm#16.2" onmouseover="show('LoadingManager.<br>manager - менеджер, управляющий')" onmouseout="hide()">manager</a> )</pre>
<div class=list><tt><a href="loaders.htm#16.2" onmouseover="show('LoadingManager.<br>manager - менеджер, управляющий')" onmouseout="hide()">manager</a></tt>
— <a href="loaders.htm#16.2" onmouseover="show('LoadingManager')" onmouseout="hide()">менеджер загрузки</a>, используемый для загрузки.
Значением по умолчанию является <a href="loaders.htm#16.2" onmouseover="show('LoadingManager')" onmouseout="hide()">THREE.DefaultLoadingManager</a>.</div>
Создает новый GLTFLoader.<br><br>

<h4>Свойства</h4>
<br><br>

<h4>Методы</h4>
<div class=blockindent><br>
<pre id="3.2load"><span onclick="showClick(type_null)"><a href="#" onclick="return false" onblur="hideClick()" onmouseover="show('load - загрузить')" onmouseout="hide()">.load</a></span>( <span onclick="showClick(type_string)"><a href="#" onclick="return false" onblur="hideClick()" onmouseover="show('url - сокращ. англ. слов Uniform Resource Locator<br>- единообразный локатор (определитель<br>местонахождения) ресурса.')" onmouseout="hide()">url</a></span>, <span onclick="showClick(type_func)"><a href="#" onclick="return false" onblur="hideClick()" onmouseover="show('on load - на загрузку')" onmouseout="hide()">onLoad</a></span>, <span onclick="showClick(type_func)"><a href="#" onclick="return false" onblur="hideClick()" onmouseover="show('on progress - на ход процесса')" onmouseout="hide()">onProgress</a></span>, <span onclick="showClick(type_func)"><a href="#" onclick="return false" onblur="hideClick()" onmouseover="show('on error - на ошибку')" onmouseout="hide()">onError</a></span> )</pre>
<div class=list><tt>url</tt> — строка, содержащая путь/URL-адрес <tt>.gltf</tt> или <tt>.glb</tt> файла.</div>
<div class=list><tt>onLoad</tt> — функция, которая будет вызвана после успешного завершения загрузки. В качестве аргумента, эта функция получает загруженный ответ в формате JSON, возвращенный функцией <tt>parse</tt>.</div>
<div class=list><tt>onProgress</tt> —  функция, которая будет вызываться пока идет процесс загрузки, дополнительный, необязательный параметр.
Аргументом будет экземпляр XMLHttpRequest, что содержит сведения о загрузке <tt><span onclick="showClick(type_int)"><a href="#" onclick="return false" onblur="hideClick()" onmouseover="show('total - полный (размер ресурса)')" onmouseout="hide()">total</a></span></tt>
и <tt><span onclick="showClick(type_int)"><a href="#" onclick="return false" onblur="hideClick()" onmouseover="show('loaded - загружено, в данном случае<br>размер загруженного ресурса')" onmouseout="hide()">loaded</a></span></tt> в байтах.</div>
<div class=list><tt>onError</tt> — функция, которая будет вызвана в случае ошибки при загрузке, дополнительный, необязательный параметр. Функция принимает ошибку в качестве аргумента.</div>
Начинает загрузку с URL-адреса и после её успешного завершения вызывает функцию обратного вызова с разобранным содержимым ответа.<br><br>

<pre id="3.2setPath"><span onclick="showClick(type_null)"><a href="#" onclick="return false" onblur="hideClick()" onmouseover="show('set path - установить путь')" onmouseout="hide()">.setPath</a></span>( <span onclick="showClick(type_string)"><a href="#" onclick="return false" onblur="hideClick()" onmouseover="show('path - путь')" onmouseout="hide()">path</a></span> )</pre>
<div class=list><tt>path</tt> — базовый путь для загрузки дополнительных ресурсов, например текстур или двоичных данных (<tt>.bin</tt>).</div>
Устанавливает базовый путь для дополнительных ресурсов.<br><br>

<pre id="3.2setCrossOrigin"><span onclick="showClick(type_null)"><a href="#" onclick="return false" onblur="hideClick()" onmouseover="show('set cross origin - установить перекрестный источник')" onmouseout="hide()">.setCrossOrigin</a></span>( <span onclick="showClick(type_string)"><a href="#" onclick="return false" onblur="hideClick()" onmouseover="show('value - значение')" onmouseout="hide()">value</a></span> )</pre>
<div class=list><tt>value</tt> — строковое значение <tt><span class="lnk" onmouseover="show('cross origin - перекрестный источник')" onmouseout="hide()">crossOrigin</span></tt> для реализации
<a href="https://ru.wikipedia.org/wiki/Cross-origin_resource_sharing" target="_blank" onmouseover="show('CORS - сокращ. англ. слов cross-origin resource sharing<br>- совместное использование ресурсов между разными<br>источниками — технология современных браузеров, которая<br>позволяет предоставить веб-странице доступ к ресурсам<br>другого домена')" onmouseout="hide()">CORS</a>
для загрузки url-адреса с другого домена, который предоставляет CORS.</div><br>

<pre id="3.2setDRACOLoader"><span onclick="showClick(type_null)"><a href="#" onclick="return false" onblur="hideClick()" onmouseover="show('set DRACO loader - установить загрузчик DRACO')" onmouseout="hide()">.setDRACOLoader</a></span>( dracoLoader : DRACOLoader )</pre>
<div class=list><tt>dracoLoader</tt> — экземпляр THREE.DRACOLoader, который будет использоваться для декодирования компонентов, сжатых с расширением KHR_draco_mesh_compression.</div>
Подробности о Draco и его декодере смотрите <a href="https://github.com/mrdoob/three.js/tree/dev/examples/js/libs/draco#readme" target="_blank">здесь</a>.<br><br>

<pre id="3.2parse"><span onclick="showClick(type_null)"><a href="#" onclick="return false" onblur="hideClick()" onmouseover="show('parse - разбор, синтаксический анализ')" onmouseout="hide()">.parse</a></span>( <span onclick="showClick('ArrayBuffer')"><a href="#" onclick="return false" onblur="hideClick()" onmouseover="show('data - данные')" onmouseout="hide()">data</a></span>, <span onclick="showClick(type_string)"><a href="#" onclick="return false" onblur="hideClick()" onmouseover="show('path - путь')" onmouseout="hide()">path</a></span>, <span onclick="showClick(type_func)"><a href="#" onclick="return false" onblur="hideClick()" onmouseover="show('on load - на загрузку')" onmouseout="hide()">onLoad</a></span>, <span onclick="showClick(type_func)"><a href="#" onclick="return false" onblur="hideClick()" onmouseover="show('on error - на ошибку')" onmouseout="hide()">onError</a></span> )</pre>
<div class=list><tt>data</tt> — glTF компонент для синтаксического анализа, в виде буфера массива (<span class="lnk" onmouseover="show('Объект ArrayBuffer - это стандартный набор бинарных данных<br>с фиксированной длиной. Нельзя манипулировать содержимым<br>ArrayBuffer напрямую. Вместо этого, необходимо создать<br>типизованное представление DataView, которое будет отображать<br>буфер в определенном формате, и даст доступ на запись и<br>чтение его содержимого.')" onmouseout="hide()">ArrayBuffer</span>) или строки в формате JSON.</div>
<div class=list><tt>path</tt> — базовый путь, по которому находятся последующие glTF-ресурсы, такие как текстуры и файлы двоичных данных (<tt>.bin</tt>).</div>
<div class=list><tt>onLoad</tt> — функция, которая будет вызвана по завершению синтаксического анализа.</div>
<div class=list><tt>onError</tt> — функция, которая будет вызвана в случае ошибки во время синтаксического анализа (парсинга), дополнительный, необязательный параметр. Функция принимает ошибку в качестве аргумента.</div>
Метод проводит анализ ArrayBuffer на основе glTF или строки в формате JSON и по завершении вызывает функцию обратного вызова, переданную в аргументе <tt>onLoad</tt>.
Аргументом для этой функции будет объект, который содержит загруженные части: <tt>scene</tt>, <tt>scenes</tt>, <tt>cameras</tt> и <tt>animations</tt>.</div><br>

<h4>Исходники</h4>
<div class=blockindent><a href="https://github.com/mrdoob/three.js/blob/master/examples/js/loaders/GLTFLoader.js" target="_blank">GLTFLoader.js на github.com</a></div><br><br>


<span class="right_side"><a href="loaders.htm#12" title="Переход к родительскому классу"><tt>Loader &rarr;</tt></a></span>
<h3 id="3.mmd">MMDLoader</h3>
Загрузчик для ресурсов в формате <em><a href="http://www.geocities.jp/higuchuu4/index_e.htm" target="_blank" onmouseover="show('MMD - сокращ. от англ. слов Miku Miku Dance - ресурсы для<br>бесплатной программы компьютерной анимации, которая<br>позволяет пользователям создавать 3D-анимированные<br>видеоролики, изначально созданная для персонажа Vocaloid<br>Мику Хацунэ. Программа была написана Ю Хигути (HiguchiM).')" onmouseout="hide()">MMD</a></em>. Статья Википедии о <a href="https://ru.wikipedia.org/wiki/MikuMikuDance" target="_blank">MMD - MikuMikuDance</a> на русском языке.<br>
MMDLoader создает объекты three.js из MMD ресурсов, таких как <span class="lnk" onmouseover="show('Бинарный файл 3D моделей, используемых MikuMikuDance (MMD),<br>программой анимации танцев, изначально созданной в Японии;<br>содержит 3D сетку для фигуры танцора, которая может быть<br>текстурирована и анимирована с помощью инструментов программы<br>MikuMikuDance; используется для хранения различных моделей<br>фигур танцоров.')" onmouseout="hide()">PMD</span>,
<span class="lnk" onmouseover="show('Бинарный файл 3D моделей, используемых MikuMikuDance (MMD),<br>программой анимации танцев, изначально созданной в Японии;<br>содержит 3D сетку для модели, фигур танцоров, персонажей и<br>других сопутствующих деталей, которые могут быть текстуризованы<br>и анимированы с помощью инструментов программы MikuMikuDance;<br>используется для хранения различных моделей фигур танцоров.<br>'
+'PMX файлы имеют морфы (объекты изменения), которые могут<br>изменять различные аспекты внешнего вида модели, такие как<br>цвет компонентов, позиционирование костей модели и прозрачности<br>модели. Морфы в файле PMX являются более продвинутыми, чем<br>в файлах PMD.')" onmouseout="hide()">PMX</span>,
<span class="lnk" onmouseover="show('vmd - сокращ. от англ. слов vocaloid motion data file - файл<br>данных движения для Vocaloid<br>Бинарный файл 3D моделей, используемых MikuMikuDance (MMD),<br>программой создания роликов танцевальной анимации; в нем<br>хранятся параметры движений тела танцевальных режимов; могут<br>применяться для одной или более фигур танцоров в трехмерной<br>анимации.<br>Изначально MikuMikuDance (MMD) был разработан в Японии. Он<br>используется в качестве рекламного продукта для звукосинтезатора<br>Vocaloid от фирмы Yamaha.')" onmouseout="hide()">VMD</span>
и <span class="lnk" onmouseover="show('vpd - сокращ. от англ. слов vocaloid pose data file - файл<br>данных поз для Vocaloid<br>Бинарный файл 3D моделей, используемых MikuMikuDance (MMD),<br>синхронизирует партии танца и ритма; сохраняет позиции<br>костей модели персонажа, задающие его позу; может<br>использоваться в последовательности поз, составляющих<br>анимацию танца (VMD файл).')" onmouseout="hide()">VPD</span> файлы.
Посмотрите описание MMD-анимации в <a href="#0.2" onmouseover="show('MMDAnimationHelper')" onmouseout="hide()">MMDAnimationHelper</a> с обработкой
<span class="lnk" onmouseover="show('сокращ. от англ. слов Inverse Kinematics - инверсная (обратная) кинематика')" onmouseout="hide()">IK</span>, Grant,
и <span class="lnk" onmouseover="show('Physics - физика, т.е. физические параметры')" onmouseout="hide()">Physics</span>.<br>
Если требуются необработанное содержимое MMD ресурсов, воспользуйтесь методами <tt>.loadPMD/PMX/VMD/VPD</tt>.<br><br>
<h4>Пример</h4>
<pre>// Instantiate a loader (создание экземпляра загрузчика)
var loader = new THREE.MMDLoader();<br>
// Load a MMD model (загрузка MMD модели)
loader.load(
  // path to PMD/PMX file (путь к PMD/PMX файлу
  'models/mmd/miku.pmd',<br>
  // called when the resource is loaded (вызывается по окончании загрузки)
  function ( mesh ) {
    scene.add( mesh );
  },<br>
  // called when loading is in progresses (вызывается в процессе загрузки)
  function ( xhr ) {
    console.log( ( xhr.loaded / xhr.total * 100 ) + '% loaded' );
  },<br>
  // called when loading has errors (вызывается при ошибках в загрузке)
  function ( error ) {
    console.log( 'Произошла ошибка' );
  }
);</pre>
<h5>Другие примеры:</h5>
<pre><a href="https://threejs.org/examples/#webgl_loader_mmd" target="_blank">webgl / loader / mmd</a>
<a href="https://threejs.org/examples/#webgl_loader_mmd_pose" target="_blank">webgl / loader / mmd / pose</a>
<a href="https://threejs.org/examples/#webgl_loader_mmd_audio" target="_blank">webgl / loader / mmd / audio</a></pre><br>

<h4>Конструктор</h4>
<pre>MMDLoader( <a href="loaders.htm#16.2" onmouseover="show('LoadingManager.<br>manager - менеджер, управляющий')" onmouseout="hide()">manager</a> )</pre>
<div class=list><tt>manager</tt> — <a href="loaders.htm#16.2" onmouseover="show('LoadingManager')" onmouseout="hide()">менеджер загрузки</a>, используемый для загрузки.
Значением по умолчанию является <a href="loaders.htm#16.2" onmouseover="show('LoadingManager')" onmouseout="hide()">THREE.DefaultLoadingManager</a>.</div>
Создает новый MMDLoader.<br><br>

<h4>Свойства</h4>
<div class=blockindent><br>
</div><br>

<h4>Методы</h4>
<div class=blockindent><br>
<pre id="3.mmdload"><span onclick="showClick(type_null)"><a href="#" onclick="return false" onblur="hideClick()" onmouseover="show('load - загрузить')" onmouseout="hide()">.load</a></span>( <span onclick="showClick(type_string)"><a href="#" onclick="return false" onblur="hideClick()" onmouseover="show('url - сокращ. англ. слов Uniform Resource Locator<br>- единообразный локатор (определитель<br>местонахождения) ресурса')" onmouseout="hide()">url</a></span>, <span onclick="showClick(type_func)"><a href="#" onclick="return false" onblur="hideClick()" onmouseover="show('on load - на загрузку')" onmouseout="hide()">onLoad</a></span>, <span onclick="showClick(type_func)"><a href="#" onclick="return false" onblur="hideClick()" onmouseover="show('on progress - на ход процесса')" onmouseout="hide()">onProgress</a></span>, <span onclick="showClick(type_func)"><a href="#" onclick="return false" onblur="hideClick()" onmouseover="show('on error - на ошибку')" onmouseout="hide()">onError</a></span> )</pre>
<div class=list><tt>url</tt> — строка, содержащая путь или url-адрес к <tt>pmd</tt> или <tt>pmx</tt> файлу.</div>
<div class=list><tt>onLoad</tt> — функция, которая будет вызвана после успешного завершения загрузки.</div>
<div class=list><tt>onProgress</tt> - функция, которая будет вызываться пока идет процесс загрузки (дополнительный, необязательный параметр).
Аргументом будет экземпляр XMLHttpRequest, что содержит сведения о загрузке <tt><span onclick="showClick(type_int)"><a href="#" onclick="return false" onblur="hideClick()" onmouseover="show('total - полный (размер ресурса)')" onmouseout="hide()">total</a></span></tt>
и <tt><span onclick="showClick(type_int)"><a href="#" onclick="return false" onblur="hideClick()" onmouseover="show('loaded - загружено, в данном случае<br>размер загруженного ресурса')" onmouseout="hide()">loaded</a></span></tt> в байтах.</div>
<div class=list><tt>onError</tt> — функция, которая будет вызвана в случае ошибки при загрузке (дополнительный, необязательный параметр). Функция принимает ошибку в качестве аргумента.</div>
Начинает загрузку файла модели в формате <tt>PMD</tt>/<tt>PMX</tt> из местоположения, указанного в аргументе <tt>url</tt> и запускает функцию обратного вызова (аргумент <tt>onLoad</tt>)
с разобранным <a href="objects.htm#10" onmouseover="show('SkinnedMesh')" onmouseout="hide()">SkinnedMesh</a>, содержащим <a href="core.htm#2" onmouseover="show('BufferGeometry')" onmouseout="hide()">BufferGeometry</a>
и массив из <a href="materials.htm#11" onmouseover="show('MeshToonMaterial')" onmouseout="hide()">MeshToonMaterial</a>.<br><br>

<pre id="3.mmdloadAnimation"><span onclick="showClick(type_null)"><a href="#" onclick="return false" onblur="hideClick()" onmouseover="show('load animation - загрузить анимацию')" onmouseout="hide()">.loadAnimation</a></span>( <span onclick="showClick(type_string)"><a href="#" onclick="return false" onblur="hideClick()" onmouseover="show('url - сокращ. англ. слов Uniform Resource Locator<br>- единообразный локатор (определитель<br>местонахождения) ресурса')" onmouseout="hide()">url</a></span>, <a href="core.htm#14" onmouseover="show('Object3D.<br>object - объект')" onmouseout="hide()">object</a>, <span onclick="showClick(type_func)"><a href="#" onclick="return false" onblur="hideClick()" onmouseover="show('on load - на загрузку')" onmouseout="hide()">onLoad</a></span>, <span onclick="showClick(type_func)"><a href="#" onclick="return false" onblur="hideClick()" onmouseover="show('on progress - на ход процесса')" onmouseout="hide()">onProgress</a></span>, <span onclick="showClick(type_func)"><a href="#" onclick="return false" onblur="hideClick()" onmouseover="show('on error - на ошибку')" onmouseout="hide()">onError</a></span> )</pre>
<div class=list><tt>url</tt> — строка или массив строк, содержащая(ий) путь или url-адрес к <tt><span class="lnk" onmouseover="show('vmd - сокращ. от англ. слов vocaloid motion data file - файл<br>данных движения для Vocaloid<br>Бинарный файл 3D моделей, используемых MikuMikuDance (MMD),<br>программой создания роликов танцевальной анимации; в нем<br>хранятся параметры движений тела танцевальных режимов; могут<br>применяться для одной или более фигур танцоров в трехмерной<br>анимации.<br>Изначально MikuMikuDance (MMD) был разработан в Японии. Он<br>используется в качестве рекламного продукта для звукосинтезатора<br>Vocaloid от фирмы Yamaha.')" onmouseout="hide()">vmd</span></tt> файлу(ам). Если указаны два или более файлов, они будут объединены.</div>
<div class=list><tt>object</tt> — <a href="objects.htm#10" onmouseover="show('SkinnedMesh')" onmouseout="hide()">SkinnedMesh</a> или <a href="cameras.htm#1" onmouseover="show('Camera')" onmouseout="hide()">Camera</a>. Клип и его элементы будут соответствовать данному объекту.</div>
<div class=list><tt>onLoad</tt> — функция, которая будет вызвана после успешного завершения загрузки.</div>
<div class=list><tt>onProgress</tt> - функция, которая будет вызываться пока идет процесс загрузки (дополнительный, необязательный параметр).
Аргументом будет экземпляр XMLHttpRequest, что содержит сведения о загрузке <tt><span onclick="showClick(type_int)"><a href="#" onclick="return false" onblur="hideClick()" onmouseover="show('total - полный (размер ресурса)')" onmouseout="hide()">total</a></span></tt>
и <tt><span onclick="showClick(type_int)"><a href="#" onclick="return false" onblur="hideClick()" onmouseover="show('loaded - загружено, в данном случае<br>размер загруженного ресурса')" onmouseout="hide()">loaded</a></span></tt> в байтах.</div>
<div class=list><tt>onError</tt> — функция, которая будет вызвана в случае ошибки при загрузке (дополнительный, необязательный параметр). Функция принимает ошибку в качестве аргумента.</div>
Начинает загрузку файла(ов) движения <span class="lnk" onmouseover="show('vmd - сокращ. от англ. слов vocaloid motion data file - файл<br>данных движения для Vocaloid<br>Бинарный файл 3D моделей, используемых MikuMikuDance (MMD),<br>программой создания роликов танцевальной анимации; в нем<br>хранятся параметры движений тела танцевальных режимов; могут<br>применяться для одной или более фигур танцоров в трехмерной<br>анимации.<br>Изначально MikuMikuDance (MMD) был разработан в Японии. Он<br>используется в качестве рекламного продукта для звукосинтезатора<br>Vocaloid от фирмы Yamaha.')" onmouseout="hide()">VMD</span>
из указанного url-адреса(ов) и запускает функцию обратного вызова с разобранным <a href="animation.htm#2" onmouseover="show('AnimatioinClip')" onmouseout="hide()">AnimatioinClip</a>.<br><br>

<pre id="3.mmdloadWithAnimation"><span onclick="showClick(type_null)"><a href="#" onclick="return false" onblur="hideClick()" onmouseover="show('load with animation - загрузить с анимацией')" onmouseout="hide()">.loadWithAnimation</a></span>( <span onclick="showClick(type_string)"><a href="#" onclick="return false" onblur="hideClick()" onmouseover="show('model url - url-адрес модели')" onmouseout="hide()">modelUrl</a></span>, <span onclick="showClick(type_string)"><a href="#" onclick="return false" onblur="hideClick()" onmouseover="show('vmd url - url-адрес vmd-файла')" onmouseout="hide()">vmdUrl</a></span>, <span onclick="showClick(type_func)"><a href="#" onclick="return false" onblur="hideClick()" onmouseover="show('on load - на загрузку')" onmouseout="hide()">onLoad</a></span>, <span onclick="showClick(type_func)"><a href="#" onclick="return false" onblur="hideClick()" onmouseover="show('on progress - на ход процесса')" onmouseout="hide()">onProgress</a></span>, <span onclick="showClick(type_func)"><a href="#" onclick="return false" onblur="hideClick()" onmouseover="show('on error - на ошибку')" onmouseout="hide()">onError</a></span> )</pre>

<div class=list><tt>modelUrl</tt> — строка, содержащая путь или url-адрес к <tt><span class="lnk" onmouseover="show('Бинарный файл 3D моделей, используемых MikuMikuDance (MMD),<br>программой анимации танцев, изначально созданной в Японии;<br>содержит 3D сетку для фигуры танцора, которая может быть<br>текстурирована и анимирована с помощью инструментов программы<br>MikuMikuDance; используется для хранения различных моделей<br>фигур танцоров.')" onmouseout="hide()">pmd</span></tt> или <tt><span class="lnk" onmouseover="show('Бинарный файл 3D моделей, используемых MikuMikuDance (MMD),<br>программой анимации танцев, изначально созданной в Японии;<br>содержит 3D сетку для модели, фигур танцоров, персонажей и<br>других сопутствующих деталей, которые могут быть текстуризованы<br>и анимированы с помощью инструментов программы MikuMikuDance;<br>используется для хранения различных моделей фигур танцоров.<br>'
+'PMX файлы имеют морфы (объекты изменения), которые могут<br>изменять различные аспекты внешнего вида модели, такие как<br>цвет компонентов, позиционирование костей модели и прозрачности<br>модели. Морфы в файле PMX являются более продвинутыми, чем<br>в файлах PMD.')" onmouseout="hide()">pmx</span></tt> файлу.</div>
<div class=list><tt>vmdUrl</tt> — строка или массив строк, содержащая(ий) путь или url-адрес к <tt><span class="lnk" onmouseover="show('vmd - сокращ. от англ. слов vocaloid motion data file - файл<br>данных движения для Vocaloid<br>Бинарный файл 3D моделей, используемых MikuMikuDance (MMD),<br>программой создания роликов танцевальной анимации; в нем<br>хранятся параметры движений тела танцевальных режимов; могут<br>применяться для одной или более фигур танцоров в трехмерной<br>анимации.<br>Изначально MikuMikuDance (MMD) был разработан в Японии. Он<br>используется в качестве рекламного продукта для звукосинтезатора<br>Vocaloid от фирмы Yamaha.')" onmouseout="hide()">vmd</span></tt> файлу(ам).</div>
<div class=list><tt>onLoad</tt> — функция, которая будет вызвана после успешного завершения загрузки.</div>
<div class=list><tt>onProgress</tt> - функция, которая будет вызываться пока идет процесс загрузки (дополнительный, необязательный параметр).
Аргументом будет экземпляр XMLHttpRequest, что содержит сведения о загрузке <tt><span onclick="showClick(type_int)"><a href="#" onclick="return false" onblur="hideClick()" onmouseover="show('total - полный (размер ресурса)')" onmouseout="hide()">total</a></span></tt>
и <tt><span onclick="showClick(type_int)"><a href="#" onclick="return false" onblur="hideClick()" onmouseover="show('loaded - загружено, в данном случае<br>размер загруженного ресурса')" onmouseout="hide()">loaded</a></span></tt> в байтах.</div>
<div class=list><tt>onError</tt> — функция, которая будет вызвана в случае ошибки при загрузке (дополнительный, необязательный параметр). Функция принимает ошибку в качестве аргумента.</div>
Начинает загрузку файла модели в формате PMD/PMX и файла(ов) движения VMD с указанных url-адресов и запускает функцию обратного вызова с объектов,
содержащим разобранный <a href="objects.htm#10" onmouseover="show('SkinnedMesh')" onmouseout="hide()">SkinnedMesh</a>
и <a href="animation.htm#2" onmouseover="show('AnimatioinClip')" onmouseout="hide()">AnimatioinClip</a>'ом подходящим к SkinnedMesh.<br><br>

<pre id="3.mmdsetCrossOrigin"><a href="#3.mmd" onmouseover="show('MMDLoader.<br>set cross origin - установить перекрестный источник')" onmouseout="hide()">.setCrossOrigin</a>( <span onclick="showClick(type_string)"><a href="#" onclick="return false" onblur="hideClick()" onmouseover="show('crossOrigin - перекрестный источник')" onmouseout="hide()">crossOrigin</a></span> )</pre>
<div class=list><tt>crossOrigin</tt> — строковое значение для реализации
<a href="https://ru.wikipedia.org/wiki/Cross-origin_resource_sharing" target="_blank" onmouseover="show('CORS - сокращ. англ. слов cross-origin resource sharing<br>- совместное использование ресурсов между разными<br>источниками — технология современных браузеров, которая<br>позволяет предоставить веб-странице доступ к ресурсам<br>другого домена')" onmouseout="hide()">CORS</a>
для загрузки url-адреса с другого домена, который предоставляет CORS.</div></div><br>

<h4>Исходники</h4>
<div class=blockindent><a href="https://github.com/mrdoob/three.js/blob/master/examples/js/loaders/MMDLoader.js" target="_blank">MMDLoader.js на github.com</a></div><br><br>


<h3 id="3.3">MTLLoader</h3>
Загрузчик для загрузки ресурсов в формате <em>.mtl</em>, который используется загрузчиком <a href="#3.4" onmouseover="show('OBJLoader')" onmouseout="hide()">OBJLoader</a>.
Формат MTL (Material Template Library, т.е. библиотека шаблонов материала) или файловый формат <tt>.MTL</tt> - это формат, сопутствующий файлам <a href="https://ru.wikipedia.org/wiki/Obj" target="_blank">формата <tt>.OBJ</tt></a>,
который описывает свойства поверхности затенения (материала) объектов в одном или нескольких файлах <tt>.OBJ</tt>.<br><br>

<h4>Конструктор</h4>
<pre>MTLLoader( <a href="loaders.htm#16.2" onmouseover="show('LoadingManager.<br>manager - менеджер, управляющий')" onmouseout="hide()">loadingManager</a> )</pre>
<div class=list><tt><a href="loaders.htm#16.2" onmouseover="show('LoadingManager.<br>loading manager - менеджер загрузки, управляющий загрузкой')" onmouseout="hide()">loadingManager</a></tt>
— <a href="loaders.htm#16.2" onmouseover="show('LoadingManager')" onmouseout="hide()">менеджер загрузки</a>, используемый для загрузки.
Значением по умолчанию является <a href="loaders.htm#16.2" onmouseover="show('LoadingManager')" onmouseout="hide()">THREE.DefaultLoadingManager</a>.</div>
Создает новый MTLLoader.<br><br>

<h4>Свойства</h4>
<br><br>

<h4>Методы</h4>
<div class=blockindent><br>
<pre id="3.3load"><span onclick="showClick(type_null)"><a href="#" onclick="return false" onblur="hideClick()" onmouseover="show('load - загрузить')" onmouseout="hide()">.load</a></span>( <span onclick="showClick(type_string)"><a href="#" onclick="return false" onblur="hideClick()" onmouseover="show('url - сокращ. англ. слов Uniform Resource Locator<br>- единообразный локатор (определитель<br>местонахождения) ресурса.')" onmouseout="hide()">url</a></span>, <span onclick="showClick(type_func)"><a href="#" onclick="return false" onblur="hideClick()" onmouseover="show('on load - на загрузку')" onmouseout="hide()">onLoad</a></span>, <span onclick="showClick(type_func)"><a href="#" onclick="return false" onblur="hideClick()" onmouseover="show('on progress - на ход процесса')" onmouseout="hide()">onProgress</a></span>, <span onclick="showClick(type_func)"><a href="#" onclick="return false" onblur="hideClick()" onmouseover="show('on error - на ошибку')" onmouseout="hide()">onError</a></span> )</pre>
<div class=list><tt>url</tt> —  строка, содержащая путь/URL-адрес <tt>.mtl</tt> файла.</div>
<div class=list><tt>onLoad</tt> — функция, которая будет вызвана после успешного завершения загрузки, дополнительный, необязательный параметр.
В качестве аргумента, эта функция получает загруженный экземпляр <tt>MTLLoader.MaterialCreator</tt>.</div>
<div class=list><tt>onProgress</tt> —  функция, которая будет вызываться пока идет процесс загрузки. Аргументом будет экземпляр XMLHttpRequest, что содержит сведения о загрузке <tt><span onclick="showClick(type_int)"><a href="#" onclick="return false" onblur="hideClick()" onmouseover="show('total - полный (размер ресурса)')" onmouseout="hide()">total</a></span></tt>
и <tt><span onclick="showClick(type_int)"><a href="#" onclick="return false" onblur="hideClick()" onmouseover="show('loaded - загружено, в данном случае<br>размер загруженного ресурса')" onmouseout="hide()">loaded</a></span></tt> в байтах.</div>
<div class=list><tt>onError</tt> — функция, которая будет вызвана в случае ошибки при загрузке, дополнительный, необязательный параметр. Функция принимает ошибку в качестве аргумента.</div>
Начинает загрузку с переданного url-адреса и возвращает загруженный материал.<br><br>

<pre id="3.3setPath"><span onclick="showClick(type_null)"><a href="#" onclick="return false" onblur="hideClick()" onmouseover="show('set path - установить путь')" onmouseout="hide()">.setPath</a></span>( <span onclick="showClick(type_string)"><a href="#" onclick="return false" onblur="hideClick()" onmouseover="show('path - путь')" onmouseout="hide()">path</a></span> )</pre>
<div class=list><tt>path</tt> — обязательный параметр.</div>
Устанавливает базовый путь для решающих ссылок. Если это установлено, этот путь будет добавлен к каждой загруженной и найденной ссылке.<br><br>

<pre id="3.3setTexturePath"><span onclick="showClick(type_null)"><a href="#" onclick="return false" onblur="hideClick()" onmouseover="show('set texture path - установить путь (к) текстуре')" onmouseout="hide()">.setTexturePath</a></span>( <span onclick="showClick(type_string)"><a href="#" onclick="return false" onblur="hideClick()" onmouseover="show('path - путь, контур')" onmouseout="hide()">path</a></span> )</pre>
<div class=list><tt>path</tt> — обязательный параметр.</div>
Устанавливает базовый путь для решающих ссылок к текстуре. Если он установлен, этот путь будет добавлен к каждой загруженной и найденной ссылке к текстуре.
Если не установлен, а <tt>setPath</tt> имеется, он будет использоваться в качестве базового пути к текстуре.<br><br>

<pre id="3.3setCrossOrigin"><span onclick="showClick(type_null)"><a href="#" onclick="return false" onblur="hideClick()" onmouseover="show('set cross origin - установить перекрестный источник')" onmouseout="hide()">.setCrossOrigin</a></span>( <span onclick="showClick(type_bool)"><a href="#" onclick="return false" onblur="hideClick()" onmouseover="show('use cross origin - использовать перекрестный источник')" onmouseout="hide()">useCrossOrigin</a></span> )</pre>
<div class=list><tt>useCrossOrigin</tt> — обязательный параметр.</div>
Установите значение <tt>true</tt>, если нужно загрузить текстуры из другого источника.<br><br>

<pre id="3.3setMaterialOptions"><span onclick="showClick(type_null)"><a href="#" onclick="return false" onblur="hideClick()" onmouseover="show('set material options - установить параметры материала')" onmouseout="hide()">.setMaterialOptions</a></span>( <span onclick="showClick(type_obj)"><a href="#" onclick="return false" onblur="hideClick()" onmouseover="show('options - опции, параметры, варианты')" onmouseout="hide()">options</a></span> )</pre>
<div class=list><tt>options</tt> — обязательный параметр.<br>
&nbsp; &#9679; &nbsp; <tt><span class="lnk" onmouseover="show('side - сторона')" onmouseout="hide()">side</span></tt>: сторона, к которой применяется материал.
<a href="constants.htm#5.1" onmouseover="show('front side - передняя сторона')" onmouseout="hide()">THREE.FrontSide</a> (значение по умолчанию),
<a href="constants.htm#5.1" onmouseover="show('back side - обратная (задняя) сторона')" onmouseout="hide()">THREE.BackSide</a>,
<a href="constants.htm#5.1" onmouseover="show('double side - две стороны')" onmouseout="hide()">THREE.DoubleSide</a><br>
&nbsp; &#9679; &nbsp; <tt><span class="lnk" onmouseover="show('wrap - упаковка, укладка')" onmouseout="hide()">wrap</span></tt>: тип укладки, применяемый для текстур.
<a href="constants.htm#7.2" onmouseover="show('repeat wrapping - повторяющаяся укладка<br>- текстура повторяется до бесконечности')" onmouseout="hide()">THREE.RepeatWrapping</a> (значение по умолчанию),
<a href="constants.htm#7.2" onmouseover="show('clamp to edge wrapping - укладка стыковать<br>с прикреплением к краю - укладка, при которой<br>последний пиксел текстуры растягивается<br>до края сетки (mesh)')" onmouseout="hide()">THREE.ClampToEdgeWrapping</a>,
<a href="constants.htm#7.2" onmouseover="show('mirrored repeat wrapping - повторяющася<br>укладка с зеркальным отражением - укладка<br>текстуры, при которой она повторяется<br>бесконечно, зеркально отображаясь при<br>каждом повторе')" onmouseout="hide()">THREE.MirroredRepeatWrapping</a>.<br>
&nbsp; &#9679; &nbsp; <tt><span class="lnk" onmouseover="show('normalize RGB - нормализовать значения RGB (компонентов цвета)')" onmouseout="hide()">normalizeRGB</span></tt>: компоненты RGB должны быть нормализованы до <tt>0-1</tt> из <tt>0-255</tt>. Значением по умолчанию является <tt>false</tt>, предполагается, что они уже нормализованы.<br>
&nbsp; &#9679; &nbsp; <tt><span class="lnk" onmouseover="show('ignore zero RGBs - игнорировать нулевые<br>(значения) RGB (компонентов цвета)')" onmouseout="hide()">ignoreZeroRGBs</span></tt>:
игнорировать значения в RGB формате (<tt><span class="lnk" onmouseover="show('цвет окружающего освещения')" onmouseout="hide()">Ka</span></tt>,
<tt><span class="lnk" onmouseover="show('диффузный цвет')" onmouseout="hide()">Kd</span></tt>, <tt><span class="lnk" onmouseover="show('цвет зеркального отражения')" onmouseout="hide()">Ks</span></tt>),
равные <tt>0</tt>. Значением по умолчанию является <tt>false</tt>.</div>
Устанавливает параметры построения материалов.<br><br>

<pre id="3.3parse"><span onclick="showClick('MTLLoaderMaterialCreator')"><a href="#" onclick="return false" onblur="hideClick()" onmouseover="show('parse - разбор, синтаксический анализ')" onmouseout="hide()">.parse</a></span>( <span onclick="showClick(type_string)"><a href="#" onclick="return false" onblur="hideClick()" onmouseover="show('text - текст')" onmouseout="hide()">text</a></span> )</pre>
<div class=list><tt>text</tt> — текстовая структура <tt>mtl</tt> для разбора (синтаксического анализа).</div>
Метод проводит синтаксический анализ текстовой структуры <tt>mtl</tt> и возвращает экземпляр <tt>MTLLoader.MaterialCreator</tt>.</div><br>

<h4>Исходники</h4>
<div class=blockindent><a href="https://github.com/mrdoob/three.js/blob/master/examples/js/loaders/MTLLoader.js" target="_blank">MTLLoader.js на github.com</a></div><br><br>


<h3 id="3.4">OBJLoader</h3>
Загрузчик для загрузки ресурсов в формате <em>obj</em>.<br>
<a href="https://en.wikipedia.org/wiki/Wavefront_.obj_file" target="_blank"  onmouseover="show('OBJ - сокращ. англ. слова object - объект')" onmouseout="hide()">Формат файла OBJ</a> - это простой формат данных,
представляющий трехмерную геометрию в удобочитаемой для человека форме, в виде положения каждой вершины, UV-координат позиции каждой текстуры, связанных с вершиной, нормалей вершин,
граней, образуемых каждым многоугольником, определяемым списком вершин, и вершин текстур.<br>
Статья Википедии <a href="https://ru.wikipedia.org/wiki/Obj" target="_blank">о формате obj</a> на русском языке.<br><br>

<h4>Пример</h4>
<pre>// instantiate a loader (создание экземпляра загрузчика)
var loader = new THREE.OBJLoader();<br>
// load a resource (загрузка ресурса)
loader.load(
  // resource URL (адрес ресурса)
  'models/monster.obj',
  // called when resource is loaded (вызывается по завершении загрузки)
  function ( object ) {
     scene.add( object );
  },<br>
  // called when loading is in progresses (вызывается во время загрузки)
  function ( xhr ) {
    console.log( ( xhr.loaded / xhr.total * 100 ) + '% loaded' );<br>
  },<br>
  // called when loading has errors (вызывается при ошибках в загрузке)
  function ( error ) {
     console.log( 'Произошла ошибка' );
  }
);</pre>
<h5>Другие примеры:</h5>
<pre><a href="https://threejs.org/examples/#webgl_loader_obj" target="_blank">webgl / loader / obj</a></pre><br>

<h4>Конструктор</h4>
<pre>OBJLoader( <a href="loaders.htm#16.2" onmouseover="show('LoadingManager.<br>manager - менеджер, управляющий')" onmouseout="hide()">manager</a> )</pre>
<div class=list><tt><a href="loaders.htm#16.2" onmouseover="show('LoadingManager.<br>manager - менеджер, управляющий')" onmouseout="hide()">manager</a></tt>
— <a href="loaders.htm#16.2" onmouseover="show('LoadingManager')" onmouseout="hide()">менеджер загрузки</a>, используемый для загрузки.
Значением по умолчанию является <a href="loaders.htm#16.2" onmouseover="show('LoadingManager')" onmouseout="hide()">THREE.DefaultLoadingManager</a>.</div>
Создает новый OBJLoader.<br><br>

<h4>Свойства</h4>
<br><br>

<h4>Методы</h4>
<div class=blockindent><br>
<pre id="3.4load"><span onclick="showClick(type_null)"><a href="#" onclick="return false" onblur="hideClick()" onmouseover="show('load - загрузить')" onmouseout="hide()">.load</a></span>( <span onclick="showClick(type_string)"><a href="#" onclick="return false" onblur="hideClick()" onmouseover="show('url - сокращ. англ. слов Uniform Resource Locator<br>- единообразный локатор (определитель<br>местонахождения) ресурса')" onmouseout="hide()">url</a></span>, <span onclick="showClick(type_func)"><a href="#" onclick="return false" onblur="hideClick()" onmouseover="show('on load - на загрузку')" onmouseout="hide()">onLoad</a></span>, <span onclick="showClick(type_func)"><a href="#" onclick="return false" onblur="hideClick()" onmouseover="show('on progress - на ход процесса')" onmouseout="hide()">onProgress</a></span>, <span onclick="showClick(type_func)"><a href="#" onclick="return false" onblur="hideClick()" onmouseover="show('on error - на ошибку')" onmouseout="hide()">onError</a></span> )</pre>
<div class=list><tt>url</tt> — строка, содержащая путь/URL-адрес <tt>obj</tt>-файла (обязательный аргумент).</div>
<div class=list><tt>onLoad</tt> — функция, которая будет вызвана после успешного завершения загрузки, дополнительный, необязательный параметр.
В качестве аргумента, эта функция получает загруженный <a href="core.htm#14" onmouseover="show('Object3D')" onmouseout="hide()">Object3D</a>.</div>
<div class=list><tt>onProgress</tt> - функция, которая будет вызываться пока идет процесс загрузки.
Аргументом будет экземпляр XMLHttpRequest, что содержит сведения о загрузке <tt><span onclick="showClick(type_int)"><a href="#" onclick="return false" onblur="hideClick()" onmouseover="show('total - полный (размер ресурса)')" onmouseout="hide()">total</a></span></tt>
и <tt><span onclick="showClick(type_int)"><a href="#" onclick="return false" onblur="hideClick()" onmouseover="show('loaded - загружено, в данном случае<br>размер загруженного ресурса')" onmouseout="hide()">loaded</a></span></tt> в байтах.</div>
<div class=list><tt>onError</tt> — функция, которая будет вызвана в случае ошибки при загрузке, дополнительный, необязательный параметр. Функция принимает ошибку в качестве аргумента.</div>
Начинает загрузку с URL-адреса и после её успешного завершения вызывает функцию, указанную в <tt>onLoad</tt>, с разобранным содержимым ответа.<br><br>

<pre id="3.4parse"><a href="core.htm#14" onmouseover="show('Object3D.<br>parse - разбор, синтаксический анализ')" onmouseout="hide()">.parse</a>( <span onclick="showClick(type_string)"><a href="#" onclick="return false" onblur="hideClick()" onmouseover="show('text - текст')" onmouseout="hide()">text</a></span> )</pre>
<div class=list><tt>text</tt> — текстовая структура <tt>obj</tt> для разбора (синтаксического анализа).</div>
Метод возвращает <a href="core.htm#14" onmouseover="show('Object3D')" onmouseout="hide()">Object3D</a>. Он содержит обработанные сетки в виде <a href="objects.htm#7" onmouseover="show('Mesh')" onmouseout="hide()">Mesh</a> и линии в виде <a href="objects.htm#5" onmouseover="show('LineSegments')" onmouseout="hide()">LineSegments</a>.<br>
Все геометрические элементы созданы как <a href="core.htm#2" onmouseover="show('BufferGeometry')" onmouseout="hide()">BufferGeometry</a>.
Материалы по умолчанию создаются как <a href="materials.htm#8" onmouseover="show('MeshPhongMaterial')" onmouseout="hide()">MeshPhongMaterial</a>.<br>
Если <tt>obj</tt>-объект или группа при объявлении граней используют несколько материалов, применяют массивы материалов и группы геометрических элементов.</div><br>

<h4>Исходники</h4>
<div class=blockindent><a href="https://github.com/mrdoob/three.js/blob/master/examples/js/loaders/OBJLoader.js" target="_blank">OBJLoader.js на github.com</a></div><br><br>


<h3 id="3.5">OBJLoader2</h3>
Загрузчик для загрузки ресурсов в формате <em>obj</em>.<br>
<a href="https://en.wikipedia.org/wiki/Wavefront_.obj_file" target="_blank"  onmouseover="show('OBJ - сокращ. англ. слова object - объект')" onmouseout="hide()">Формат файла OBJ</a> - это простой формат данных,
представляющий трехмерную геометрию в удобочитаемой для человека форме, в виде положения каждой вершины, UV-координат позиции каждой текстуры, связанных с вершиной, нормалей вершин,
граней, образуемых каждым многоугольником, определяемым списком вершин, и вершин текстур.<br>
Статья Википедии <a href="https://ru.wikipedia.org/wiki/Obj" target="_blank">о формате obj</a> на русском языке.<br><br>

<h4>Пример</h4>
<pre>// instantiate the loader (создание экземпляра загрузчика)
var loader = new THREE.OBJLoader2();<br>
// function called on successful load (вызывается по успешному завершению загрузки)
var callbackOnLoad = function ( event ) {
  scene.add( event.detail.loaderRootNode );
};<br>
// load a resource from provided URL synchronously
// синхронная загрузка ресурса из предоставленного URL-адреса
loader.load( 'obj/female02/female02.obj', callbackOnLoad, null, null, null, false );</pre>
<h5>Другие примеры:</h5>
<pre><a href="https://threejs.org/examples/#webgl_loader_obj2" target="_blank">webgl/loader/obj2</a> - простой пример
<a href="https://threejs.org/examples/#webgl_loader_obj2_options" target="_blank">webgl/loader/obj2/options</a> - пример нескольких вариантов использования (разбор, загрузка
                            и запуск с инструкциями (сихронно и асинхронно))
<a href="https://threejs.org/examples/#webgl_loader_obj2_run_director" target="_blank">webgl/loader/obj2/run/director</a> - расширенный пример с использованием <a href="#3.6.5" onmouseover="show('LoaderSupport.WorkerDirector')" onmouseout="hide()">WorkerDirector</a>
                                 для организации нескольких обработчиков</pre><br>

<h4>Конструктор</h4>
<pre>OBJLoader2( <a href="loaders.htm#16.2" onmouseover="show('LoadingManager.<br>manager - менеджер, управляющий')" onmouseout="hide()">manager</a>, <a href="#3.6.5" onmouseover="show('LoaderSupport.WorkerDirector.<br>logger - регистратор, логгер, самописец')" onmouseout="hide()">logger</a> )</pre>
<div class=list><tt>manager</tt> — <a href="loaders.htm#16.2" onmouseover="show('LoadingManager')" onmouseout="hide()">менеджер загрузки</a>, используемый для загрузки.
Значением по умолчанию является <a href="loaders.htm#16.2" onmouseover="show('LoadingManager')" onmouseout="hide()">THREE.DefaultLoadingManager</a>.</div>
<div class=list><tt>logger</tt> - используемый регистратор.</div>
Используйте OBJLoader2 для загрузки данных в формате OBJ из файлов или для синтаксического анализа OBJ-данных из текста или буферного массива.<br><br>

<h4>Свойства</h4>
<br><br>

<h4>Методы</h4>
<div class=blockindent><br>
<pre id="3.5parse"><a href="core.htm#14" onmouseover="show('Object3D.<br>parse - разбор, синтаксический анализ')" onmouseout="hide()">.parse</a>( {<span onclick="showClick('тип значения - буферный массив Uint8Array,<br>из 8-разрядных целых чисел без знака')"><a href="#" onclick="return false" onblur="hideClick()" onmouseover="show('content - содержимое')" onmouseout="hide()">content</a></span>|<span onclick="showClick(type_string)"><a href="#" onclick="return false" onblur="hideClick()" onmouseover="show('content - содержимое')" onmouseout="hide()">content</a></span>] )</pre>
<div class=list><tt>[content|content]</tt> - данные в формате OBJ в виде <span class="lnk" onmouseover="show('Uint8Array - массив из 8-разрядных целых чисел без знака')" onmouseout="hide()">Uint8Array</span> или <span class="lnk" onmouseover="show('String - строковое значение')" onmouseout="hide()">String</span>.</div>
Метод проводит синхронный синтаксический анализ данных в формате OBJ из буферного массива или строкового значения и возвращает loaderRoorNode.<br><br>

<pre id="3.5parseAsync"><a href="core.htm#14" onmouseover="show('Object3D.<br>parse async(hronously) - асинхронный разбор,<br>асинхронный синтаксический анализ')" onmouseout="hide()">.parseAsync</a>( <span onclick="showClick('тип значения - буферный массив Uint8Array,<br>из 8-разрядных целых чисел без знака')"><a href="#" onclick="return false" onblur="hideClick()" onmouseover="show('content - содержимое')" onmouseout="hide()">content</a></span>, <span onclick="showClick(type_func)"><a href="#" onclick="return false" onblur="hideClick()" onmouseover="show('on load - на загрузку')" onmouseout="hide()">onLoad</a></span> )</pre>
<div class=list><tt>content</tt> - данные в формате OBJ в виде <span class="lnk" onmouseover="show('Uint8Array - массив из 8-разрядных целых чисел без знака')" onmouseout="hide()">Uint8Array</span></div>
<div class=list><tt>onLoad</tt> - функция, которая будет вызвана после успешного завершения загрузки обработчиком.</div>
Метод проводит асинхронный синтаксический анализ данных в формате OBJ из буферного массива.<br><br>

<pre id="3.5load"><span onclick="showClick(type_null)"><a href="#" onclick="return false" onblur="hideClick()" onmouseover="show('load - загрузить')" onmouseout="hide()">.load</a></span>( <span onclick="showClick(type_string)"><a href="#" onclick="return false" onblur="hideClick()" onmouseover="show('url - сокращ. англ. слов Uniform Resource Locator<br>- единообразный локатор (определитель<br>местонахождения) ресурса')" onmouseout="hide()">url</a></span>, <span onclick="showClick(type_func)"><a href="#" onclick="return false" onblur="hideClick()" onmouseover="show('on load - на загрузку')" onmouseout="hide()">onLoad</a></span>, <span onclick="showClick(type_func)"><a href="#" onclick="return false" onblur="hideClick()" onmouseover="show('on progress - на ход процесса')" onmouseout="hide()">onProgress</a></span>, <span onclick="showClick(type_func)"><a href="#" onclick="return false" onblur="hideClick()" onmouseover="show('on error - на ошибку')" onmouseout="hide()">onError</a></span>, <span onclick="showClick(type_func)"><a href="#" onclick="return false" onblur="hideClick()" onmouseover="show('on mesh alter - на изменение сетки (mesh)')" onmouseout="hide()">onMeshAlter</a></span>, <span onclick="showClick(type_bool)"><a href="#" onclick="return false" onblur="hideClick()" onmouseover="show('use async - использовать асинхронную (загрузку)')" onmouseout="hide()">useAsync</a></span>  )</pre>
<div class=list><tt>url</tt> — строка, содержащая путь/URL-адрес загружаемого файла (обязательный аргумент).</div>
<div class=list><tt>onLoad</tt> — функция, которая будет вызвана после успешного завершения загрузки, дополнительный, необязательный параметр.
В качестве аргумента, эта функция получает загруженный <a href="core.htm#14" onmouseover="show('Object3D')" onmouseout="hide()">Object3D</a>.</div>
<div class=list><tt>onProgress</tt> - функция, которая будет вызываться пока идет процесс загрузки, дополнительный, необязательный параметр.
Аргументом будет экземпляр XMLHttpRequest, что содержит сведения о загрузке <tt><span onclick="showClick(type_int)"><a href="#" onclick="return false" onblur="hideClick()" onmouseover="show('total - полный (размер ресурса)')" onmouseout="hide()">total</a></span></tt>
и <tt><span onclick="showClick(type_int)"><a href="#" onclick="return false" onblur="hideClick()" onmouseover="show('loaded - загружено, в данном случае<br>размер загруженного ресурса')" onmouseout="hide()">loaded</a></span></tt> в байтах.</div>
<div class=list><tt>onError</tt> — функция, которая будет вызвана в случае ошибки при загрузке, дополнительный, необязательный параметр. Функция принимает ошибку в качестве аргумента.</div>
<div class=list><tt>onMeshAlter</tt> - функция, которая будет вызвана после того, как новые исходные данные сетки станут доступными для изменения. Дополнительный, необязательный параметр.</div>
<div class=list><tt>useAsync</tt> - Если установить значение <tt>true</tt>, будет использоваться асинхронная загрузка с обработчиком (worker), если установить <tt>false</tt>, то загрузка данных будет синхронной.
Дополнительный, необязательный параметр.</div>
Используйте этот удобный метод для загрузки файла по указанному URL-адресу. По умолчанию загрузчик файлов использует буферный массив.<br><br>

<pre id="3.5run"><span onclick="showClick(type_null)"><a href="#" onclick="return false" onblur="hideClick()" onmouseover="show('run - бежать, пускать')" onmouseout="hide()">.run</a></span>( <a href="#3.6.7" onmouseover="show('LoaderSupport.PrepData.<br>param(eter)s - параметры')" onmouseout="hide()">params</a>, <a href="#3.6.3" onmouseover="show('LoaderSupport.WorkerSupport')" onmouseout="hide()">workerSupportExternal</a> )</pre>
<div class=list><tt>params</tt> - <a href="#3.6.7" onmouseover="show('LoaderSupport.PrepData')" onmouseout="hide()">prepData</a>. Все параметры и ресурсы, требующиеся для исполнения.</div>
<div class=list><tt>workerSupportExternal</tt> - используется уже существующий <a href="#3.6.3" onmouseover="show('LoaderSupport.WorkerSupport')" onmouseout="hide()">WorkerSupport</a>.</div>
Метод запускает загрузчик в соответствии с предоставленными инструкциями.<br><br>

<pre id="3.5setLogging"><span onclick="showClick(type_null)"><a href="#" onclick="return false" onblur="hideClick()" onmouseover="show('set logging - установить ведение журнала (логирование)')" onmouseout="hide()">.setLogging</a></span>( <span onclick="showClick(type_bool)"><a href="#" onclick="return false" onblur="hideClick()" onmouseover="show('enabled - включено')" onmouseout="hide()">enabled</a></span>, <span onclick="showClick(type_bool)"><a href="#" onclick="return false" onblur="hideClick()" onmouseover="show('debug - отладка')" onmouseout="hide()">debug</a></span> )</pre>
<div class=list><tt>enabled</tt> - логическое значение (<tt>true</tt> или <tt>false</tt>).</div>
<div class=list><tt>debug</tt> - логическое значение (<tt>true</tt> или <tt>false</tt>).</div>
Метод включает или отключает логирование (ведение журнала) в целом (за исключением предупреждений и ошибок), а также включает или отключает ведение журнала отладки.<br><br>

<pre id="3.5setModelName"><span onclick="showClick(type_null)"><a href="#" onclick="return false" onblur="hideClick()" onmouseover="show('set model name - установить название модели')" onmouseout="hide()">.setModelName</a></span>( <span onclick="showClick(type_string)"><a href="#" onclick="return false" onblur="hideClick()" onmouseover="show('model name - название модели')" onmouseout="hide()">modelName</a></span> )</pre>
<div class=list><tt>modelName</tt></div>
Метод устанавливает название (имя) модели.<br><br>

<pre id="3.5setPath"><span onclick="showClick(type_null)"><a href="#" onclick="return false" onblur="hideClick()" onmouseover="show('set path - установить путь')" onmouseout="hide()">.setPath</a></span>( <span onclick="showClick(type_string)"><a href="#" onclick="return false" onblur="hideClick()" onmouseover="show('path - путь, контур')" onmouseout="hide()">path</a></span> )</pre>
<div class=list><tt>path</tt> - URL-адрес.</div>
Метод устанавливает URL-адрес основного пути.<br><br>

<pre id="3.5setStreamMeshesTo"><span onclick="showClick(type_null)"><a href="#" onclick="return false" onblur="hideClick()" onmouseover="show('set stream meshes to - установить поток сеток к')" onmouseout="hide()">.setStreamMeshesTo</a></span>( <a href="core.htm#14" onmouseover="show('Object3D.<br>stream meshes to - поток сеток к')" onmouseout="hide()">streamMeshesTo</a> )</pre>
<div class=list><tt>streamMeshesTo</tt> - объект, уже закрепленный к сцене, к которому будут присоединяться новые сетки.</div>
Метод устанавливает узел к которому непосредственно будут закреплены объекты.<br><br>

<pre id="3.5setMaterials"><span onclick="showClick(type_null)"><a href="#" onclick="return false" onblur="hideClick()" onmouseover="show('set materials - установить материалы')" onmouseout="hide()">.setMaterials</a></span>( <a href="materials.htm#3" onmouseover="show('Material.<br>array of materials - массив материалов')" onmouseout="hide()">Array of materials</a> )</pre>
<div class=list><tt>Array of materials</tt> - массив материалов.</div>
Устанавливает материалы, загруженные с помощью <a href="#3.3" onmouseover="show('MTLLoader')" onmouseout="hide()">MTLLoader</a> или любого другого поставщика массива материалов.<br><br>

<pre id="3.5setUseIndices"><span onclick="showClick(type_null)"><a href="#" onclick="return false" onblur="hideClick()" onmouseover="show('set use indices - установить использование индексов')" onmouseout="hide()">.setUseIndices</a></span>( <span onclick="showClick(type_bool)"><a href="#" onclick="return false" onblur="hideClick()" onmouseover="show('use indices - использовать индексы')" onmouseout="hide()">useIndices</a></span> )</pre>
<div class=list><tt>useIndices</tt> - логическое значение.</div>
Метод поручает загрузчикам создавать индексированную <a href="core.htm#2" onmouseover="show('BufferGeometry')" onmouseout="hide()">BufferGeometry</a>.<br><br>

<pre id="3.5setDisregardNormals"><span onclick="showClick(type_null)"><a href="#" onclick="return false" onblur="hideClick()" onmouseover="show('set disregard normals - установить пренебрежение нормалями')" onmouseout="hide()">.setDisregardNormals</a></span>( <span onclick="showClick(type_bool)"><a href="#" onclick="return false" onblur="hideClick()" onmouseover="show('disregard normals - игнорировать нормали')" onmouseout="hide()">disregardNormals</a></span> )</pre>
<div class=list><tt>disregardNormals</tt> - логическое значение.</div>
Метод указывает, следует ли полностью проигнорировать и восстановить нормали.<br><br>

<pre id="3.5setMaterialPerSmoothingGroup"><span onclick="showClick(type_null)"><a href="#" onclick="return false" onblur="hideClick()" onmouseover="show('set material per smoothing group - установить материал для каждой сглаживающей группы')" onmouseout="hide()">.setMaterialPerSmoothingGroup</a></span>( <span onclick="showClick(type_bool)"><a href="#" onclick="return false" onblur="hideClick()" onmouseover="show('material per smoothing group - материал для каждой сглаживающей группы')" onmouseout="hide()">materialPerSmoothingGroup</a></span> )</pre>
<div class=list><tt>materialPerSmoothingGroup</tt></div>
Метод указывает, должен ли для каждой сглаживающей группы создаваться материал.<br><br>

<pre id="3.5onProgress"><span onclick="showClick(type_null)"><a href="#" onclick="return false" onblur="hideClick()" onmouseover="show('on progress - на ход процесса')" onmouseout="hide()">.onProgress</a></span>( <span onclick="showClick(type_string)"><a href="#" onclick="return false" onblur="hideClick()" onmouseover="show('type - тип')" onmouseout="hide()">type</a></span>, <span onclick="showClick(type_string)"><a href="#" onclick="return false" onblur="hideClick()" onmouseover="show('text - текст')" onmouseout="hide()">text</a></span>, <span onclick="showClick(type_number)"><a href="#" onclick="return false" onblur="hideClick()" onmouseover="show('numerical value - числовое значение')" onmouseout="hide()">numericalValue</a></span> )</pre>
<div class=list><tt>type</tt> - тип события.</div>
<div class=list><tt>text</tt> - текстовое описание события.</div>
<div class=list><tt>numericalValue</tt> - числовое значение, характеризующее ход процесса.</div>
Объявление обратной связи, которая задается зарегистрированной <a href="#3.6.8" onmouseover="show('LoaderSupport.Callbacks')" onmouseout="hide()">LoaderSupport.Callbacks</a>.<br><br>

<pre id="3.5loadMtl"><span onclick="showClick(type_null)"><a href="#" onclick="return false" onblur="hideClick()" onmouseover="show('load MTL - загрузить (файл в формате MTL)')" onmouseout="hide()">.loadMtl</a></span>( <span onclick="showClick(type_string)"><a href="#" onclick="return false" onblur="hideClick()" onmouseover="show('url - сокращ. англ. слов Uniform Resource Locator<br>- единообразный локатор (определитель<br>местонахождения) ресурса')" onmouseout="hide()">url</a></span>, <span onclick="showClick(type_obj)"><a href="#" onclick="return false" onblur="hideClick()" onmouseover="show('content - содержимое')" onmouseout="hide()">content</a></span>, <span onclick="showClick(type_func)"><a href="#" onclick="return false" onblur="hideClick()" onmouseover="show('callback on load - функция обратного<br>вызова (по окончании) загрузки')" onmouseout="hide()">callbackOnLoad</a></span>, <span onclick="showClick(type_string)"><a href="#" onclick="return false" onblur="hideClick()" onmouseover="show('cross origin - перекрестный источник')" onmouseout="hide()">crossOrigin</a></span>, <span onclick="showClick(type_obj)"><a href="#" onclick="return false" onblur="hideClick()" onmouseover="show('material options - параметры материала')" onmouseout="hide()">materialOptions</a></span> )</pre>
<div class=list><tt>url</tt> - URL-адрес файла.</div>
<div class=list><tt>content</tt> - содержимое файла в виде буферного массива (arraybuffer) или текста.</div>
<div class=list><tt>callbackOnLoad</tt> - функция обратного вызова, которая будет вызвана после успешной загрузки.</div>
<div class=list><tt>crossOrigin</tt> - значение <a href="https://ru.wikipedia.org/wiki/Cross-origin_resource_sharing" target="_blank" onmouseover="show('CORS - сокращ. англ. слов cross-origin resource sharing<br>- совместное использование ресурсов между разными<br>источниками — технология современных браузеров, которая<br>позволяет предоставить веб-странице доступ к ресурсам<br>другого домена')" onmouseout="hide()">CORS</a>. Дополнительный, необязательный аргумент.</div>
<div class=list><tt>materialOptions</tt> - устанавливает параметры загрузки материала для <a href="#3.3" onmouseover="show('MTLLoader')" onmouseout="hide()">MTLLoader</a>. Дополнительный, необязательный аргумент.</div>
Вспомогательный метод для загрузки файла в формате <tt>mtl</tt> согласно описанию ресурса. Укажите <tt>url</tt> (URL-адрес) или <tt>content</tt> (содержимое файла).</div><br>

<h4>Исходники</h4>
<div class=blockindent><a href="https://github.com/mrdoob/three.js/blob/master/examples/js/loaders/OBJLoader2.js" target="_blank">OBJLoader2.js на github.com</a></div><br><br>


<h3 id="3.6">LoaderSupport</h3>
Вспомогательные классы для загрузчиков файлов и веб обработчиков на основе загрузчиков.<br><br>
<h4>Подклассы</h4>
<pre><a href="#3.6.1" onmouseover="show('LoaderSupport.Builder')" onmouseout="hide()">LoaderSupport.Builder</a>
<a href="#3.6.2" onmouseover="show('LoaderSupport.LoadedMeshUserOverride')" onmouseout="hide()">LoaderSupport.LoadedMeshUserOverride</a>
<a href="#3.6.3" onmouseover="show('LoaderSupport.WorkerSupport')" onmouseout="hide()">LoaderSupport.WorkerSupport</a>
<a href="#3.6.4" onmouseover="show('LoaderSupport.WorkerRunnerRefImpl')" onmouseout="hide()">LoaderSupport.WorkerRunnerRefImpl</a>
<a href="#3.6.5" onmouseover="show('LoaderSupport.WorkerDirector')" onmouseout="hide()">LoaderSupport.WorkerDirector</a>
<a href="#3.6.6" onmouseover="show('LoaderSupport.LoaderBase')" onmouseout="hide()">LoaderSupport.ResourceDescriptor</a>
<a href="#3.6.7" onmouseover="show('LoaderSupport.PrepData')" onmouseout="hide()">LoaderSupport.PrepData</a>
<a href="#3.6.8" onmouseover="show('LoaderSupport.Callbacks')" onmouseout="hide()">LoaderSupport.Callbacks</a>
<a href="#3.6.9" onmouseover="show('LoaderSupport.Validator')" onmouseout="hide()">LoaderSupport.Validator</a></pre>

<h4>Пример</h4>
<tt><a href="https://threejs.org/examples/#webgl_loader_obj2_meshspray" target="_blank">webgl / loader / obj2 / meshspray</a></tt>
- пример использования <tt><a href="#3.6.5" onmouseover="show('LoaderSupport.WorkerDirector')" onmouseout="hide()">LoaderSupport.WorkerDirector</a></tt> и <tt><a href="#3.6.3" onmouseover="show('LoaderSupport.WorkerSupport')" onmouseout="hide()">LoaderSupport.WorkerSupport</a></tt>.<br><br>


<h3 id="3.6.1">Builder</h3>

<h4>Конструктор</h4>
<pre>Builder( )</pre>
Создает одну или несколько сеток из одного необработанного (исходного) набора буферных массивов, описаний групп материалов и последующих параметров. Поддерживаются буферы вершин, цвета вершин, нормалей, UV-координат и индексов.<br><br>

<h4>Методы</h4>
<div class=blockindent><br>
<pre id="3.6.1setLogging"><span onclick="showClick(type_null)"><a href="#" onclick="return false" onblur="hideClick()" onmouseover="show('set logging - установка ведения журнала (логирования)')" onmouseout="hide()">.setLogging</a></span>( <span onclick="showClick(type_bool)"><a href="#" onclick="return false" onblur="hideClick()" onmouseover="show('enabled - включено')" onmouseout="hide()">enabled</a></span>, <span onclick="showClick(type_bool)"><a href="#" onclick="return false" onblur="hideClick()" onmouseover="show('debug - отладка')" onmouseout="hide()">debug</a></span> )</pre>
<div class=list><tt>enabled</tt> - логическое значение - <tt>true</tt> или <tt>false</tt>.</div>
<div class=list><tt>debug</tt> - логическое значение - <tt>true</tt> или <tt>false</tt>.</div>
Метод включает или отключает ведение журнала (логирование) в общем (за исключением предупреждений и ошибок), плюс включает или отключает логирование ошибок.<br><br>

<pre id="3.6.1init"><span onclick="showClick(type_null)"><a href="#" onclick="return false" onblur="hideClick()" onmouseover="show('init - сокращ. англ. слова initialize - инициализация')" onmouseout="hide()">.init</a></span>( )</pre>
Инициализирует сборщик (Builder) (на настоящий момент только инициализация материала по умолчанию).<br><br>

<pre id="3.6.1setMaterials"><span onclick="showClick(type_null)"><a href="#" onclick="return false" onblur="hideClick()" onmouseover="show('set materials - установить материалы')" onmouseout="hide()">.setMaterials</a></span>( <a href="materials.htm#3" onmouseover="show('Material.<br>array of materials - массив материалов')" onmouseout="hide()">Array of materials</a> )</pre>
<div class=list><tt>Array of materials</tt> - массив <a href="materials.htm#3" onmouseover="show('Material')" onmouseout="hide()">материалов</a>.</div>
Устанавливает материалы, загруженные любым загрузчиком из массива материалов.<br><br>

<pre id="3.6.1processPayload"><span onclick="showClick(type_array)"><a href="#" onclick="return false" onblur="hideClick()" onmouseover="show('process payload - обработать полезную нагрузку')" onmouseout="hide()">.processPayload</a></span>( <span onclick="showClick(type_obj)"><a href="#" onclick="return false" onblur="hideClick()" onmouseover="show('payload - полезная нагрузка')" onmouseout="hide()">payload</a></span> )</pre>
<div class=list><tt>payload</tt> - необработанные описания сетки (Mesh) или материала (Material).</div>
Делегирует обработку полезной нагрузки (построение сетки или обновление материала) соответствующим функциям (BW-совместимость).<br><br>

<pre id="3.6.1buildMeshes"><span onclick="showClick(type_array)"><a href="#" onclick="return false" onblur="hideClick()" onmouseover="show('build meshes - построить сетки')" onmouseout="hide()">.buildMeshes</a></span>( <span onclick="showClick(type_obj)"><a href="#" onclick="return false" onblur="hideClick()" onmouseover="show('mesh payload - полезная нагрузка сетки')" onmouseout="hide()">meshPayload</a></span> )</pre>
<div class=list><tt>meshPayload</tt> - необработанное описание сетки (буферы, параметры, материалы), используемые для построения одной или нескольких сеток.</div>
Создает одну или несколько сеток из данных, описанных в полезной нагрузке (сведения о буферах, параметрах, материале).<br><br>

<pre id="3.6.1updateMaterials"><span onclick="showClick(type_null)"><a href="#" onclick="return false" onblur="hideClick()" onmouseover="show('update materials - обновление материалов')" onmouseout="hide()">.updateMaterials</a></span>( <span onclick="showClick(type_obj)"><a href="#" onclick="return false" onblur="hideClick()" onmouseover="show('material payload - полезная нагрузка материала')" onmouseout="hide()">materialPayload</a></span> )</pre>
<div class=list><tt>materialPayload</tt> - инструкции по обновлению материала.</div>
Обновляет материалы с объектами, содержащими материал, (синхронно) или с инструкциями по изменению (асинхронно).<br><br>

<pre id="3.6.1getMaterialsJSON"><span onclick="showClick(type_obj)"><a href="#" onclick="return false" onblur="hideClick()" onmouseover="show('get materials JSON - получить материалы в формате JSON')" onmouseout="hide()">.getMaterialsJSON</a></span>( )</pre>
Возвращает объект, сопоставленный с названием материала и соответствующий материал в формате JSON.<br><br>

<pre id="3.6.1getMaterials"><span onclick="showClick(type_obj)"><a href="#" onclick="return false" onblur="hideClick()" onmouseover="show('get materials - получить материалы')" onmouseout="hide()">.getMaterials</a></span>( )</pre>
Возвращает объект, сопоставленный с названием материала и соответствующий материал.</div><br>


<h3 id="3.6.2">LoadedMeshUserOverride</h3>

<h4>Конструктор</h4>
<pre>LoadedMeshUserOverride( <span onclick="showClick(type_bool)"><a href="#" onclick="return false" onblur="hideClick()" onmouseover="show('disregard mesh - игнорировать сетку')" onmouseout="hide()">disregardMesh</a></span>, <a href="core.htm#2" onmouseover="show('BufferGeometry')" onmouseout="hide()">bufferGeometry</a> )</pre>
<div class=list><tt>disregardMesh</tt> - указывает реализации о полном игнорировании этой сетки.</div>
<div class=list><tt>alteredMesh</tt> - указывает реализации что сетка/сетки была изменена или добавлена.</div>
Объект, возвращаемый функцией обратного вызова <a href="#3.6.8setCallbackOnMeshAlter" onmouseover="show('Callbacks.setCallbackOnMeshAlter')" onmouseout="hide()">на изменение сетки</a>. Используется для игнорирования определенной сетки или для возврата одной или нескольких сеток.<br><br>

<h4>Методы</h4>
<div class=blockindent><br>
<pre id="3.6.2addMesh"><span onclick="showClick(type_null)"><a href="#" onclick="return false" onblur="hideClick()" onmouseover="show('add mesh - добавить сетку')" onmouseout="hide()">.addMesh</a></span>( mesh )</pre>
<div class=list><tt>mesh</tt> - <a href="objects.htm#7" onmouseover="show('Mesh')" onmouseout="hide()">сетка</a></div>
Добавляет сетку, созданную внутри функции обратного вызова.<br><br>

<pre id="3.6.2isDisregardMesh"><span onclick="showClick(type_bool)"><a href="#" onclick="return false" onblur="hideClick()" onmouseover="show('is disregard mesh - является игнорируемой сеткой')" onmouseout="hide()">.isDisregardMesh</a></span>( )</pre>
Отвечает, если сетка должна быть полностью проигнорирована.<br><br>

<pre id="3.6.2providesAlteredMeshes"><span onclick="showClick(type_bool)"><a href="#" onclick="return false" onblur="hideClick()" onmouseover="show('provides altered meshes - предоставлять измененные сетки')" onmouseout="hide()">.providesAlteredMeshes</a></span>( )</pre>
Отвечает, если была создана новая сетка/сетки.</div><br>


<h3 id="3.6.3">WorkerSupport</h3>

<h4>Конструктор</h4>
<pre>WorkerSupport( )</pre>
Этот класс предоставляет средства для преобразования существующего кода синтаксического анализатора (парсера) в веб обработчика.
Он определяет простой протокол связи, который позволяет настроить обработчика и во время выполнения принять необработанные данные сетки (mesh).<br><br>

<h4>Методы</h4>
<div class=blockindent><br>
<pre id="3.6.3setLogging"><span onclick="showClick(type_null)"><a href="#" onclick="return false" onblur="hideClick()" onmouseover="show('set logging - установить ведение журнала (логирование)')" onmouseout="hide()">.setLogging</a></span>( <span onclick="showClick(type_bool)"><a href="#" onclick="return false" onblur="hideClick()" onmouseover="show('enabled - включено')" onmouseout="hide()">enabled</a></span>, <span onclick="showClick(type_bool)"><a href="#" onclick="return false" onblur="hideClick()" onmouseover="show('debug - отладка')" onmouseout="hide()">debug</a></span> )</pre>
<div class=list><tt>enabled</tt> - логическое значение - <tt>true</tt> или <tt>false</tt>.</div>
<div class=list><tt>debug</tt> - логическое значение - <tt>true</tt> или <tt>false</tt>.</div>
Метод включает или отключает ведение журнала (логирование) вообще (за исключением предупреждений и ошибок), плюс включает или отключает логирование ошибок.<br><br>

<pre id="3.6.3setForceWorkerDataCopy"><span onclick="showClick(type_null)"><a href="#" onclick="return false" onblur="hideClick()" onmouseover="show('set force worker data copy - установить принудительное копирование данных обработчика')" onmouseout="hide()">.setForceWorkerDataCopy</a></span>( <span onclick="showClick(type_bool)"><a href="#" onclick="return false" onblur="hideClick()" onmouseover="show('force worker data copy - принудительное копирование данных обработчика')" onmouseout="hide()">forceWorkerDataCopy</a></span> )</pre>
<div class=list><tt>forceWorkerDataCopy</tt> - логическое значение - <tt>true</tt> или <tt>false</tt>.</div>
Принудительно передает все буферы массивов обработчикам для копирования.<br><br>

<pre id="3.6.3validate"><span onclick="showClick(type_null)"><a href="#" onclick="return false" onblur="hideClick()" onmouseover="show('validate - проверка')" onmouseout="hide()">.validate</a></span>( <span onclick="showClick(type_func)"><a href="#" onclick="return false" onblur="hideClick()" onmouseover="show('function code builder - ')" onmouseout="hide()">functionCodeBuilder</a></span>, <span onclick="showClick(type_string)"><a href="#" onclick="return false" onblur="hideClick()" onmouseover="show('array of lib(rary) locations - массив расположений библиотек')" onmouseout="hide()">Array of libLocations</a></span>, <span onclick="showClick(type_string)"><a href="#" onclick="return false" onblur="hideClick()" onmouseover="show('lib(rary) path - путь к библиотеке')" onmouseout="hide()">libPath</a></span>, <a href="#3.6.4" onmouseover="show('LoaderSupport.WorkerRunnerRefImpl')" onmouseout="hide()">runnerImpl</a> )</pre>
<div class=list><tt>functionCodeBuilder</tt> - функция, которая вызывается с <tt>funcBuildObject</tt> и <tt>funcBuildSingelton</tt>, что позволяет превращать в строку код объектов и
<a href="https://ru.wikipedia.org/wiki/%D0%9E%D0%B4%D0%B8%D0%BD%D0%BE%D1%87%D0%BA%D0%B0_(%D1%88%D0%B0%D0%B1%D0%BB%D0%BE%D0%BD_%D0%BF%D1%80%D0%BE%D0%B5%D0%BA%D1%82%D0%B8%D1%80%D0%BE%D0%B2%D0%B0%D0%BD%D0%B8%D1%8F)" target="_blank" onmouseover="show('singleton - одиночка,- класс, у которого имеется только один экземпляр')" onmouseout="hide()">синглтонов</a>.</div>
<div class=list><tt>Array of libLocations</tt> - URL-адрес библиотек, которые должны быть добавлены к рабочему коду относительно пути, переданном в аргументе <tt>libPath</tt>.</div>
<div class=list><tt>libPath</tt> - базовый путь, используемый для загрузки библиотек.</div>
<div class=list><tt>runnerImpl</tt> - реализация оболочки парсера обработчика по умолчанию (соединение и исполнение). Здесь может быть передан расширенный класс.</div>
Проверяет состояние рабочего кода и полученного обработчика.<br><br>

<pre id="3.6.3setTerminateRequested"><span onclick="showClick(type_null)"><a href="#" onclick="return false" onblur="hideClick()" onmouseover="show('set terminate requested - установить завершение запроса')" onmouseout="hide()">.setTerminateRequested</a></span>( <span onclick="showClick(type_bool)"><a href="#" onclick="return false" onblur="hideClick()" onmouseover="show('terminate requested - завершение запроса')" onmouseout="hide()">terminateRequested</a></span> )</pre>
<div class=list><tt>terminateRequested</tt> - логическое значение - <tt>true</tt> или <tt>false</tt>.</div>
Запрашивает прекращение обработчика после завершения работы синтаксического анализатора (парсера).<br><br>

<pre id="3.6.3setCallbacks"><span onclick="showClick(type_null)"><a href="#" onclick="return false" onblur="hideClick()" onmouseover="show('set callbacks - установить функции обратного вызова')" onmouseout="hide()">.setCallbacks</a></span>( <span onclick="showClick(type_func)"><a href="#" onclick="return false" onblur="hideClick()" onmouseover="show('builder - сборщик, строитель')" onmouseout="hide()">builder</a></span>, <span onclick="showClick(type_func)"><a href="#" onclick="return false" onblur="hideClick()" onmouseover="show('on load - на загрузку')" onmouseout="hide()">onLoad</a></span> )</pre>
<div class=list><tt>builder</tt> - функция сборки. По умолчанию это <a href="#3.6.1" onmouseover="show('LoaderSupport.Builder')" onmouseout="hide()">LoaderSupport.Builder</a>.</div>
<div class=list><tt>onLoad</tt> - функция, вызываемая по завершению синтаксического анализа (парсинга).</div>
Определяет функцию, которая должна выполнить сборку, когда станут доступными новые исходные данные сетки, и функцию, вызываемую по завершению синтаксического анализа (парсинга).<br><br>

<pre id="3.6.3run"><span onclick="showClick(type_null)"><a href="#" onclick="return false" onblur="hideClick()" onmouseover="show('run - бежать, запускать')" onmouseout="hide()">.run</a></span>( <span onclick="showClick(type_obj)"><a href="#" onclick="return false" onblur="hideClick()" onmouseover="show('payload - полезная нагрузка')" onmouseout="hide()">payload</a></span> )</pre>
<div class=list><tt>payload</tt> - необработанное описание сетки (mesh) (буферы, параметры, материалы), используемые для построения одной или нескольких сеток.</div>
Запускает в работу синтаксический анализатор (парсер) с предоставленными настройками.</div><br>


<h3 id="3.6.4">WorkerRunnerRefImpl</h3>

<h4>Конструктор</h4>
<pre>WorkerRunnerRefImpl( )</pre>
Реализация по умолчанию WorkerRunner, ответственного за создание и настройку парсера внутри обработчика.<br><br>

<h4>Методы</h4>
<div class=blockindent><br>
<pre id="3.6.4applyProperties"><span onclick="showClick(type_null)"><a href="#" onclick="return false" onblur="hideClick()" onmouseover="show('apply properties - применить свойства')" onmouseout="hide()">.applyProperties</a></span>( <span onclick="showClick(type_obj)"><a href="#" onclick="return false" onblur="hideClick()" onmouseover="show('parser - парсер, синтаксический анализатор, разборщик')" onmouseout="hide()">parser</a></span>, <span onclick="showClick(type_obj)"><a href="#" onclick="return false" onblur="hideClick()" onmouseover="show('params - сокращ. англ. слова parameters - параметры')" onmouseout="hide()">params</a></span> )</pre>
<div class=list><tt>parser</tt> - экземпляр синтаксического анализатора.</div>
<div class=list><tt>params</tt> - объект с параметрами.</div>
Метод применяет значения из объекта <tt>params</tt> с помощью набора функций или через прямое присваивание.<br><br>

<pre id="3.6.4run"><span onclick="showClick(type_null)"><a href="#" onclick="return false" onblur="hideClick()" onmouseover="show('run - запустить')" onmouseout="hide()">.run</a></span>( <span onclick="showClick(type_obj)"><a href="#" onclick="return false" onblur="hideClick()" onmouseover="show('payload - полезная нагрузка')" onmouseout="hide()">payload</a></span> )</pre>
<div class=list><tt>payload</tt> - необработанное описание сетки (mesh) (буферы, параметры, материалы), используемые для построения одной или нескольких сеток.</div>
Настраивает реализацию синтаксического анализатора (парсера) в соответствии с предоставленным объектом конфигурации.</div><br>

<h3 id="3.6.5">WorkerDirector</h3>

<h4>Конструктор</h4>
<pre>WorkerDirector( <span onclick="showClick(type_string)"><a href="#" onclick="return false" onblur="hideClick()" onmouseover="show('class def - сокращ. англ. слов class definition - определение класса')" onmouseout="hide()">classDef</a></span> )</pre>
<div class=list><tt>classDef</tt> - определение класса, используемого для построения</div>
Организует загрузку нескольких OBJ-файлов/данных исходя из очереди инструкций (команд) с настраиваемым числом обработчиков (<tt>1-16</tt>).
<div class=blockindent>Последовательность операций:<br>
&nbsp;- подготовка обработчиков (<tt>prepareWorkers</tt>)<br>
&nbsp;- постановка в очередь на запуск (<tt>enqueueForRun</tt>)<br>
&nbsp;- обработка очереди (<tt>processQueue</tt>)<br>
&nbsp;- прекращение работы (<tt>tearDown</tt>)</div><br>

<h4>Методы</h4>
<div class=blockindent><br>
<pre id="3.6.5setLogging"><span onclick="showClick(type_null)"><a href="#" onclick="return false" onblur="hideClick()" onmouseover="show('set logging - установить ведение журнала (логирование)')" onmouseout="hide()">.setLogging</a></span>( <span onclick="showClick(type_bool)"><a href="#" onclick="return false" onblur="hideClick()" onmouseover="show('enabled - включено')" onmouseout="hide()">enabled</a></span>, <span onclick="showClick(type_bool)"><a href="#" onclick="return false" onblur="hideClick()" onmouseover="show('debug - отладка')" onmouseout="hide()">debug</a></span> )</pre>
<div class=list><tt>enabled</tt> - логическое значение - <tt>true</tt> или <tt>false</tt>.</div>
<div class=list><tt>debug</tt> - логическое значение - <tt>true</tt> или <tt>false</tt>.</div>
Метод включает или отключает ведение журнала (логирование) вообще (за исключением предупреждений и ошибок), плюс включает или отключает логирование ошибок.<br><br>

<pre id="3.6.5setForceWorkerDataCopy"><span onclick="showClick(type_null)"><a href="#" onclick="return false" onblur="hideClick()" onmouseover="show('set force worker data copy - установить принудительное копирование данных обработчика')" onmouseout="hide()">.setForceWorkerDataCopy</a></span>( <span onclick="showClick(type_bool)"><a href="#" onclick="return false" onblur="hideClick()" onmouseover="show('force worker data copy - принудительное копирование данных обработчика')" onmouseout="hide()">forceWorkerDataCopy</a></span> )</pre>
<div class=list><tt>forceWorkerDataCopy</tt> - логическое значение - <tt>true</tt> или <tt>false</tt>.</div>
Принудительно передает все буферы массивов обработчикам для копирования.<br><br>

<pre id="3.6.5prepareWorkers"><span onclick="showClick(type_null)"><a href="#" onclick="return false" onblur="hideClick()" onmouseover="show('prepare workers - подготовка обработчиков')" onmouseout="hide()">.prepareWorkers</a></span>( <a href="#3.6.8" onmouseover="show('WWOBJLoader2.Callbacks')" onmouseout="hide()">globalCallbacks</a>, <span onclick="showClick(type_number)"><a href="#" onclick="return false" onblur="hideClick()" onmouseover="show('max queue size - максимальный размер очереди')" onmouseout="hide()">maxQueueSize</a></span>, <span onclick="showClick(type_number)"><a href="#" onclick="return false" onblur="hideClick()" onmouseover="show('max web workers - максимум веб обработчиков')" onmouseout="hide()">maxWebWorkers</a></span> )</pre>
<div class=list><tt>globalCallbacks</tt> - реестр (список) глобальных (общих) функций обратного вызова, используемых всеми веб обработчиками.</div>
<div class=list><tt>maxQueueSize</tt> - установка максимального размера очереди  инструкций (команд) (от <tt>1</tt> до <tt>1024</tt>).</div>
<div class=list><tt>maxWebWorkers</tt> - установка максимального числа обработчиков (от <tt>1</tt> до <tt>16</tt>).</div>
Создает или удаляет обработчики в соответствии с ограничениями. Устанавливает название и регистрирует функции обратного вызова для динамического создания веб обработчиков.<br><br>

<pre id="3.6.5enqueueForRun"><span onclick="showClick(type_null)"><a href="#" onclick="return false" onblur="hideClick()" onmouseover="show('enqueue for run - постановка в очередь')" onmouseout="hide()">.enqueueForRun</a></span>( <a href="#3.6.7" onmouseover="show('LoaderSupport.PrepData.<br>run params - параметры запуска')" onmouseout="hide()">runParams</a> )</pre>
<div class=list><tt>runParams</tt></div>
Сохраняет инструкции запуска во внутренней <tt>instructionQueue</tt> - очереди инструкций.<br><br>

<pre id="3.6.5processQueue"><span onclick="showClick(type_null)"><a href="#" onclick="return false" onblur="hideClick()" onmouseover="show('process queue - обработать очередь')" onmouseout="hide()">.processQueue</a></span>( )</pre>
Метод обрабатывает очередь инструкций (команд) пока она не закончится.<br><br>

<pre id="3.6.5tearDown"><span onclick="showClick(type_null)"><a href="#" onclick="return false" onblur="hideClick()" onmouseover="show('tear down - сорвать, снести, разорвать, разрушить')" onmouseout="hide()">.tearDown</a></span>( <span onclick="showClick(type_func)"><a href="#" onclick="return false" onblur="hideClick()" onmouseover="show('callback on finished processing - функция повторного вызова на завершение обработки')" onmouseout="hide()">callbackOnFinishedProcessing</a></span> )</pre>
<div class=list><tt>callbackOnFinishedProcessing</tt> - функция, вызываемая по завершении обработки всеми обработчиками.</div>
Метод прекращает работу всех обработчиков.<br><br>

<pre id="3.6.5getMaxQueueSize"><span onclick="showClick(type_null)"><a href="#" onclick="return false" onblur="hideClick()" onmouseover="show('get max queue size - получить максимальный размер очереди')" onmouseout="hide()">.getMaxQueueSize</a></span>( )</pre>
Возвращает максимальную длину очереди инструкций (команд).<br><br>

<pre id="3.6.5getMaxWebWorkers"><span onclick="showClick(type_null)"><a href="#" onclick="return false" onblur="hideClick()" onmouseover="show('get max web workers - получить максимальное число веб обработчиков')" onmouseout="hide()">.getMaxWebWorkers</a></span>( )</pre>
Возвращает максимальное число обработчиков.<br><br>

<pre id="3.6.5isRunning"><span onclick="showClick(type_bool)"><a href="#" onclick="return false" onblur="hideClick()" onmouseover="show('is running - является работающим')" onmouseout="hide()">.isRunning</a></span>( )</pre>
Возвращает значение <tt>true</tt>, если кто-либо из обработчиков находится в работе.<br><br>

<pre id="3.6.5setCrossOrigin"><span onclick="showClick(type_null)"><a href="#" onclick="return false" onblur="hideClick()" onmouseover="show('set cross origin - установить перекрестный источник')" onmouseout="hide()">.setCrossOrigin</a></span>( <span onclick="showClick(type_string)"><a href="#" onclick="return false" onblur="hideClick()" onmouseover="show('cross origin - перекрестный источник')" onmouseout="hide()">crossOrigin</a></span> )</pre>
<div class=list><tt>crossOrigin</tt> - значение <a href="https://ru.wikipedia.org/wiki/Cross-origin_resource_sharing" target="_blank" onmouseover="show('CORS - сокращ. англ. слов cross-origin resource sharing<br>- совместное использование ресурсов между разными<br>источниками — технология современных браузеров, которая<br>позволяет предоставить веб-странице доступ к ресурсам<br>другого домена')" onmouseout="hide()">CORS</a>.</div>
Устанавливает строковое значение CORS, которое будет использоваться.</div><br>


<h3 id="3.6.6">ResourceDescriptor</h3>

<h4>Конструктор</h4>
<pre>ResourceDescriptor( <span onclick="showClick(type_string)"><a href="#" onclick="return false" onblur="hideClick()" onmouseover="show('url - сокращ. англ. слов Uniform Resource Locator<br>- единообразный локатор (определитель<br>местонахождения) ресурса')" onmouseout="hide()">url</a></span>, <span onclick="showClick(type_string)"><a href="#" onclick="return false" onblur="hideClick()" onmouseover="show('extension - расширение')" onmouseout="hide()">extension</a></span> )</pre>
<div class=list><tt>url</tt> - URL-адрес к файлу.</div>
<div class=list><tt>extension</tt> - расширение файла (тип).</div>
Описание ресурса, используемое <tt><a href="#3.6.7" onmouseover="show('LoaderSupport.PrepData')" onmouseout="hide()">LoaderSupport.PrepData</a></tt> и другими.<br><br>

<h4>Методы</h4>
<div class=blockindent><br>
<pre id="3.6.6setContent"><span onclick="showClick(type_null)"><a href="#" onclick="return false" onblur="hideClick()" onmouseover="show('set content - установить контент (содержимое)')" onmouseout="hide()">.setContent</a></span>( <span onclick="showClick(type_obj)"><a href="#" onclick="return false" onblur="hideClick()" onmouseover="show('content - контент (содержимое)')" onmouseout="hide()">content</a></span> )</pre>
<div class=list><tt>content</tt> - содержимое файла в форме буферного массива или текста.</div>
Метод устанавливает содержимое данного ресурса.</div><br>


<h3 id="3.6.7">PrepData</h3>

<h4>Конструктор</h4>
<pre>PrepData( <span onclick="showClick(type_string)"><a href="#" onclick="return false" onblur="hideClick()" onmouseover="show('model name - название модели')" onmouseout="hide()">modelName</a></span> )</pre>
<div class=list><tt>modelName</tt> - общее название модели.</div>
Инструкции по настройке, используемые при запуске метода.<br><br>

<h4>Методы</h4>
<div class=blockindent><br>
<pre id="3.6.7setLogging"><span onclick="showClick(type_null)"><a href="#" onclick="return false" onblur="hideClick()" onmouseover="show('set logging - установить ведение журнала (логирование)')" onmouseout="hide()">.setLogging</a></span>( <span onclick="showClick(type_bool)"><a href="#" onclick="return false" onblur="hideClick()" onmouseover="show('enabled - включено')" onmouseout="hide()">enabled</a></span>, <span onclick="showClick(type_bool)"><a href="#" onclick="return false" onblur="hideClick()" onmouseover="show('debug - отладка')" onmouseout="hide()">debug</a></span> )</pre>
<div class=list><tt>enabled</tt> - логическое значение - <tt>true</tt> или <tt>false</tt>.</div>
<div class=list><tt>debug</tt> - логическое значение - <tt>true</tt> или <tt>false</tt>.</div>
Метод включает или отключает ведение журнала (логирование) вообще (за исключением предупреждений и ошибок), плюс включает или отключает логирование ошибок.<br><br>

<pre id="3.6.7getCallbacks"><a href="#3.6.8" onmouseover="show('LoaderSupport.Callbacks')" onmouseout="hide()">.getCallbacks</a>( )</pre>
Возвращает все функции обратного вызова в форме <a href="#3.6.8" onmouseover="show('LoaderSupport.Callbacks')" onmouseout="hide()">LoaderSupport.Callbacks</a>.<br><br>

<pre id="3.6.7addResource"><span onclick="showClick(type_null)"><a href="#" onclick="return false" onblur="hideClick()" onmouseover="show('add resource - добавить ресурс')" onmouseout="hide()">.addResource</a></span>( <a href="#3.6.6" onmouseover="show('LoaderSupport.ResourceDescriptor.<br>resource - ресурс')" onmouseout="hide()">resource</a> )</pre>
<div class=list><tt>resource</tt> - добавляемый <a href="#3.6.6" onmouseover="show('LoaderSupport.ResourceDescriptor')" onmouseout="hide()">LoaderSupport.ResourceDescriptor</a>.</div>
Метод добавляет описание ресурса.<br><br>

<pre id="3.6.7checkResourceDescriptorFiles"><span onclick="showClick(type_null)"><a href="#" onclick="return false" onblur="hideClick()" onmouseover="show('check resource descriptor files - проверить файлы описания ресурса')" onmouseout="hide()">.checkResourceDescriptorFiles</a></span>( <a href="#3.6.6" onmouseover="show('LoaderSupport.ResourceDescriptor.<br>resources - ресурсы')" onmouseout="hide()">resources</a>, <span onclick="showClick(type_obj)"><a href="#" onclick="return false" onblur="hideClick()" onmouseover="show('file desc - сокращ. англ. слов file description - описание файла')" onmouseout="hide()">fileDesc</a></span> )</pre>
<div class=list><tt>resources</tt> - массив <a href="#3.6.6" onmouseover="show('LoaderSupport.ResourceDescriptor')" onmouseout="hide()">LoaderSupport.ResourceDescriptor</a>.</div>
<div class=list><tt>fileDesc</tt> - объект, описывающий, какие ресурсы представляют интерес - расширение файла, тип (строковые или <span class="lnk" onmouseover="show(type_uint8array)" onmouseout="hide()">UInt8Array</span>), а какие игнорируются - логические (boolean).</div>
Распознает файлы или содержимое, представляющее интерес, из массива <a href="#3.6.6" onmouseover="show('LoaderSupport.ResourceDescriptor')" onmouseout="hide()">LoaderSupport.ResourceDescriptor</a>.
Возвращает объект с каждым расширением и соответствующим <a href="#3.6.6" onmouseover="show('LoaderSupport.ResourceDescriptor')" onmouseout="hide()">LoaderSupport.ResourceDescriptor</a>.<br><br>

<pre id="3.6.7clone"><a href="#3.6.7" onmouseover="show('PrepData.<br>clone - клонировать')" onmouseout="hide()">.clone</a>( )</pre>
Метод клонирует данный объект и впоследствии возвращает его. Функции обратного вызова и ресурсы в глубину не клонируются (ссылки!).</div><br>


<h3 id="3.6.8">Callbacks</h3>

<h4>Конструктор</h4>
<pre>Callbacks( )</pre>
Функции обратного вызова, используемые загрузчиками и сборщиком (builder).<br><br>

<h4>Методы</h4>
<div class=blockindent><br>
<pre id="3.6.8setCallbackOnProgress"><span onclick="showClick(type_null)"><a href="#" onclick="return false" onblur="hideClick()" onmouseover="show('set callback on progress - установить функцию<br>обратного вызова на событие &#171;ход процесса&#187;')" onmouseout="hide()">.setCallbackOnProgress</a></span>( <span onclick="showClick(type_func)"><a href="#" onclick="return false" onblur="hideClick()" onmouseover="show('callback on progress - функция обратного<br>вызова на событие &#171;ход процесса&#187;')" onmouseout="hide()">callbackOnProgress</a></span> )</pre>
<div class=list><tt>callbackOnProgress</tt> - функция обратного вызова для описанной функциональности.</div>
Регистрируется функция обратного вызова, которая вызывается внутренней функцией <tt>announceProgress</tt> для вывода обратной связи.<br><br>

<pre id="3.6.8setCallbackOnMeshAlter"><span onclick="showClick(type_null)"><a href="#" onclick="return false" onblur="hideClick()" onmouseover="show('set callback on mesh alter - установить<br>функцию обратного вызова на изменение<br>сетки')" onmouseout="hide()">.setCallbackOnMeshAlter</a></span>( <span onclick="showClick(type_func)"><a href="#" onclick="return false" onblur="hideClick()" onmouseover="show('callback on mesh alter - функция<br>обратного вызова на изменение сетки')" onmouseout="hide()">callbackOnMeshAlter</a></span> )</pre>
<div class=list><tt>callbackOnMeshAlter</tt> - функция обратного вызова для описанной функциональности.</div>
Регистрируется функция обратного вызова, которая вызывается всякий раз когда была загружена сетка (mesh).
Используйте <a href="#3.6.2" onmouseover="show('LoadedMeshUserOverride')" onmouseout="hide()">LoadedMeshUserOverride</a> для инструкций по изменению (геометрических элементов, материала или игнорированию сетки).<br><br>

<pre id="3.6.8setCallbackOnLoad"><span onclick="showClick(type_null)"><a href="#" onclick="return false" onblur="hideClick()" onmouseover="show('set callback on load - установить<br>функцию обратного вызова на загрузку')" onmouseout="hide()">.setCallbackOnLoad</a></span>( <span onclick="showClick(type_func)"><a href="#" onclick="return false" onblur="hideClick()" onmouseover="show('callback on load - функция обратного вызова на загрузку')" onmouseout="hide()">callbackOnLoad</a></span> )</pre>
<div class=list><tt>callbackOnLoad</tt> - функция обратного вызова для описанной функциональности.</div>
Регистрируется функция обратного вызова, которая однократно вызывается по завершении полной загрузки OBJ-файла.<br><br>

<pre id="3.6.8setCallbackOnLoadMaterials"><span onclick="showClick(type_null)"><a href="#" onclick="return false" onblur="hideClick()" onmouseover="show('set callback on load materials<br>- установить функцию обратного<br>вызова на загрузку материалов')" onmouseout="hide()">.setCallbackOnLoadMaterials</a></span>( <span onclick="showClick(type_func)"><a href="#" onclick="return false" onblur="hideClick()" onmouseover="show('callback on load materials - функция<br>обратного вызова на загрузку материалов')" onmouseout="hide()">callbackOnLoadMaterials</a></span> )</pre>
<div class=list><tt>callbackOnLoadMaterials</tt> - функция обратного вызова для описанной функциональности.</div>
Регистрируется функция обратного вызова, которая вызывается по окончании загрузки материалов.</div><br><br>

<h3 id="3.6.9">Validator</h3>

<h4>Конструктор</h4>
<pre>Validator( )</pre>
Функции проверки.<br><br>

<h4>Методы</h4>
<div class=blockindent><br>
<pre id="3.6.9isValid"><span onclick="showClick(type_bool)"><a href="#" onclick="return false" onblur="hideClick()" onmouseover="show('is valid - является допустимым')" onmouseout="hide()">.isValid</a></span>( <span onclick="showClick(type_obj)"><a href="#" onclick="return false" onblur="hideClick()" onmouseover="show('input - вход, ввод')" onmouseout="hide()">input</a></span> )</pre>
<div class=list><tt>input</tt> - значение может быть любым.</div>
Если значением заданного аргумента <tt>input</tt> является <tt>null</tt> или <tt>undefined</tt>, возвращается значение <tt>false</tt>, в противном случае возвращается значение <tt>true</tt>.<br><br>

<pre id="3.6.9verifyInput"><span onclick="showClick(type_null)"><a href="#" onclick="return false" onblur="hideClick()" onmouseover="show('verify input - проверить вход(ное значение)')" onmouseout="hide()">.verifyInput</a></span>( <span onclick="showClick(type_obj)"><a href="#" onclick="return false" onblur="hideClick()" onmouseover="show('input - вход, ввод')" onmouseout="hide()">input</a></span>, <span onclick="showClick(type_obj)"><a href="#" onclick="return false" onblur="hideClick()" onmouseover="show('default value - значение по умолчанию')" onmouseout="hide()">defaultValue</a></span> )</pre>
<div class=list><tt>input</tt> - значение может быть любым.</div>
<div class=list><tt>defaultValue</tt> - значение может быть любым.</div>
Если значением заданного аргумента <tt>input</tt> является <tt>null</tt> или <tt>undefined</tt>, возвращается значение <tt>defaultValue</tt>, в противном случае возвращается значение <tt>input</tt>.</div><br>

<h4>Исходники</h4>
<div class=blockindent><a href="https://github.com/mrdoob/three.js/blob/master/examples/js/loaders/LoaderSupport.js" target="_blank">LoaderSupport.js на github.com</a></div><br><br>


<h3 id="3.7">PCDLoader</h3>
Загрузчик для загрузки ресурсов в формате <em>pcd</em>.<br>
Формат файла <tt><span class="lnk" onmouseover="show('от Point Cloud Data - данные облака точек')" onmouseout="hide()">pcd</span></tt> - это формат файла для <a href="https://en.wikipedia.org/wiki/Point_Cloud_Library" target="_blank" onmouseover="show('point cloud library - библиотека облака точек')" onmouseout="hide()">Point Cloud Library</a>.
Вот статья Википедии об <a href="https://ru.wikipedia.org/wiki/%D0%9E%D0%B1%D0%BB%D0%B0%D0%BA%D0%BE_%D1%82%D0%BE%D1%87%D0%B5%D0%BA" target="_blank">облаке точек</a>.<br>
Загрузчик поддерживает формат ascii и бинарный формат. Сжатые бинарные файлы не поддерживаются.<br><br>

<h4>Пример</h4>
<pre>// instantiate a loader (создание экземпляра загрузчика)
var loader = new THREE.PCDLoader();<br>
// load a resource (загрузка ресурса)
loader.load(
  // resource URL (URL-адрес ресурса)
  'pointcloud.pcd',<br>
  // called when the resource is loaded (вызывается по завершении загрузки)
  function ( mesh ) {
    scene.add( mesh );
  },<br>
  // called when loading is in progresses (вызывается во время загрузки)
  function ( xhr ) {
    console.log( ( xhr.loaded / xhr.total * 100 ) + '% loaded' );
  },<br>
  // called when loading has errors (вызывается при ошибках в загрузке)
  function ( error ) {
    console.log( 'Произошла ошибка' );
  }
);</pre>
<h5>Другие примеры:</h5>
<pre><a href="https://threejs.org/examples/#webgl_loader_pcd" target="_blank">webgl / loader / pcd</a></pre><br>

<h4>Конструктор</h4>
<pre>PCDLoader( <a href="loaders.htm#16.2" onmouseover="show('LoadingManager.<br>manager - менеджер, управляющий')" onmouseout="hide()">manager</a> )</pre>
<div class=list><tt>manager</tt> — <a href="loaders.htm#16.2" onmouseover="show('LoadingManager')" onmouseout="hide()">менеджер загрузки</a>, используемый для загрузки.
Значением по умолчанию является <a href="loaders.htm#16.2" onmouseover="show('LoadingManager')" onmouseout="hide()">THREE.DefaultLoadingManager</a>.</div>
Создает новый PCDLoader.<br><br>

<h4>Свойства</h4>
<div class=blockindent><br>
<pre id="3.7littleEndian"><span onclick="showClick(type_bool)"><a href="#" onclick="return false" onblur="hideClick()" onmouseover="show('little endian -  малым концом, т.е.<br>порядок следования байтов от<br>младшего разряда к старшему')" onmouseout="hide()">.littleEndian</a></span></pre>
Значением по умолчанию является <tt>true</tt>.</div><br>

<h4>Методы</h4>
<div class=blockindent><br>
<pre id="3.7load"><span onclick="showClick(type_null)"><a href="#" onclick="return false" onblur="hideClick()" onmouseover="show('load - загрузить')" onmouseout="hide()">.load</a></span>( <span onclick="showClick(type_string)"><a href="#" onclick="return false" onblur="hideClick()" onmouseover="show('url - сокращ. англ. слов Uniform Resource Locator<br>- единообразный локатор (определитель<br>местонахождения) ресурса')" onmouseout="hide()">url</a></span>, <span onclick="showClick(type_func)"><a href="#" onclick="return false" onblur="hideClick()" onmouseover="show('on load - на загрузку')" onmouseout="hide()">onLoad</a></span>, <span onclick="showClick(type_func)"><a href="#" onclick="return false" onblur="hideClick()" onmouseover="show('on progress - на ход процесса')" onmouseout="hide()">onProgress</a></span>, <span onclick="showClick(type_func)"><a href="#" onclick="return false" onblur="hideClick()" onmouseover="show('on error - на ошибку')" onmouseout="hide()">onError</a></span> )</pre>
<div class=list><tt>url</tt> — строка, содержащая путь/URL-адрес <tt>pcd</tt>-файла (обязательный аргумент).</div>
<div class=list><tt>onLoad</tt> — функция, которая будет вызвана после успешного завершения загрузки, дополнительный, необязательный параметр.
В качестве аргумента, эта функция получает загруженный <a href="core.htm#14" onmouseover="show('Object3D')" onmouseout="hide()">Object3D</a>.</div>
<div class=list><tt>onProgress</tt> - функция, которая будет вызываться пока идет процесс загрузки.
Аргументом будет экземпляр XMLHttpRequest, что содержит сведения о загрузке <tt><span onclick="showClick(type_int)"><a href="#" onclick="return false" onblur="hideClick()" onmouseover="show('total - полный (размер ресурса)')" onmouseout="hide()">total</a></span></tt>
и <tt><span onclick="showClick(type_int)"><a href="#" onclick="return false" onblur="hideClick()" onmouseover="show('loaded - загружено, в данном случае<br>размер загруженного ресурса')" onmouseout="hide()">loaded</a></span></tt> в байтах.</div>
<div class=list><tt>onError</tt> — функция, которая будет вызвана в случае ошибки при загрузке, дополнительный, необязательный параметр. Функция принимает ошибку в качестве аргумента.</div>
Начинает загрузку с URL-адреса и после её успешного завершения вызывает функцию, указанную в <tt>onLoad</tt>, с проанализированным содержимым ответа.<br><br>

<pre id="3.7parse"><a href="core.htm#14" onmouseover="show('Object3D.<br>parse - разбор, синтаксический анализ')" onmouseout="hide()">.parse</a>( <span onclick="showClick('Arraybuffer - значением является буферный массив')"><a href="#" onclick="return false" onblur="hideClick()" onmouseover="show('data - данные')" onmouseout="hide()">data</a></span>, <span onclick="showClick(type_string)"><a href="#" onclick="return false" onblur="hideClick()" onmouseover="show('url - url-адрес')" onmouseout="hide()">url</a></span> )</pre>
<div class=list><tt>data</tt> — двоичная структура для разбора (синтаксического анализа).</div>
<div class=list><tt>url</tt> — имя файла или url-адрес файла.</div>
Метод производит синтаксический анализ (разбор) двоичной структуры в формате <tt>pcd</tt> и возвращает <a href="core.htm#14" onmouseover="show('Object3D')" onmouseout="hide()">Object3D</a>.<br>
Объект конвертируется в <a href="objects.htm#8" onmouseover="show('Points')" onmouseout="hide()">Points</a> с <a href="core.htm#2" onmouseover="show('BufferGeometry')" onmouseout="hide()">BufferGeometry</a>
и <a href="materials.htm#12" onmouseover="show('PointsMaterial')" onmouseout="hide()">PointsMaterial</a>.</div><br>

<h4>Исходники</h4>
<div class=blockindent><a href="https://github.com/mrdoob/three.js/blob/master/examples/js/loaders/PCDLoader.js" target="_blank">PCDLoader.js на github.com</a></div><br><br>


<h3 id="3.8">PDBLoader</h3>
Загрузчик для загрузки ресурсов в формате <em>.pdb</em>.<br>
<a href="http://en.wikipedia.org/wiki/Protein_Data_Bank_(file_format)" target="_blank">Формат файла <tt>pdb</tt> (Protein Data Bank)</a> - это файл в текстовом формате с описанием трехмерных структур молекул, сохраняющихся в <a href="https://en.wikipedia.org/wiki/Protein_Data_Bank" target="_blank">Protein Data Bank</a>.
Вот описание <a href="https://ru.wikipedia.org/wiki/Protein_Data_Bank" target="_blank">Protein Data Bank</a> на русском языке.<br><br>

<h4>Пример</h4>
<pre>// instantiate a loader (создание экземпляра загрузчика)
var loader = new THREE.PDBLoader();<br>
// load a PDB resource (загрузка PDB ресурса)
loader.load(
  // resource URL (URL-адрес ресурса)
  'models/molecules/caffeine.pdb',<br>
  // called when the resource is loaded (вызывается по завершении загрузки)
  function ( pdb ) {
    var geometryAtoms = pdb.geometryAtoms;
    var geometryBonds = pdb.geometryBonds;
    var json = pdb.json;
    console.log( 'This molecule has ' + json.atoms.length + ' atoms' );
  },<br>
  // called when loading is in progresses (вызывается во время загрузки)
  function ( xhr ) {
    console.log( ( xhr.loaded / xhr.total * 100 ) + '% loaded' );
  },<br>
  // called when loading has errors (вызывается при ошибках в загрузке)
  function ( error ) {
    console.log( 'Произошла ошибка' );
  }
);</pre>
<h5>Другие примеры:</h5>
<pre><a href="https://threejs.org/examples/#webgl_loader_pdb" target="_blank">webgl / loader / pdb</a></pre><br>

<h4>Конструктор</h4>
<pre>PDBLoader( <a href="loaders.htm#16.2" onmouseover="show('LoadingManager.<br>manager - менеджер, управляющий')" onmouseout="hide()">manager</a> )</pre>
<div class=list><tt>manager</tt> — <a href="loaders.htm#16.2" onmouseover="show('LoadingManager')" onmouseout="hide()">менеджер загрузки</a>, используемый для загрузки.
Значением по умолчанию является <a href="loaders.htm#16.2" onmouseover="show('LoadingManager')" onmouseout="hide()">THREE.DefaultLoadingManager</a>.</div>
Создает новый PDBLoader.<br><br>

<h4>Свойства</h4>
<br><br>

<h4>Методы</h4>
<div class=blockindent><br>
<pre id="3.8load"><span onclick="showClick(type_null)"><a href="#" onclick="return false" onblur="hideClick()" onmouseover="show('load - загрузить')" onmouseout="hide()">.load</a></span>( <span onclick="showClick(type_string)"><a href="#" onclick="return false" onblur="hideClick()" onmouseover="show('url - сокращ. англ. слов Uniform Resource Locator<br>- единообразный локатор (определитель<br>местонахождения) ресурса')" onmouseout="hide()">url</a></span>, <span onclick="showClick(type_func)"><a href="#" onclick="return false" onblur="hideClick()" onmouseover="show('on load - на загрузку')" onmouseout="hide()">onLoad</a></span>, <span onclick="showClick(type_func)"><a href="#" onclick="return false" onblur="hideClick()" onmouseover="show('on progress - на ход процесса')" onmouseout="hide()">onProgress</a></span>, <span onclick="showClick(type_func)"><a href="#" onclick="return false" onblur="hideClick()" onmouseover="show('on error - на ошибку')" onmouseout="hide()">onError</a></span> )</pre>
<div class=list><tt>url</tt> — строка, содержащая путь/URL-адрес <tt>pdb</tt>-файла (обязательный аргумент).</div>
<div class=list><tt>onLoad</tt> — функция, которая будет вызвана после успешного завершения загрузки, дополнительный, необязательный параметр.
В качестве аргумента, эта функция получает <a href="core.htm#2" onmouseover="show('BufferGeometry.<br>geometry atoms - геометрия атомов')" onmouseout="hide()">geometryAtoms</a>,
<a href="core.htm#2" onmouseover="show('BufferGeometry.<br>geometry bonds - геометрия связей')" onmouseout="hide()">geometryBonds</a>
и структуру <span class="lnk" onmouseover="show('json - сокр. от англ. слов JavaScript Object Notation —<br>текстовый формат описания объекта, основанный на JavaScript')" onmouseout="hide()">JSON</span>.</div>
<div class=list><tt>onProgress</tt> - функция, которая будет вызываться пока идет процесс загрузки.
Аргументом будет экземпляр XMLHttpRequest, что содержит сведения о загрузке <tt><span onclick="showClick(type_int)"><a href="#" onclick="return false" onblur="hideClick()" onmouseover="show('total - полный (размер ресурса)')" onmouseout="hide()">total</a></span></tt>
и <tt><span onclick="showClick(type_int)"><a href="#" onclick="return false" onblur="hideClick()" onmouseover="show('loaded - загружено, в данном случае<br>размер загруженного ресурса')" onmouseout="hide()">loaded</a></span></tt> в байтах.</div>
<div class=list><tt>onError</tt> — функция, которая будет вызвана в случае ошибки при загрузке, дополнительный, необязательный параметр. Функция принимает ошибку в качестве аргумента.</div>
Начинает загрузку с URL-адреса и после её успешного завершения вызывает функцию, указанную в <tt>onLoad</tt>, с проанализированным содержимым ответа.<br><br>

<pre id="3.8parse"><span onclick="showClick(type_obj)"><a href="#" onclick="return false" onblur="hideClick()" onmouseover="show('parse - разбор, синтаксический анализ')" onmouseout="hide()">.parse</a></span>( <span onclick="showClick(type_string)"><a href="#" onclick="return false" onblur="hideClick()" onmouseover="show('text - текст')" onmouseout="hide()">text</a></span> )</pre>
<div class=list><tt>text</tt> — текстовая структура <tt>pdb</tt> для разбора (синтаксического анализа).</div>
Метод проводит синтаксический анализ (разбор) текста <tt>pdb</tt>-файла и возвращает структуру JSON.</div><br>

<h4>Исходники</h4>
<div class=blockindent><a href="https://github.com/mrdoob/three.js/blob/master/examples/js/loaders/PDBLoader.js" target="_blank">PDBLoader.js на github.com</a></div><br><br>


<h3 id="3.9">SVGLoader</h3>
Загрузчик для загрузки ресурса в формате <em>.svg</em>.<br>
Формат <tt><a href="https://en.wikipedia.org/wiki/Scalable_Vector_Graphics" target="_blank" onmouseover="show('svg - сокращ. англ. слов scalabe vector graphics - масштабируемая векторная графика')" onmouseout="hide()">svg</a></tt> основанный на формате векторных изображений XML для двумерной графики с поддержкой интерактивности и анимации.<br>
Статья Википедии о <a href="https://ru.wikipedia.org/wiki/SVG" target="_blank">SVG на русском языке</a>.<br><br>

<h4>Пример</h4>
<pre>// instantiate a loader (создание экземпляра загрузчика)
var loader = new THREE.SVGLoader();<br>
// load a SVG resource (загрузка SVG ресурса)
loader.load(
  // resource URL (URL-адрес ресурса)
  'data/svgSample.svg',<br>
  // called when the resource is loaded (вызывается по завершении загрузки)
  function ( doc ) {
    scene.add( new THREE.SVGObject(doc) );
  },<br>
  // called when loading is in progresses (вызывается во время загрузки)
  function ( xhr ) {
    console.log( ( xhr.loaded / xhr.total * 100 ) + '% loaded' );
  },<br>
  // called when loading has errors (вызывается при ошибках в загрузке)
  function ( error ) {
    console.log( 'Произошла ошибка' );
  }
);</pre>
<h5>Другие примеры:</h5>
<pre><a href="https://threejs.org/examples/#webgl_loader_svg" target="_blank">webgl / loader / svg</a></pre><br>

<h4>Конструктор</h4>
<pre>SVGLoader( <a href="loaders.htm#16.2" onmouseover="show('LoadingManager.<br>manager - менеджер, управляющий')" onmouseout="hide()">manager</a> )</pre>
<div class=list><tt>manager</tt> — <a href="loaders.htm#16.2" onmouseover="show('LoadingManager')" onmouseout="hide()">менеджер загрузки</a>, используемый для загрузки.
Значением по умолчанию является <a href="loaders.htm#16.2" onmouseover="show('LoadingManager')" onmouseout="hide()">THREE.DefaultLoadingManager</a>.</div>
Создает новый SVGLoader.<br><br>

<h4>Свойства</h4><br>

<h4>Методы</h4><br>
<div class=blockindent>
<pre id="2.10load"><span onclick="showClick(type_null)"><a href="#" onclick="return false" onblur="hideClick()" onmouseover="show('load - загрузить')" onmouseout="hide()">.load</a></span>( <span onclick="showClick(type_string)"><a href="#" onclick="return false" onblur="hideClick()" onmouseover="show('url - сокращ. от англ. слов Uniform Resource Locator<br>— единообразный локатор (определитель местонахождения)<br>ресурса')" onmouseout="hide()">url</a></span>, <span onclick="showClick(type_func)"><a href="#" onclick="return false" onblur="hideClick()" onmouseover="show('on load - на загрузку')" onmouseout="hide()">onLoad</a></span>, <span onclick="showClick(type_func)"><a href="#" onclick="return false" onblur="hideClick()" onmouseover="show('on progress - на ход процесса')" onmouseout="hide()">onProgress</a></span>, <span onclick="showClick(type_func)"><a href="#" onclick="return false" onblur="hideClick()" onmouseover="show('on error - на ошибку')" onmouseout="hide()">onError</a></span> )</pre>
<div class=list><tt>url</tt> — обязательный параметр</div>
<div class=list><tt>onLoad</tt> — функция, которая должна быть вызвана по завершении загрузки.
Её аргументом должен быть загруженный <a href="https://ru.wikipedia.org/wiki/SVG#.D0.A1.D1.82.D1.80.D1.83.D0.BA.D1.82.D1.83.D1.80.D0.B0_.D0.B4.D0.BE.D0.BA.D1.83.D0.BC.D0.B5.D0.BD.D1.82.D0.B0_SVG" target="_blank">SVGDocument</a>.</div>
<div class=list><tt>onProgress</tt> — функция, которая будет вызываться во время хода процесса загрузки.
Аргументом будет экземпляр XMLHttpRequest, что содержит сведения о загрузке <tt><span onclick="showClick(type_int)"><a href="#" onclick="return false" onblur="hideClick()" onmouseover="show('total - полный (размер ресурса)')" onmouseout="hide()">total</a></span></tt>
и <tt><span onclick="showClick(type_int)"><a href="#" onclick="return false" onblur="hideClick()" onmouseover="show('loaded - загружено, в данном случае<br>размер загруженного ресурса')" onmouseout="hide()">loaded</a></span></tt> в байтах.</div>
<div class=list><tt>onError</tt> — функция, которая будет вызвана при ошибках загрузки.</div>
Начинает загрузку с URL-адреса и после её успешного завершения вызывает функцию, указанную в <tt>onLoad</tt>, с проанализированным содержимым ответа.</div><br>

<h4>Исходники</h4>
<div class=blockindent><a href="https://github.com/mrdoob/three.js/blob/master/examples/js/loaders/SVGLoader.js" target="_blank">SVGLoader.js на github.com</a></div><br><br>


<h3 id="3.10">TGALoader</h3>
Загрузчик для загрузки ресурса в формате <em>.tga</em>.<br>
<a href="https://en.wikipedia.org/wiki/Truevision_TGA" target="_blank" onmouseover="show('TGA - Truevision TGA, часто называемый как TARGA, - это формат файлов для растровой графики, созданный Truevision Inc. (сейчас это часть Avid Technology)')" onmouseout="hide()">TGA</a> - формат файлов для растровой графики.<br>
Вот статья Википедии <a href="https://ru.wikipedia.org/wiki/Truevision_TGA" target="_blank">о формате TGA</a> на русском языке.<br><br>

<h4>Пример</h4>
<pre>// instantiate a loader (создание экземпляра загрузчика)
var loader = new THREE.TGALoader();<br>
// load a resource (загрузка ресурса)
var texture = loader.load(
  // resource URL (URL-адрес ресурса)
  'textures/crate_grey8.tga'<br>
  // called when loading is completed (вызывается по завершении загрузки)
  function ( texture ) {
    console.log( 'Текстура загружена' );
  },<br>
  // called when the loading is in progresses (вызывается во время загрузки)
  function ( xhr ) {
     console.log( ( xhr.loaded / xhr.total * 100 ) + '% loaded' );
  },<br>
  // called when the loading failes (вызывается при ошибках в загрузке)
  function ( error ) {
    console.log( 'Произошла ошибка' );
  }
);<br>
var material = new THREE.MeshPhongMaterial( {
  color: 0xffffff,
  map: texture
} );</pre>
<h5>Другие примеры:</h5>
<pre><a href="https://threejs.org/examples/#webgl_loader_texture_tga" target="_blank">webgl / loader / texture / tga</a></pre><br>

<h4>Конструктор</h4>
<pre>TGALoader( <a href="loaders.htm#16.2" onmouseover="show('LoadingManager.<br>manager - менеджер, управляющий')" onmouseout="hide()">manager</a> )</pre>
<div class=list><tt>manager</tt> — <a href="loaders.htm#16.2" onmouseover="show('LoadingManager')" onmouseout="hide()">менеджер загрузки</a>, используемый для загрузки.
Значением по умолчанию является <a href="loaders.htm#16.2" onmouseover="show('LoadingManager')" onmouseout="hide()">THREE.DefaultLoadingManager</a>.</div>
Создает новый TGALoader.<br><br>

<h4>Методы</h4>
<div class=blockindent><br>
<pre id="3.10load"><a href="textures.htm#4" onmouseover="show('DataTexture.<br>load - загрузить')" onmouseout="hide()">.load</a>( <span onclick="showClick(type_string)"><a href="#" onclick="return false" onblur="hideClick()" onmouseover="show('url - сокращ. англ. слов Uniform Resource Locator<br>- единообразный локатор (определитель<br>местонахождения) ресурса')" onmouseout="hide()">url</a></span>, <span onclick="showClick(type_func)"><a href="#" onclick="return false" onblur="hideClick()" onmouseover="show('on load - на загрузку')" onmouseout="hide()">onLoad</a></span>, <span onclick="showClick(type_func)"><a href="#" onclick="return false" onblur="hideClick()" onmouseover="show('on progress - на ход процесса')" onmouseout="hide()">onProgress</a></span>, <span onclick="showClick(type_func)"><a href="#" onclick="return false" onblur="hideClick()" onmouseover="show('on error - на ошибку')" onmouseout="hide()">onError</a></span> )</pre>
<div class=list><tt>url</tt> — строка, содержащая путь/URL-адрес <tt>tga</tt>-файла (обязательный аргумент).</div>
<div class=list><tt>onLoad</tt> — функция, которая будет вызвана после успешного завершения загрузки, дополнительный, необязательный параметр.
В качестве аргумента, эта функция получает загруженную <a href="textures.htm#4" onmouseover="show('DataTexture')" onmouseout="hide()">DataTexture</a>.</div>
<div class=list><tt>onProgress</tt> - функция, которая будет вызываться пока идет процесс загрузки.
Аргументом будет экземпляр XMLHttpRequest, что содержит сведения о загрузке <tt><span onclick="showClick(type_int)"><a href="#" onclick="return false" onblur="hideClick()" onmouseover="show('total - полный (размер ресурса)')" onmouseout="hide()">total</a></span></tt>
и <tt><span onclick="showClick(type_int)"><a href="#" onclick="return false" onblur="hideClick()" onmouseover="show('loaded - загружено, в данном случае<br>размер загруженного ресурса')" onmouseout="hide()">loaded</a></span></tt> в байтах.</div>
<div class=list><tt>onError</tt> — функция, которая будет вызвана в случае ошибки при загрузке, дополнительный, необязательный параметр. Функция принимает ошибку в качестве аргумента.</div>
Начинает загрузку с URL-адреса и после её успешного завершения передает загруженную <a href="textures.htm#4" onmouseover="show('DataTexture')" onmouseout="hide()">текстуру</a> функции, указанную в <tt>onLoad</tt>.
Эта текстура также сразу возвращается для немедленного использования (но может быть полностью не загружена).</div><br>

<h4>Исходники</h4>
<div class=blockindent><a href="https://github.com/mrdoob/three.js/blob/master/examples/js/loaders/TGALoader.js" target="_blank">TGALoader.js на github.com</a></div><br><br>


<h3 id="3.11">PRWMLoader</h3>
Загрузчик для загрузки ресурса в формате <em>.prwm</em>.<br>
Формат prwm (Packed Raw WebGL Model - упакованная исходная WebGL модель) представляет собой формат двоичного файла с открытым исходным кодом для n-мерной геометрии,
специально разработанный для JavaScript и WebGL с повышенным вниманием к скорости синтаксического анализа (от 1 мс до 0,1 мс в браузере Chrome 59 версии на ноутбуке Apple MacBook Pro Retina 13 Late 2013).
Синтаксический анализ (разбор) PRWM-файла выполняется особенно быстро когда <a href="https://ru.wikipedia.org/wiki/%D0%9F%D0%BE%D1%80%D1%8F%D0%B4%D0%BE%D0%BA_%D0%B1%D0%B0%D0%B9%D1%82%D0%BE%D0%B2" target="_blank">порядок байтов</a> файла совпадает с порядком байтов клиентской платформы.
Подробнее об этом смотрите <a href="https://github.com/kchapelier/PRWM" target="_blank">здесь</a>.<br><br>

<h4>Пример</h4>
<pre>// instantiate a loader (создание экземпляра загрузчика)
var loader = new THREE.PRWMLoader();<br>
// load a resource (загрузка ресурса)
loader.load(
  // resource URL (URL-адрес ресурса)
  'models/nefertiti.le.prwm',<br>
  // called when resource is loaded (вызывается по завершении загрузки)
  function ( bufferGeometry ) {
  var object = new THREE.Mesh( bufferGeometry, new THREE.MeshNormalMaterial() );
    scene.add( object );
  },<br>
  // called when loading is in progresses (вызывается во время загрузки)
  function ( xhr ) {
    console.log( ( xhr.loaded / xhr.total * 100 ) + '% loaded' );
  },<br>
  // called when loading has errors (вызывается при ошибках в загрузке)
  function ( error ) {
    console.log( 'Произошла ошибка' );
  }
);</pre>
<h5>Другие примеры:</h5>
<pre><a href="https://threejs.org/examples/#webgl_loader_prwm" target="_blank">webgl / loader / prwm</a></pre><br>

<h4>Конструктор</h4>
<pre>PRWMLoader( <a href="loaders.htm#16.2" onmouseover="show('LoadingManager.<br>manager - менеджер, управляющий')" onmouseout="hide()">manager</a> )</pre>
<div class=list><tt>manager</tt> — <a href="loaders.htm#16.2" onmouseover="show('LoadingManager')" onmouseout="hide()">менеджер загрузки</a>, используемый для загрузки.
Значением по умолчанию является <a href="loaders.htm#16.2" onmouseover="show('LoadingManager')" onmouseout="hide()">THREE.DefaultLoadingManager</a>.</div>
Создает новый PRWMLoader.<br><br>

<h4>Свойства</h4>
<br><br>

<h4>Методы</h4>
<div class=blockindent><br>
<pre id="3.11load"><span onclick="showClick(type_null)"><a href="#" onclick="return false" onblur="hideClick()" onmouseover="show('load - загрузить')" onmouseout="hide()">.load</a></span>( <span onclick="showClick(type_string)"><a href="#" onclick="return false" onblur="hideClick()" onmouseover="show('url - сокращ. англ. слов Uniform Resource Locator<br>- единообразный локатор (определитель<br>местонахождения) ресурса')" onmouseout="hide()">url</a></span>, <span onclick="showClick(type_func)"><a href="#" onclick="return false" onblur="hideClick()" onmouseover="show('on load - на загрузку')" onmouseout="hide()">onLoad</a></span>, <span onclick="showClick(type_func)"><a href="#" onclick="return false" onblur="hideClick()" onmouseover="show('on progress - на ход процесса')" onmouseout="hide()">onProgress</a></span>, <span onclick="showClick(type_func)"><a href="#" onclick="return false" onblur="hideClick()" onmouseover="show('on error - на ошибку')" onmouseout="hide()">onError</a></span> )</pre>
<div class=list><tt>url</tt> — строка, содержащая путь/URL-адрес <tt>prwm</tt>-файла (обязательный аргумент). Любой символ&nbsp;<tt>*</tt> в URL-адресе будет автоматически заменяться на <tt>le</tt> или <tt>be</tt>, в зависимости от порядка байтов платформы.</div>
<div class=list><tt>onLoad</tt> — функция, которая будет вызвана после успешного завершения загрузки, дополнительный, необязательный параметр.
В качестве аргумента, эта функция получает загруженный <a href="core.htm#2" onmouseover="show('BufferGeometry')" onmouseout="hide()">BufferGeometry</a>.</div>
<div class=list><tt>onProgress</tt> - функция, которая будет вызываться пока идет процесс загрузки.
Аргументом будет экземпляр XMLHttpRequest, что содержит сведения о загрузке <tt><span onclick="showClick(type_int)"><a href="#" onclick="return false" onblur="hideClick()" onmouseover="show('total - полный (размер ресурса)')" onmouseout="hide()">total</a></span></tt>
и <tt><span onclick="showClick(type_int)"><a href="#" onclick="return false" onblur="hideClick()" onmouseover="show('loaded - загружено, в данном случае<br>размер загруженного ресурса')" onmouseout="hide()">loaded</a></span></tt> в байтах.</div>
<div class=list><tt>onError</tt> — функция, которая будет вызвана в случае ошибки при загрузке, дополнительный, необязательный параметр. Функция принимает ошибку в качестве аргумента.</div>
Начинает загрузку с URL-адреса и после её успешного завершения вызывает функцию, указанную в <tt>onLoad</tt>, с разобранным содержимым ответа.<br><br>

<pre id="3.11parse"><a href="core.htm#2" onmouseover="show('BufferGeometry.<br>parse - разбор, синтаксический анализ')" onmouseout="hide()">.parse</a>( <span class="lnk" onmouseover="show('array buffer - буферный массив')" onmouseout="hide()">arrayBuffer</span> )</pre>
<div class=list><tt>arrayBuffer</tt> — буферный массив, содержащий данные в <tt>prwm</tt> формате.</div>
Метод выполняет синтаксический анализ <tt>prwm</tt>-файла, переданного в виде буферного массива, и тотчас возвращает экземпляр <a href="core.htm#2" onmouseover="show('BufferGeometry')" onmouseout="hide()">BufferGeometry</a>.<br><br>

<pre id="3.11isBigEndianPlatform"><span onclick="showClick(type_bool)"><a href="#" onclick="return false" onblur="hideClick()" onmouseover="show('is big endian platform - платформа с порядком<br>байтов от старшего к младшему')" onmouseout="hide()">.isBigEndianPlatform</a></span>( )</pre>
Возвращает значение <tt>true</tt>, если порядок байтов платформы установлен как <span class="lnk" onmouseover="show('т.е. порядок от старшего к младшему<br>(англ. big-endian — большим концом)')" onmouseout="hide()">Big Endian</span>, в противном случае значение <tt>false</tt>.</div><br>

<h4>Исходники</h4>
<div class=blockindent><a href="https://github.com/mrdoob/three.js/blob/master/examples/js/loaders/PRWMLoader.js" target="_blank">PRWMLoader.js на github.com</a></div>
<h4>Дополнительные замечания</h4>
Данный загрузчик также доступен на <tt>npm</tt> как <tt>three-prwm-loader</tt>.<br><br>


<h2 id="4">Объекты</h2><br>

<span class="right_side"><a href="objects.htm#7" title="Переход к родительскому классу"><tt>Mesh &rarr;</tt></a></span>
<h3 id="4.1">LensFlare</h3>
Создает имитацию блика объектива камеры, зависящего от направления освещения.
<div class=note><b>Примечание:</b> Для работы LensFlare у <a href="renderers.htm#1.2" onmouseover="show('WebGLRenderer')" onmouseout="hide()">WebGLRenderer</a> аргумент <tt>alpha</tt> должен быть установлен как <tt>true</tt>.</div><br>

<h4>Пример</h4>
<pre>var light = new THREE.PointLight( 0xffffff, 1.5, 2000 );<br>
var textureLoader = new THREE.TextureLoader();<br>
var textureFlare0 = textureLoader.load( "textures/lensflare/lensflare0.png" );
var textureFlare1 = textureLoader.load( "textures/lensflare/lensflare2.png" );
var textureFlare2 = textureLoader.load( "textures/lensflare/lensflare3.png" );<br>
var lensflare = new THREE.Lensflare();<br>
lensflare.addElement( new THREE.LensflareElement( textureFlare0, 512, 0 ) );
lensflare.addElement( new THREE.LensflareElement( textureFlare1, 512, 0 ) );
lensflare.addElement( new THREE.LensflareElement( textureFlare2, 60, 0.6 ) );<br>
light.add( lensflare );</pre>
<h5>Другие примеры:</h5>
<pre><a href="https://threejs.org/examples/#webgl_lensflares" target="_blank">webgl / lensflares</a></pre><br>

<h4>Конструктор</h4>
<pre>LensFlare( <a href="textures.htm#6" onmouseover="show('Texture.<br>texture - текстура')" onmouseout="hide()">texture</a>, <span onclick="showClick(type_float)"><a href="#" onclick="return false" onblur="hideClick()" onmouseover="show('size - размер')" onmouseout="hide()">size</a></span>, <span onclick="showClick(type_float)"><a href="#" onclick="return false" onblur="hideClick()" onmouseover="show('distance - расстояние')" onmouseout="hide()">distance</a></span>, <a href="math.htm#3" onmouseover="show('Color.<br>color - цвет')" onmouseout="hide()">color</a>, <a href="constants.htm#5.3" onmouseover="show('Константы материалов - Режим смешивания<br>blending - смешивание')" onmouseout="hide()">blending</a> )</pre>
<div class=list><tt>texture</tt> — текстура (THREE.Texture), на которой должен отображаться блик.</div>
<div class=list><tt>size</tt> — размер в пикселах. Дополнительный, необязательный аргумент.</div>
<div class=list><tt>distance</tt> — значение в диапазоне от&nbsp;<tt>0</tt> до&nbsp;<tt>1</tt>, начиная с источника света (значение&nbsp;<tt>0</tt> соответствует местоположению на источнике света). Дополнительный, необязательный аргумент.</div>
<div class=list><tt>color</tt> — цвет блика от линзы объектива. Дополнительный, необязательный аргумент.</div>
<div class=list><tt>blending</tt> — <a href="constants.htm#5.3" onmouseover="show('Константы материалов - Режим смешивания<br>blending - смешивание')" onmouseout="hide()">режим смешивания</a>.
Значением по умолчанию является <tt>THREE.NormalBlending</tt>. Дополнительный, необязательный аргумент.</div><br>

<h4>Свойства</h4>
Сведения об общих свойствах смотрите в описании базового класса <a href="objects.htm#7">Mesh</a>.<br><br>
<div class=blockindent><br>
<pre id="4.1isLensflare"><span onclick="showClick(type_bool)"><a href="#" onclick="return false" onblur="hideClick()" onmouseover="show('is Lensflare - является классом Lensflare')" onmouseout="hide()">.isLensflare</a></span></pre>
Свойство используется для проверки, является ли данный класс и производные от него Lensflare. Значением по умолчанию является <tt>true</tt>.<br>
Не нужно его изменять, так как оно используется для оптимизации внутри <em>three.js</em>.</div><br>

<h4>Исходники</h4>
<div class=blockindent><a href="https://github.com/mrdoob/three.js/blob/master/examples/js/objects/Lensflare.js" target="_blank">LensFlare.js на github.com</a></div><br><br>


<h2 id="5">Экспортеры</h2>
<h3 id="5.1">GLTFExporter</h3>
Экспортер для формата <em>glTF 2.0</em>.<br>
Формат <a href="https://www.khronos.org/gltf" target="_blank">glTF</a> (<span class="lnk" onmouseover="show('формат передачи данных для WebGL')" onmouseout="hide()">webGL Transmissions Format</span>) это <a href="https://github.com/KhronosGroup/glTF/tree/master/specification/2.0" target="_blank">инструкция (спецификация) в открытом формате</a> для эффективной поставки и загрузки 3D контента.
Ресурсы могут предоставляться либо в формате JSON (<tt>gltf</tt>), либо в бинарном (<tt>.glb</tt>) формате. Текстуры (в формате <tt>jpg</tt>, <tt>png</tt>, <tt>...</tt>) и дополнительные данные в двоичном формате (<tt>bin</tt>) хранятся во внешних файлах.
Ресурс glTF может предоставлять одну или несколько сцен включая сетки, материалы, текстуры, скины, скелеты, цели морфинга, анимацию, освещение и/или камеры.<br>
Статья Википедии о <a href="https://en.wikipedia.org/wiki/GlTF" target="_blank">GlTF</a>, на английском языке.<br><br>

<h4>Расширения</h4>
<div class=note_trans><b>Примечание переводчика:</b> Собственно, сокращение KHR в названии расширений означает <a href="https://www.khronos.org/" target="_blank">Khronos Group</a> - промышленный консорциум, целью которого является выработка открытых стандартов интерфейсов программирования (API) в области создания и воспроизведения динамической графики и звука на широком спектре платформ и устройств, с поддержкой аппаратного ускорения.</div>
GLTFExporter поддерживает следующие <a href="https://github.com/KhronosGroup/glTF/tree/master/extensions/" target="_blank" onmouseover="show('Расширения glTF расширяют базовый формат glTF модели.<br>Расширения могут вводить новые свойства (включая свойства,<br>которые ссылаются на внешние данные, причем расширение может<br>определять формат этих данных), новую семантику параметров,<br>зарезервированные идентификаторы и новые форматы контейнеров.<br>Расширения пишутся для конкретной версии glTF и могут быть<br>введены в основу glTF более поздних версий.')" onmouseout="hide()">расширения glTF 2.0</a>:
<div class=list><a class='link' onclick='javascript:show_txt(this)' onmouseover="show('lights punctual - точечные источники света')" onmouseout="hide()">KHR_lights_punctual</a>
<div style='display:none;' onclick='javascript:show_txt(this)'>Данное расширение определяет набор источников света для использования с glTF 2.0. Освещение сцены определяется источниками света в ней.<br><br>
Многие 3D инструменты и движки поддерживают встроенные реализации типов освещения. С помощью данного расширения инструменты могут экспортировать, а движки - импортировать, эти источники освещения.<br><br>
Это расширение определяет три типа "точечного" освещения: направленное (<tt>directional</tt>), точечное (<tt>point</tt>) и прожекторное (<tt>spot</tt>).
Точечные источники света определяются как параметризованные, бесконечно малые точки, излучающие свет с определенной интенсивностью и в конкретных направлениях.<br><br>
Эти источники света указываются по узлам и наследуют изменения этого узла.<br><br>
Соответствующая реализация данного расширения должна иметь возможность загрузки данных источников освещения, определенных в ресурсе и должна представлять ресурс, использующий эти источники освещения.<br><br>

<h5>Определение видов освещения</h5>
Вид освещения задается внутри словарного свойства в файле описания glTF сцены, посредством добавления свойства <tt>extensions</tt> (расширения) к glTF объекту верхнего уровня
и определяется свойством <tt>KHR_lights_punctual</tt>, в котором имеется массив свойств освещения.<br><br>
Для каждого источника освещения задается обязательное свойство <tt>type</tt>, обозначающее тип освещения (направленное - <tt>directional</tt>, точечное - <tt>point</tt> или прожекторное - <tt>spot</tt>).
В следующем примере определяется источник направленного освещения белого цвета.
<pre>"extensions": {
  "KHR_lights_punctual" : {
    "lights": [
      {
        "color": [
          1.0,
          1.0,
          1.0
        ],
        "type": "directional"
      }
    ]
  }
}</pre><br>

<h5>Добавление экземпляров освещения в узлы</h5>
Источники света должны быть присоединены к узлу путем задания свойства <tt>extensions.KHR_lights_punctual</tt> и, внутри него, индекса в массиве источников света с помощью свойства <tt>light</tt>.
<pre>"nodes" : [
  {
    "extensions" : {
      "KHR_lights_punctual" : {
        "light" : 0
      }
    }
  }
]</pre>
Освещение будет наследовать изменения узла. Для типов освещения, которые имеют конкретное расположение (точечное и прожекторное), позиция источника света определяется как местоположение узла в "мире".
Для типов освещения, имеющих направление (направленное и прожекторное), направление света определяется трехмерным вектором <tt>(0.0, 0.0, -1.0)</tt> и поворотом узла соответственно направлению света.
То есть, освещение без преобразования узла направлено вдоль по оси&nbsp;<tt>-Z</tt>.
Изменение освещения зависит от масштабирования узла в "мировых" координатах, но все свойства света (такие как расстояние отсечки - <tt>range</tt> и интенсивность - <tt>intensity</tt>) остаются неизменными.<br><br>

<h5>Типы освещения</h5>
Все типы освещения имеют общий набор свойств, перечисленный ниже.
<div class="caption">Общие свойства освещения</div>
<table class="tbl_1" border="1" cellpadding="5">
<tr class="head"><td>Свойство<br>Property</td><td>Описание<br>Description</td><td>Является ли свойство обязательным<br>Required</td></tr>
<tr><td align=center><tt><span class="lnk" onmouseover="show('name - имя, название')" onmouseout="hide()">name</span></tt></td><td>Название освещения.</td><td>Нет, значение по умолчанию: <tt>""</tt> (пустая строка).</td></tr>
<tr><td align=center><tt><span class="lnk" onmouseover="show('color - цвет')" onmouseout="hide()">color</span></tt></td><td>RGB значение цвета освещения в линейном пространстве.</td><td>Нет, значение по умолчанию:&nbsp;<tt>[1.0, 1.0, 1.0]</tt> (белый).</td></tr>
<tr><td align=center><tt><span class="lnk" onmouseover="show('intensity - интенсивность')" onmouseout="hide()">intensity</span></tt></td><td>Яркость света. Единицы измерения данного освещения определяются в зависимости от типа освещения.
Для точечного (point) и прожекторного (spot) освещения интенсивность измеряется в канделах (люмен/стерадиан), в то время как направленное (directional) освещение использует освещенность в люксах (люмен/м<sup>2</sup>).</td><td>Нет, значение по умолчанию:&nbsp;<tt>1.0</tt>.</td></tr>
<tr><td align=center><tt><span class="lnk" onmouseover="show('type - тип')" onmouseout="hide()">type</span></tt></td><td>Объявляет тип освещения.</td><td>✅ Да.</td></tr>
<tr><td align=center><tt><span class="lnk" onmouseover="show('range - диапазон')" onmouseout="hide()">range</span></tt></td><td>Указание, определяющее расстояние отсечки, при котором интенсивность света можно считать равной нулю.
Поддерживается только точечным (point) и прожекторным (spot) освещениями.
Значение должно быть больше&nbsp;<tt>0</tt>. Когда значение свойства неопределено, расстояние отсечки предполагается бесконечным.</td><td>Нет.</td></tr></table>
На свойства освещения не влияют изменения узла - например, расстояние отсечки (<tt>range</tt>) и интенсивность (<tt>intensity</tt>) освещения не изменяются при масштабировании (<tt>scale</tt>).<br><br>

<h5>Свойство <tt>range</tt> (расстояние отсечки)</h5>
Свойство <tt>range</tt> (возможно только для точечного (point) и прожекторного (spot) освещения) определяет расстояние отсечки, на котором интенсивность света становится равной нулю, т.е. свет больше не влияет на окружающее пространство.
Это может пригодится для отбрасывания геометрических элементов, на которых освещение не оказывает видимого влияния, что может оказать значительное положительное влияние на производительность отрисовки.
При этом требуется, при задании ненулевого значения, движки рендеринга игнорировали освещения за пределами этого расстояния отсечки.<br><br>
В пределах освещения до расстояния отсечки, ослабление интенсивности должно как можно точнее быть обратно пропорциональным квадрату расстояния,
хотя некоторые неквадратичные спады вблизи края расстояния отсечки можно использовать, чтобы избежать резкого обрыва освещенности.
Если свойство <tt>range</tt> неопределено, расстояние отсечки предполагается равным бесконечности и освещение будет затухать обратно пропорционально квадрату расстояния.<br><br>
Рекомендуемая реализация этого ослабления (<tt>attenuation</tt>) с расстоянием отсечки (<tt>range</tt>) выглядит следующим образом:
<pre>attenuation = max( min( 1.0 - ( current_distance / range )<sup>4</sup>, 1 ), 0 ) / current_distance<sup>2</sup></pre><br>

<h5>Направленное освещение (<tt>directional</tt>)</h5>
Направленное освещение - это источники света, которые действуют как будто они находятся бесконечно далеко и излучают свет в направлении локальной оси&nbsp;<tt>-z</tt>.
Данный тип освещения наследует ориентацию узла, которому он принадлежит; положение и масштаб игнорируются, за исключением их влияния на унаследованную ориентацию узла.
Поскольку он находится на бесконечном расстоянии, освещенность не ослабляется. Его интенсивность измеряется в люменах на метр квадратный или в люксах (lm/m<sup>2</sup>).<br><br>

<h5>Точечное освещение (<tt>point</tt>)</h5>
Источники точечного освещения излучают свет во всех направлениях от своего положения в пространстве; поворот и масштаб игнорируются, за исключением их влияния на положение унаследованного узла.
Яркость освещения уменьшается физически правильным образом, в зависимости от увеличения расстояния от позиции источника света (т.е. яркость обратно пропорциональна квадрату расстояния).
Интенсивность точечного освещения измеряется в канделах, т.е. люменах на <span class="lnk" onmouseover="show('Стерадиан от др.греч. στέρεος - твёрдый, объёмный,<br>пространственный и лат. radius - луч) - единица<br>измерения телесных углов.<br>Телесный угол в <tt>1</tt> стерадиан с вершиной в центре<br>сферы радиусом <tt>r</tt> вырезает из этой сферы<br>поверхность площадью <tt>r<sup>2</sup></tt>.')" onmouseout="hide()">стерадиан</span> (lm/sr).<br><br>

<h5>Прожекторное освещение (<tt>spot</tt>)</h5>
Источники прожекторного освещения излучают свет в виде конуса в направлении локальной оси&nbsp;<tt>-z</tt>. Угол конуса и затухание света в нем определяется двумя числами: <tt>innerConeAngle</tt> и <tt>outerConeAngle</tt>.
Как и в случае с точечным освещением, яркость прожекторного освещения уменьшается физически правильным образом, в зависимости от увеличения расстояния от позиции источника света (т.е. яркость обратно пропорциональна квадрату расстояния).
Интенсивность прожекторного освещения относится к яркости внутри <tt>innerConeAngle</tt> (и в месте размещения источника света) и измеряется в канделах, которая равна люмену на стерадиан (lm/sr).
Движки, не поддерживающие два угла прожекторного освещения должны использовать <tt>outerConeAngle</tt> в качестве угла конуса прожектора (косвенно оставляя <tt>innerConeAngle</tt> равным&nbsp;<tt>0</tt>).<br><br>
Позиция и ориентация прожекторного освещения наследуется при изменении узла, к которому оно принадлежит. Наследуемый масштаб не влияет на форму конуса и игнорируется, за исключением его влияния на позицию и ориентацию.<br><br>
Если тип освещения определен как прожекторный (spot), свойство <tt>spot</tt> у источника освещения является обязательным. Его же свойства (показаны ниже) являются дополнительными, необязательными.
<table class="tbl_1" border="1" cellpadding="5">
<tr class="head"><td>Свойство<br>Property</td><td>Описание<br>Description</td><td>Является ли свойство обязательным<br>Required</td></tr>
<tr><td align=center><tt><span class="lnk" onmouseover="show('inner cone angle - угол внутреннего конуса')" onmouseout="hide()">innerConeAngle</span></tt></td>
<td>Угол, в радианах, от центра луча прожектора до места, где начинается спад освещенности. Должен быть больше или равен&nbsp;<tt>0</tt> и меньше угла <tt>outerConeAngle</tt>.</td>
<td>Нет, значение по умолчанию: <tt>0</tt></td></tr>
<tr><td align=center><tt><span class="lnk" onmouseover="show('outer cone angle - угол внешнего конуса')" onmouseout="hide()">outerConeAngle</span></tt></td>
<td>Угол, в радианах, от центра луча прожектора до места, где заканчивается спад освещенности. Должен быть больше угла <tt>innerConeAngle</tt> и меньше или равен&nbsp;<tt>PI/2.0</tt>.</td>
<td>Нет, значение по умолчанию:&nbsp;<tt>PI/4.0</tt></td></tr></table>

<pre>"extensions": {
  "KHR_lights_punctual" : {
    "lights": [
      {
        "spot": {
          "innerConeAngle": 0.785398163397448,
          "outerConeAngle": 1.57079632679,
        },
        "color": [
          1.0,
          1.0,
          1.0
        ],
        "type": "spot"
      }
    ]
  }
}</pre><br>

<h5>Углы внутреннего и внешнего конусов</h5>
Между углами <tt>innerConeAngle</tt> и <tt>outerConeAngle</tt> должно быть плавное ослабление яркости.
В реальности это "угловое" затухание очень сложное, так как зависит от физического размера прожектора и формы его корпуса, в котором находится лампа.<br><br>
Соответствующие реализации будут моделировать это угловое затухание по кривой, которая придерживается увеличенного снижения яркости перед выравниванием, при движении от внутреннего угла к внешнему.<br><br>
Обычно это затухание моделируют путем интерполяции между косинусами каждого угла. Это эффективное приближение к реальности, которое выдает достойные результаты.<br><br>

<b>Рекомендуемый код:</b>
<pre>// These two values can be calculated on the CPU and passed into the shader
// Эти два значения могут быть вычислены на процессоре и переданы в шейдер
float lightAngleScale = 1.0f / max(0.001f, cos(innerConeAngle) - cos(outerConeAngle));
float lightAngleOffset = -cos(outerConeAngle) * lightAngleScale;

// Then, in the shader: (Далее, в шейдере:)
float cd = dot(spotlightDir, normalizedLightVector);
float angularAttenuation = saturate(cd * lightAngleScale + lightAngleOffset);
angularAttenuation *= angularAttenuation;</pre><br><br></div></div>

<div class=list><a class='link' onclick='javascript:show_txt(this)' onmouseover="show('materials unlit - неосвещенные материалы')" onmouseout="hide()">KHR_materials_unlit</a>
<div style='display:none;' onclick='javascript:show_txt(this)'>Данное расширение определяет неосвещенную теневую модель для использования в glTF 2.0 материалах,
в качестве альтернативы моделям затенения <a href="https://en.wikipedia.org/wiki/Physically_based_rendering" target="_blank" onclick='no_js(event)'>физически корректного отображения (Physical Based Rendering - PBR)</a>, предоставляемым базовой спецификацией.
<div class=note_trans><b>Примечание переводчика:</b> Вот перевод некоторых статей на русский язык из книги по PBR <a href="https://www.allegorithmic.com/pbr-guide" target="_blank" onclick='no_js(event)'>The PBR guide - 2018 edition</a> на сайте <a href="http://3dyuriki.com" target="_blank" onclick='no_js(event)'>3dyuriki.com</a>:<br>
&nbsp; &#9679; &nbsp; <a href="http://3dyuriki.com/2015/02/26/chto-takoe-pbr-fizicheski-korrektnyj-rendering-i-shejding/" target="_blank" onclick='no_js(event)'>Что такое PBR: физически корректный рендеринг и шейдинг</a><br>
&nbsp; &#9679; &nbsp; <a href="http://3dyuriki.com/2015/02/26/chto-takoe-pbr-fizicheski-korrektnyj-rendering-i-shejding-2/" target="_blank" onclick='no_js(event)'>Что такое PBR: физически корректный рендеринг и шейдинг 2</a><br>
&nbsp; &#9679; &nbsp; <a href="http://3dyuriki.com/2015/03/25/kak-sozdavat-pbr-tekstury-prakticheskij-kurs/" target="_blank" onclick='no_js(event)'>Как создавать PBR текстуры: практический курс. Часть 1</a><br>
&nbsp; &#9679; &nbsp; <a href="http://3dyuriki.com/2017/08/17/urok-kak-sozdavat-pbr-tekstury-2/" target="_blank" onclick='no_js(event)'>Как создавать PBR текстуры: практический курс. Часть 2</a></div>
Для подключения неосвещенных материалов имеются три побудительных причины:<br>
&nbsp; &#9679; &nbsp; Мобильные устройства с ограниченными ресурсами, где неосвещенные материалы предлагают эффективную альтернативу высококачественным моделям затенения.<br>
&nbsp; &#9679; &nbsp; <a href="https://ru.wikipedia.org/wiki/%D0%A4%D0%BE%D1%82%D0%BE%D0%B3%D1%80%D0%B0%D0%BC%D0%BC%D0%B5%D1%82%D1%80%D0%B8%D1%8F" target="_blank" onmouseover="show('Фотограмметрия (от фото…, др.греч. γράμμα - запись, изображение<br>и … метрия) - научно-техническая дисциплина, занимающаяся<br>определением формы, размеров, положения и иных характеристик<br>объектов по их фотоизображениям.<br>Существует два основных направления в фотограмметрии: создание<br>карт и планов Земли (и других космических объектов) по снимкам<br>(фототопография), и решение прикладных задач в архитектуре,<br>строительстве, медицине, криминалистике и т. д. (наземная,<br>прикладная фотограмметрия).')" onmouseout="hide()" onclick='no_js(event)'>Фотограмметрия</a>, в которой информация об освещении уже присутствует и не нужно применять дополнительное освещение.<br>
&nbsp; &#9679; &nbsp; Стилизованные материалы (такие как <a href="https://ru.wikipedia.org/wiki/%D0%90%D0%BD%D0%B8%D0%BC%D0%B5" target="_blank" onclick='no_js(event)'>«аниме»</a>
или <a href="https://ru.wikipedia.org/wiki/%D0%A0%D0%B8%D1%81%D0%BE%D0%B2%D0%B0%D0%BD%D0%BD%D0%B0%D1%8F_%D0%BC%D1%83%D0%BB%D1%8C%D1%82%D0%B8%D0%BF%D0%BB%D0%B8%D0%BA%D0%B0%D1%86%D0%B8%D1%8F" target="_blank" onclick='no_js(event)'>«рисованная мультипликация»</a>
- <a href="https://en.wikipedia.org/wiki/Traditional_animation" target="_blank" onclick='no_js(event)'>hand-drawn</a>), в которых освещение нежелательно по эстетическим соображениям.<br><br>
Эти варианты использования не являются взаимоисключающими: исполнители могут выбрать неосвещенный материал по соображениям производительности и принять эстетические решения в дополнение к этому выбору.
В результате, пользовательские реализации, способные отображать PBR, не должны автоматически "обновляться" до полностью затененного PBR.
Любые основные свойства PBR, указанные для неосвещенного материала (за исключением <tt>baseColor</tt>), предназначены для использования только в качестве резервных средств для клиентов, которые не поддерживают расширение KHR_materials_unlit.

As a result, client implementations capable of rendering PBR should not automatically "upgrade" to fully-shaded PBR. Any core PBR properties specified on an unlit material (except baseColor) are meant only as fallbacks for clients that do not support the KHR_materials_unlit extension. The extension, whether required or optional within the asset, indicates preference for an unlit visual style.
Расширение, независимо от того, является ли оно обязательным или дополнительным в ресурсе, указывает на предпочтение неосвещенного визуального стиля.<br><br>

<h5>Extending Materials</h5>

The common Unlit material is defined by adding the KHR_materials_unlit extension to any glTF material. When present, the extension indicates that a material should be unlit and use available baseColor values, alpha values, and vertex colors while ignoring all properties of the default PBR model related to lighting or color. Alpha coverage and doubleSided still apply to unlit materials.

<pre>{
  "materials": [
    {
      "name": "MyUnlitMaterial",
      "pbrMetallicRoughness": {
        "baseColorFactor": [ 0.5, 0.8, 0.0, 1.0 ]
      },
      "extensions": {
        "KHR_materials_unlit": {}
      }
    }
  ]
}</pre>

<h5>Определение Definition</h5>
Модель материала Unlit описывает постоянно затененную поверхность, которая не зависит от освещения. Материал определяется только свойствами, уже представленными в спецификации материала glTF 2.0.
Это расширение не добавляет никаких новых свойств - это фактически логический флаг, указывающий на использование неосвещенной модели затенения.
Допускаются дополнительные свойства объекта расширения, но они могут привести к неопределенному поведению в соответствующих просмотрах.
The Unlit material model describes a constantly shaded surface that is independent of lighting. The material is defined only by properties already present in the glTF 2.0 material specification. No new properties are added by this extension — it is effectively a boolean flag indicating use of an unlit shading model. Additional properties on the extension object are allowed, but may lead to undefined behaviour in conforming viewers.<br><br>

Цвет (<tt>color</tt>) вычисляется как:
<pre>color = &#60;baseColorTerm&#62;</pre>

&#60;baseColorTerm&#62; is the product of baseColorFactor, baseColorTexture, and vertex color (if any), as defined by the core glTF material specification.<br><br>

<h5>Пример</h5>
В следующем примере определен неосвещенный материал неизменямого красного цвета.
<pre>"materials": [
  {
    "name": "red_unlit_material",
    "pbrMetallicRoughness": {
      "baseColorFactor": [ 1.0, 0.0, 0.0, 1.0 ]
    },
    "extensions": {
      "KHR_materials_unlit": {}
    }
  }
]</pre><br>

<h5>Совместимость расширения и резервирование материалов Extension compatibility and fallback materials</h5>
По возможности средства разработки должны предоставлять запасное определение материала и помечать расширение KHR_materials_unlit как дополнительное/необязательное.
Модели, включающие данное расширение, дополнительно будут по-прежнему отображаться на всех клиентах, которые поддерживают базовую спецификацию glTF 2.0, отступая назад к  металлическому (metal)/ шероховатому (rough) материалу PBR.
В клиентах, не поддерживающих расширение, будет применено непосредственное освещение и производительность может ухудшиться.
When possible, authoring tools should provide a fallback material definition and mark the KHR_materials_unlit extension as optional. Models including the extension optionally will still render in all clients that support the core glTF 2.0 specification, falling back to a PBR metal/rough material. In clients that do not support the extension, direct lighting will be applied and performance may be degraded.<br><br>

Defining a fallback to the default PBR shading model is achieved by setting appropriate parameters on the default material.

<pre>"materials": [
  {
    "name": "unlit_with_fallback",
    "pbrMetallicRoughness": {
      "baseColorFactor": [ 1.0, 1.0, 1.0, 1.0 ],
      "baseColorTexture": { "index": 0 },
      "roughnessFactor": 0.9,
      "metallicFactor": 0.0
    },
    "extensions": {
      "KHR_materials_unlit": {}
    }
  }
]</pre>
<div class=note><b>Примечание по реализации:</b> For best fallback behavior in clients, которые не реализуют расширение KHR_materials_unlit, средства разработки могут использовать:<br>
&nbsp; &#9679; &nbsp; <tt>metallicFactor</tt> установленный как&nbsp;<tt>0</tt>, а <tt>emissiveFactor</tt> равный&nbsp;<tt>[0, 0, 0]</tt>.<br>
&nbsp; &#9679; &nbsp; <tt>roughnessFactor</tt> установленный больше чем&nbsp;<tt>0.5</tt>.<br>
&nbsp; &#9679; &nbsp; <tt>metallicRoughnessTexture</tt>, <tt>occlusionTexture</tt>, <tt>emissiveTexture</tt> и <tt>normalTexture</tt> не указываются.</div>
<div class=note><b>Примечание по реализации:</b> Если расширение KHR_materials_unlit включено с другим расширением, определяющим теневую модель того же материала, результат будет неопределенным.</div><br><br></div></div>

<div class=list><a class='link' onclick='javascript:show_txt(this)' onmouseover="show('texture transform - трансформация (изменение) текстуры')" onmouseout="hide()">KHR_texture_transform</a>
<div style='display:none;' onclick='javascript:show_txt(this)'>Для оптимизации ресурсов, применяемых в 3d сцене, можно использовать множество способов. Главным среди них является возможность минимизировать количество текстур, загружаемых в видеопроцессор (GPU).
Чтобы добиться этого, большинство движков предлагают упаковывать несколько текстур объекта с низким разрешением в один большой текстурный атлас.
Область, соответствующая каждому объекту, в получившемся атласе, затем определяется вертикальным и горизонтальным смещениями, а также шириной и высотой области.<br><br>
Для поддержки такого варианта использования, данное расширение добавляет в структуры <tt>textureInfo</tt> свойства <tt>offset</tt> (смещение), <tt>rotation</tt> (поворот) и <tt>scale</tt> (масштаб).
Эти свойства обычно реализуются как <a href="https://ru.wikipedia.org/wiki/%D0%90%D1%84%D1%84%D0%B8%D0%BD%D0%BD%D0%BE%D0%B5_%D0%BF%D1%80%D0%B5%D0%BE%D0%B1%D1%80%D0%B0%D0%B7%D0%BE%D0%B2%D0%B0%D0%BD%D0%B8%D0%B5" target="_blank" onclick='no_js(event)'>афинное преобразование</a> <tt>UV</tt> координат.
В коде <a href="https://ru.wikipedia.org/wiki/OpenGL_Shading_Language" target="_blank" onmouseover="show('GLSL (Graphics Library Shader Language) — язык высокого<br>уровня для программирования шейдеров. Разработан для<br>выполнения математики, которая обычно требуется для<br>выполнения растеризации графики.')" onmouseout="hide()" onclick='no_js(event)'>GLSL</a>:
<pre>varying in vec2 Uv;<br>
uniform vec2 Offset, Scale;
uniform float Rotation;<br>
mat3 translation = mat3(1,0,0, 0,1,0, Offset.x, Offset.y, 1);
mat3 rotation = mat3(
  cos(Rotation), sin(Rotation), 0,
 -sin(Rotation), cos(Rotation), 0,
              0,             0, 1
);
mat3 scale = mat3(Scale.x,0,0, 0,Scale.y,0, 0,0,1);<br>
mat3 matrix = translation * rotation * scale;
vec2 uvTransformed = ( matrix * vec3(Uv.xy, 1) ).xy;</pre>
Это равнозначно <tt>Material#SetTextureOffset</tt> и <tt>Material#SetTextureScale</tt> в <a href="https://unity3d.com/ru" target="_blank" onmouseover="show('Unity — межплатформенная среда разработки компьютерных игр.<br>Unity позволяет создавать приложения, работающие под более<br>чем 20 различными операционными системами, включающими<br>персональные компьютеры, игровые консоли, мобильные устройства,<br>интернет-приложения и другие. Выпуск Unity состоялся в 2005 году<br>и с того времени идёт постоянное развитие.<br>Основными преимуществами Unity являются наличие визуальной среды<br>разработки, межплатформенной поддержки и модульной системы<br>компонентов. К недостаткам относят появление сложностей при<br>работе с многокомпонентными схемами и затруднения при<br>подключении внешних библиотек.')" onmouseout="hide()" onclick='no_js(event)'>Unity</a> или <tt>Texture#offset</tt> и <tt>Texture#repeat</tt> в Three.js.
На сегодняшний день, поворот UV-координат широко не поддерживается, но здесь включен заблаговременно для совместимости.<br><br>

<h5>Обновления схемы glTF</h5>
Расширение KHR_texture_transform может определяться в структурах <tt>textureInfo</tt> и содержать следующие свойства:
<table class="tbl_1" border="1" cellpadding="5">
<tr class="head"><td>Название<br>Name</td><td>Тип значения<br>Type</td><td>Значение<br>по умолчанию<br>Default</td><td>Описание<br>Description</td></tr>
<tr align=center><td><tt><span class="lnk" onmouseover="show('offset - смещение')" onmouseout="hide()">offset</span></tt></td><td><tt><span class="lnk" onmouseover="show('массив из двух значений')" onmouseout="hide()">array[2]</span></tt></td><td><tt>[0.0, 0.0]</tt></td><td align=left>Смещение начала <tt>UV</tt> координат как коэффициент размерности текстуры.</td></tr>
<tr align=center><td><tt><span class="lnk" onmouseover="show('rotation - поворот')" onmouseout="hide()">rotation</span></tt></td><td><tt><span class="lnk" onmouseover="show('number - число')" onmouseout="hide()">number</span></tt></td><td><tt>0.0</tt></td>
<td align=left>Поворот <tt>UV</tt> координат на указанное число радиан вокруг начала координат против часовой стрелки. Это равносильно аналогичному повороту изображения по часовой стрелке.</td></tr>
<tr align=center><td><tt><span class="lnk" onmouseover="show('scale - масштаб')" onmouseout="hide()">scale</span></tt></td><td><tt><span class="lnk" onmouseover="show('массив из двух значений')" onmouseout="hide()">array[2]</span></tt></td><td><tt>[1.0, 1.0]</tt></td>
<td align=left>Коэффициент масштабирования, применяемый к элементам <tt>UV</tt> координат.</td></tr>
<tr align=center><td><tt><span class="lnk" onmouseover="show('texCoord')" onmouseout="hide()">texCoord</span></tt></td><td><tt><span class="lnk" onmouseover="show('integer - целое число')" onmouseout="hide()">integer</span></tt></td><td></td><td align=left>
Переопределяет <tt>textureInfo</tt>, если представлено значение <tt>texCoord</tt> и поддерживается данное расширение.</td></tr></table>
Несмотря на то, что значения данного расширения неограничены, они будут давать вменяемые результаты только в том случае, если режим укладки текстуры модели установлен как <tt>REPEAT</tt> (т.е. повторяющийся),
или когда результат конечного преобразования UV-координат находятся в диапазоне <tt>[0, 1]</tt> (т.е. настройки масштаба (<tt>scale</tt>) отрицательны, а смещения (<tt>offset</tt>), соответственно, положительны).<br><br>
<div class=note><b>Примечание по реализации:</b> Для максимальной совместимости рекомендуется, чтобы экспортеры генерировали наборы UV-координат как с применением преобразований, так и без них,
использовали в поле текстуры <tt>texCoord</tt> набор после преобразования, затем набор перед преобразованием с данным расширением.
Таким образом, модель по-прежнему будет корректно отображаться, даже если расширение не поддерживается используемым движком.
Одновременное включение и того и другого увеличит размер модели, так что, если включение резервного набора UV-координат слишком обременительно,
либо добавьте это расширение к обязательным расширениям (Required), либо используйте в обоих местах одно и то же значение <tt>texCoord</tt>.</div>
<div class=note><b>Примечание по реализации:</b> Исходя из основной спецификации по glTF, начало&nbsp;<tt>UV</tt> координат&nbsp;<tt>(0, 0)</tt> соответствует верхнему левому углу изображения текстуры.</div><br>

<h5>Схема JSON</h5>
<a href="https://github.com/KhronosGroup/glTF/blob/master/extensions/2.0/Khronos/KHR_texture_transform/schema/KHR_texture_transform.textureInfo.schema.json" target="_blank" onclick='no_js(event)'>KHR_texture_transform.textureInfo.schema.json</a><br><br>

<h5>Пример в формате JSON</h5>
В этом примере выполняется поворот на&nbsp;<tt>90&#176;</tt> по часовой стрелке только нижнего левого квадранта исходного изображения.
<pre>{
  "materials": [{
    "emissiveTexture": {
      "index": 0,
      "extensions": {
        "KHR_texture_transform": {
          "offset": [0, 1],
          "rotation": 1.57079632679,
          "scale": [0.5, 0.5]
        }
      }
    }
  }]
}</pre>
В этом примере выполняется переворот по оси&nbsp;<tt>T</tt>, что позволяет фактически установить начало координат в нижний левый угол.
<pre>{
  "materials": [{
    "emissiveTexture": {
      "index": 0,
      "extensions": {
        "KHR_texture_transform": {
          "offset": [0, 1],
          "scale": [1, -1]
        }
      }
    }
  }]
}</pre></div></div><br>

<h4>Пример</h4>
<pre>// Instantiate a exporter (создаем экземпляр экспортера)
var exporter = new THREE.GLTFExporter();<br>
// Parse the input and generate the glTF output
// анализ входных данных и генерация выходных данных glTF
exporter.parse( scene, function ( gltf ) {
  console.log( gltf );
  downloadJSON( gltf );
}, options );</pre>
<h5>Другие примеры:</h5>
<pre><a href="https://threejs.org/examples/#misc_exporter_gltf" target="_blank">misc / exporter / gltf</a></pre><br>

<h4>Конструктор</h4>
<pre>GLTFExporter( )</pre>
Создает новый GLTFExporter.<br><br>

<h4>Методы</h4>
<div class=blockindent><br>
<pre id="5.1parse"><span onclick="showClick(type_null)"><a href="#" onclick="return false" onblur="hideClick()" onmouseover="show('parse - разбор, синтаксический анализ')" onmouseout="hide()">.parse</a></span>( <a href="core.htm#14" onmouseover="show('Object3D.<br>input - вход, входные данные')" onmouseout="hide()">input</a>, <span onclick="showClick(type_func)"><a href="#" onclick="return false" onblur="hideClick()" onmouseover="show('on completed - по завершению')" onmouseout="hide()">onCompleted</a></span>, <span onclick="showClick(type_obj)"><a href="#" onclick="return false" onblur="hideClick()" onmouseover="show('options - опции, параметры')" onmouseout="hide()">options</a></span> )</pre>
<div class=list><tt>input</tt> — сцены или объекты для экспорта. Допустимые параметры:<br>
&nbsp; &#9679; &nbsp; экспорт сцен
<pre>exporter.parse( scene1, ...)</pre>
<pre>exporter.parse( [ scene1, scene2 ], ...)</pre>
&nbsp; &#9679; &nbsp; экспорт объектов (при этом создается новая сцена для хранения всех объектов)
<pre>exporter.parse( object1, ...)</pre>
<pre>exporter.parse( [ object1, object2 ], ...)</pre>
&nbsp; &#9679; &nbsp; смесь сцен и объектов (при этом, как обычно, экспортируются сцены, но будет создана новая сцена для хранения всех одиночных объектов.
<pre>exporter.parse( [ scene1, object1, object2, scene2 ], ...)</pre></div>

<div class=list><tt>onCompleted</tt> — функция, которая будет вызвана по завершению экспорта. Её аргументом будет созданный glTF-ресурс в виде JSON или бинарного буферного массива.</div>
<div class=list><tt>options</tt> - параметры экспорта<br>
&nbsp; &#9679; &nbsp; <tt><span onclick="showClick(type_bool)"><a href="#" onclick="return false" onblur="hideClick()" onmouseover="show('trs - это похоже на сокращение англ.<br>слов translation, rotation, scale -<br>перевод, поворот, масштаб')" onmouseout="hide()">trs</a></span></tt>
- экспорт позиции (<tt>position</tt>), поворота (<tt>rotation</tt>) и масштаба (<tt>scale</tt>) вместо матрицы каждого узла. Значением по умолчанию является&nbsp;<tt>false</tt>.<br>
&nbsp; &#9679; &nbsp; <tt><span onclick="showClick(type_bool)"><a href="#" onclick="return false" onblur="hideClick()" onmouseover="show('only visible - только видимый')" onmouseout="hide()">onlyVisible</a></span></tt>
- экспорт только видимых объектов. Значением по умолчанию является&nbsp;<tt>true</tt>.<br>
&nbsp; &#9679; &nbsp; <tt><span onclick="showClick(type_bool)"><a href="#" onclick="return false" onblur="hideClick()" onmouseover="show('truncate draw range - обрезать (сократить) область рисования')" onmouseout="hide()">truncateDrawRange</a></span></tt>
- экспорт только атрибутов внутри <tt><a href="core.htm#2drawRange" onmouseover="show('BufferGeometry.drawRange')" onmouseout="hide()">drawRange</a></tt> (если он определен), вместо экспорта всего массива.
Значением по умолчанию является&nbsp;<tt>true</tt>.<br>
&nbsp; &#9679; &nbsp; <tt><span onclick="showClick(type_bool)"><a href="#" onclick="return false" onblur="hideClick()" onmouseover="show('binary - бинарный, двоичный')" onmouseout="hide()">binary</a></span></tt>
- экспорт в бинарном (<tt>glb</tt>) формате, возвращается буферный массив. Значением по умолчанию является&nbsp;<tt>false</tt>.<br>
&nbsp; &#9679; &nbsp; <tt><span onclick="showClick(type_bool)"><a href="#" onclick="return false" onblur="hideClick()" onmouseover="show('embed images - встроенные изображения')" onmouseout="hide()">embedImages</a></span></tt>
- экспорт с изображениями встроенными в glTF ресурс. Значением по умолчанию является&nbsp;<tt>true</tt>.<br>
&nbsp; &#9679; &nbsp; <tt><span onclick="showClick(type_array)"><a href="#" onclick="return false" onblur="hideClick()" onmouseover="show('animations - анимации')" onmouseout="hide()">animations</a></span></tt> - массив <a href="animation.htm#2" onmouseover="show('AnimationClip')" onmouseout="hide()">&lt;AnimationClip&gt;</a>. Список анимаций, которые будут включены в экспорт.<br>
&nbsp; &#9679; &nbsp; <tt><span onclick="showClick(type_bool)"><a href="#" onclick="return false" onblur="hideClick()" onmouseover="show('force indices - навязать индексы')" onmouseout="hide()">forceIndices</a></span></tt>
- создать индексы для неиндексированного геометрического элемента и экспортировать с ними. Значением по умолчанию является&nbsp;<tt>false</tt>.<br>
&nbsp; &#9679; &nbsp; <tt><span onclick="showClick(type_bool)"><a href="#" onclick="return false" onblur="hideClick()" onmouseover="show('force power of two textures - привести текстуры<br>к размерам, равным степени двойки')" onmouseout="hide()">forcePowerOfTwoTextures</a></span></tt>
- экспорт с изображениями, чей размер приведен к ближайшему значению степени двойки.
Эта опция работает только если параметр <tt>embedImages</tt> установлен как&nbsp;<tt>true</tt>. Значением по умолчанию является&nbsp;<tt>false</tt>.</div>
Метод создает glTF-ресурс в виде JSON или бинарного буферного массива (<tt>glb</tt>) из входных данных (сцены или объектов).</div><br>

<h4>Исходники</h4>
<div class=blockindent><a href="https://github.com/mrdoob/three.js/blob/dev/examples/js/exporters/GLTFExporter.js" target="_blank">GLTFExporter.js на github.com</a></div><br><br>


<h3 id="5.2">PLYExporter</h3>
Экспортер данных в формате <em>PLY</em>.<br>
<a href="https://ru.wikipedia.org/wiki/PLY" target="_blank">PLY</a> (известный также как Polygon File Format и Stanford Triangle Format) - это формат файлов для эффективной передачи и загрузки простых статичных трехмерных данных в уплотненном формате, например 3D сканеров.
Формат хранения данных поддерживает относительно простое описание одиночного объекта как списка условно плоских полигонов.
Поддерживаются оба варианта формата: как ASCII, так и бинарная версия. Файл PLY может хранить позиции вершин, цвета, нормали и UV координаты. Текстуры и ссылки на текстуры не сохраняются.<br><br>

<h4>Пример</h4>
<pre>// Instantiate an exporter (создание экземпляра экспортера)
var exporter = new THREE.PLYExporter();<br>
// Parse the input and generate the ply output
// анализ входных данных и генерация выходных данных в формате ply
var data = exporter.parse( scene, options );
downloadFile(data);</pre><br>

<h4>Конструктор</h4>
<pre>PLYExporter()</pre>
Создает новый PLYExporter.<br><br>

<h4>Методы</h4>
<div class=blockindent><br>
<pre id="5.2parse"><span onclick="showClick(type_null)"><a href="#" onclick="return false" onblur="hideClick()" onmouseover="show('parse - разбор, синтаксический анализ')" onmouseout="hide()">.parse</a></span>( <a href="core.htm#14" onmouseover="show('Object3D.<br>input - вход, входные данные')" onmouseout="hide()">input</a>, <span onclick="showClick(type_func)"><a href="#" onclick="return false" onblur="hideClick()" onmouseover="show('on done - на сделанном, законченном')" onmouseout="hide()">onDone</a></span>, <span onclick="showClick(type_obj)"><a href="#" onclick="return false" onblur="hideClick()" onmouseover="show('options - опции, параметры')" onmouseout="hide()">options</a></span> )</pre>
<div class=list><tt>input</tt> — Object3D</div>
<div class=list><tt>onDone</tt> — функция, которая будет вызвана по завершению экспорта. Аргументом этой функции будет созданный ресурс <tt>ply</tt> в виде ascii или в бинарной форме - как буферный массив.</div>
<div class=list><tt>options</tt> — параметры экспорта<br>
&nbsp; &#9679; &nbsp; <tt><span onclick="showClick(type_array)"><a href="#" onclick="return false" onblur="hideClick()" onmouseover="show('exclude attributes - исключить атрибуты')" onmouseout="hide()">excludeAttributes</a></span></tt> - массив.
Определяет, какие свойства следует явно исключить из экспортированного PLY-файла. Действующими значениями являются '<tt>color</tt>', '<tt>normal</tt>', '<tt>uv</tt>', и '<tt>index</tt>'.
Если исключаются индексы треугольников, то экспортируется множество (облако) точек. Значением по умолчанию является пустой массив.<br>
&nbsp; &#9679; &nbsp; <tt><span onclick="showClick(type_bool)"><a href="#" onclick="return false" onblur="hideClick()" onmouseover="show('binary - бинарный, двоичный')" onmouseout="hide()">binary</a></span></tt> - логическое значение. Определяет, экспортировать ли в бинарном формате, возвращая буферный массив. Значением по умолчанию является&nbsp;<tt>false</tt>.</div>
Создает на выходе файл данных в формате <tt>ply</tt> в виде строки или буферного массива (ascii или бинарный) из входного объекта.
Возвращаемые данные также передаются функции, указанной в <tt>onDone</tt>, в качестве аргумента.
Если объект состоит из нескольких дочерних объектов и геометрических элементов, они объединяются в файле в одну сетку.</div><br>

<h4>Исходники</h4>
<div class=blockindent><a href="https://github.com/mrdoob/three.js/blob/dev/examples/js/exporters/PLYExporter.js" target="_blank">PLYExporter.js на github.com</a></div><br><br>


<h2 id="6">Плагины</h2><br>

<h3 id="6.1">Lut</h3>
Представляет <a href="https://ru.wikipedia.org/wiki/%D0%A2%D0%B0%D0%B1%D0%BB%D0%B8%D1%86%D0%B0_%D0%BF%D0%BE%D0%B8%D1%81%D0%BA%D0%B0" target="_blank" onmouseover="show('lut - сокращ. англ. слов lookup table - таблица поиска, просмотра')" onmouseout="hide()">таблицу поиска</a> для карт цвета.
Она используется для определения значений цвета из ряда значений данных.<br>
Вот ещё <a href="https://dic.academic.ru/dic.nsf/ruwiki/473635" target="_blank">статья о таблице поиска</a>.<br><br>

<h4>Пример</h4>
<pre>var lut = new THREE.Lut( "rainbow", 512 );
var data = [0, 10.1, 4.2, 3.4, 63, 28];
lut.setMax(63);
color = lut.getColor(10);</pre><br>

<h4>Конструктор</h4>
<pre>Lut( <span class="lnk" onmouseover="show('color map - карта цвета')" onmouseout="hide()">colormap</span>, <span onclick="showClick(type_float)"><a href="#" onclick="return false" onblur="hideClick()" onmouseover="show('number of colors - число значений цвета')" onmouseout="hide()">numberOfColors</a></span> )</pre>
<div class=list><tt>colormap</tt> — дополнительный, необязательный аргумент, устанавливающий цветовую карту из предустановленных цветовых карт.<br>
Доступны карты цвета: "<tt><span class="lnk" onmouseover="show('rainbow - радуга')" onmouseout="hide()">rainbow</span></tt>", "<tt><span class="lnk" onmouseover="show('cool to warm - (от) холодного к теплому')" onmouseout="hide()">cooltowarm</span></tt>", "<tt><span class="lnk" onmouseover="show('black body - черное тело')" onmouseout="hide()">blackbody</span></tt>", "<tt><span class="lnk" onmouseover="show('gray scale - шкала серого цвета, шкала полутонов')" onmouseout="hide()">grayscale</span></tt>".</div>
<div class=list><tt>numberOfColors</tt> — дополнительный, необязательный аргумент, который устанавливает количество значений цвета, используемых для представления  массива данных.</div><br>

<h4>Свойства</h4>
<div class="blockindent"><br>
<pre id="6.1minV"><span onclick="showClick(type_float)"><a href="#" onclick="return false" onblur="hideClick()" onmouseover="show('minV - сокращ. англ. слов minimum value - минимальное значение')" onmouseout="hide()">.minV</a></span></pre>
Минимальное значение, которое должно быть представлено в таблице поиска. Значение по умолчанию равно&nbsp;<tt>0</tt>.<br><br>

<pre id="6.1maxV"><span onclick="showClick(type_float)"><a href="#" onclick="return false" onblur="hideClick()" onmouseover="show('maxV - сокращ. англ. слов maximum value - максимальное значение')" onmouseout="hide()">.maxV</a></span></pre>
Максимальное значение, которое должно быть представлено в таблице поиска. Значение по умолчанию равно&nbsp;<tt>1</tt>.<br><br>

<pre id="6.1legend"><span class="lnk" onmouseover="show('legend - легенда, надпись, условное обозначение')" onmouseout="hide()">.legend</span></pre>
Обозначение (легенда) таблицы поиска.</div><br>

<h4>Методы</h4>
<div class=blockindent><br>
<pre id="6.1copy"><span onclick="showClick(type_null)"><a href="#" onclick="return false" onblur="hideClick()" onmouseover="show('copy - копировать')" onmouseout="hide()">.copy</a></span>( <a href="#6.1" onmouseover="show('Lut.<br>lut - сокращ. англ. слов lookup table - таблица поиска, просмотра')" onmouseout="hide()">lut</a> ) <a href="#6.1" onmouseover="show('Lut.<br>this - этот, данный')" onmouseout="hide()">this</a></pre>
<div class=list><tt>color</tt> — копируемая таблица поиска.</div>
Копирует заданную таблицу поиска.<br><br>

<pre id="6.1setLegendOn"><a href="#6.1" onmouseover="show('Lut.<br>set legend on - установить со включенной легендой')" onmouseout="hide()">.setLegendOn</a>( <span onclick="showClick(type_obj)"><a href="#" onclick="return false" onblur="hideClick()" onmouseover="show('parameters - параметры')" onmouseout="hide()">parameters</a></span> )</pre>
<div class=list><tt>parameters</tt> —<br>
<tt>{ layout: value,</tt> <tt>position: { x: value, y: value, z: value },</tt> <tt>dimensions: { width: value, height: value } }</tt><br>
&nbsp; &#9679; &nbsp; <tt><span class="lnk" onmouseover="show('layout - расположение, планировка, схема')" onmouseout="hide()">layout</span></tt> — горизонтальное (<tt>'horizontal'</tt>) или вертикальное (<tt>'vertical'</tt>) расположение.
Значением по умолчанию является <tt>'vertical'</tt> - вертикальное.<br>
&nbsp; &#9679; &nbsp; <tt><span class="lnk" onmouseover="show('position - позиция, положение, место')" onmouseout="hide()">position</span></tt> — положение легенды в координатах <tt>x</tt>, <tt>y</tt>, <tt>z</tt>. Значением по умолчанию является <tt>{ 'x': 4, 'y': 0, 'z': 0 }</tt>.<br>
&nbsp; &#9679; &nbsp; <tt><span class="lnk" onmouseover="show('dimensions - размеры')" onmouseout="hide()">dimensions</span></tt> — размеры (ширина (width) и высота (height)) легенды. Значением по умолчанию является <tt>{ 'width': 0.5, 'height': 3 }</tt>.</div>
Метод устанавливает данную таблицу поиска с легендой.<br><br>

<pre id="6.1setLegendOff"><a href="#6.1" onmouseover="show('Lut.<br>set legend off - установить с выключенной легендой')" onmouseout="hide()">.setLegendOff</a></pre>
Метод устанавливает данную таблицу поиска без легенды.<br><br>

<pre id="6.1setLegendLabels"><a href="#6.1" onmouseover="show('Lut.<br>set legend labels - установить метки легенды')" onmouseout="hide()">.setLegendLabels</a>( <span onclick="showClick(type_obj)"><a href="#" onclick="return false" onblur="hideClick()" onmouseover="show('parameters - параметры')" onmouseout="hide()">parameters</a></span>, <span onclick="showClick(type_func)"><a href="#" onclick="return false" onblur="hideClick()" onmouseover="show('callback - обратный (повторный) вызов')" onmouseout="hide()">callback</a></span> )</pre>
<div class=list><tt>parameters</tt> —
<tt>{ fontsize: value, fontface: value, title: value, um: value, ticks: value, decimal: value, notation: value }</tt><br>
&nbsp; &#9679; &nbsp; <tt>fontsize</tt> — размер шрифта, используемого для надписей. Значение по умолчанию равно&nbsp;<tt>24</tt>.<br>
&nbsp; &#9679; &nbsp; <tt>fontface</tt> — тип шрифта, используемого для надписей. Значением по умолчанию является <tt>'Arial'</tt>.<br>
&nbsp; &#9679; &nbsp; <tt>title</tt> — заголовок (название) легенды. Значением по умолчанию является пустая строка&nbsp;<tt>''</tt>.<br>
&nbsp; &#9679; &nbsp; <tt>um</tt> — единицы измерения значений легенды. Значением по умолчанию является пустая строка&nbsp;<tt>''</tt>.<br>
&nbsp; &#9679; &nbsp; <tt>ticks</tt> — число тиков отображения легенды. Значение по умолчанию равно&nbsp;<tt>0</tt>.<br>
&nbsp; &#9679; &nbsp; <tt>decimal</tt> — число десятичных знаков, которые будут использоваться для значений легенды. Значение по умолчанию равно&nbsp;<tt>2</tt>.<br>
&nbsp; &#9679; &nbsp; <tt>notation</tt> — нотация (форма записи) легенды: <span class="lnk" onmouseover="show('standard - стандартная или обычная форма<br>записи чисел, т.е. десятичная')" onmouseout="hide()"><tt>'standard'</tt></span> (значение по умолчанию) или <span class="lnk" onmouseover="show('scientific - &quot;научная&quot; форма записи чисел, например - 1e3<br>т.е. в обычной записи это будет 1000')" onmouseout="hide()"><tt>'scientific'</tt></span>.</div>
<div class=list><tt>callback</tt> — дополнительная, необязательная функция обратного вызова, которая будет использоваться для форматирования меток (label) легенды.</div>
Метод устанавливает метки (label) легенды данной таблицы поиска (Lut).<br><br>

<pre id="6.1setminV"><a href="#6.1" onmouseover="show('Lut.<br>set minV - установить значение minV')" onmouseout="hide()">.setminV</a>( <span onclick="showClick(type_float)"><a href="#" onclick="return false" onblur="hideClick()" onmouseover="show('minV - сокращ. англ. слов minimum value - минимальное значение')" onmouseout="hide()">minV</a></span> )</pre>
<div class=list><tt>minV</tt> — минимальное значение, которое должно быть представлено в таблице поиска.</div>
Устанавливает данную таблицу просмотра (Lut) с представленным минимальным значением.<br><br>

<pre id="6.1setmaxV"><a href="#6.1" onmouseover="show('Lut.<br>set maxV - установить значение maxV')" onmouseout="hide()">.setmaxV</a>( <span onclick="showClick(type_float)"><a href="#" onclick="return false" onblur="hideClick()" onmouseover="show('maxV - сокращ. англ. слов maximum value - максимальное значение')" onmouseout="hide()">maxV</a></span> )</pre>
<div class=list><tt>maxV</tt> - максимальное значение, которое должно быть представлено в таблице поиска.</div>
Устанавливает данную таблицу просмотра (Lut) с представленным максимальным значением.<br><br>

<pre id="6.1changeNumberOfColors"><a href="#6.1" onmouseover="show('Lut.<br>change number of colors - изменить число значений цвета')" onmouseout="hide()">.changeNumberOfColors</a>( <span onclick="showClick(type_float)"><a href="#" onclick="return false" onblur="hideClick()" onmouseover="show('number of colors - число значений цвета')" onmouseout="hide()">numberOfColors</a></span> )</pre>
<div class=list><tt>numberOfColors</tt> — количество значений цвета, используемых для представления  массива данных.</div>
Устанавливает данную таблицу поиска (Lut) с количеством используемых значений цвета.<br><br>

<pre id="6.1changeColorMap"><a href="#6.1" onmouseover="show('Lut.<br>change color map - изменить карту цвета')" onmouseout="hide()">.changeColorMap</a>( <span onclick="showClick(type_float)"><a href="#" onclick="return false" onblur="hideClick()" onmouseover="show('color map - карта цвета')" onmouseout="hide()">colorMap</a></span> )</pre>
<div class=list><tt>colorMap</tt> — название карты цвета, которая будет использоваться для представления массива данных.</div>
Метод устанавливает данную таблицу поиска (Lut) для использования с указанной картой цвета.<br><br>

<pre id="6.1addColorMap"><a href="#6.1" onmouseover="show('Lut.<br>add color map - добавить карту цвета')" onmouseout="hide()">.addColorMap</a>( <span onclick="showClick(type_string)"><a href="#" onclick="return false" onblur="hideClick()" onmouseover="show('color map name - название карты цвета')" onmouseout="hide()">colorMapName</a></span>, <span onclick="showClick(type_array)"><a href="#" onclick="return false" onblur="hideClick()" onmouseover="show('array of colors - массив (значений) цвета')" onmouseout="hide()">arrayOfColors</a></span> )</pre>
Метод помещает новую карту цвета (с названием, указанным в аргументе <tt>colorMapName</tt>, и массивом значений цвета из <tt>arrayOfColors</tt>) в набор доступных карт цвета.<br><br>

<pre id="6.1getColor"><a href="#6.1" onmouseover="show('Lut.<br>get color - получить цвет')" onmouseout="hide()">.getColor</a>( value ) <a href="#6.1" onmouseover="show('Lut.<br>this - этот, данный')" onmouseout="hide()">this</a></pre>
<div class=list><tt>value</tt> — значение данных, отображаемое в виде цвета.</div>
Метод возвращает <a href="math.htm#3" onmouseover="show('Color')" onmouseout="hide()">Color</a>.</div><br>

<h4>Исходники</h4>
<div class=blockindent><a href="https://github.com/mrdoob/three.js/blob/master/examples/js/math/Lut.js" target="_blank">Lut.js на github.com</a></div><br><br>


<h2 id="7">QuickHull</h2>
Алгоритм быстрой оболочки (QuickHull) — алгоритм построения <a href="https://ru.wikipedia.org/wiki/%D0%92%D1%8B%D0%BF%D1%83%D0%BA%D0%BB%D0%B0%D1%8F_%D0%BE%D0%B1%D0%BE%D0%BB%D0%BE%D1%87%D0%BA%D0%B0" target="_blank">выпуклой оболочки</a> на плоскости. Использует идею <a href="https://ru.wikipedia.org/wiki/%D0%91%D1%8B%D1%81%D1%82%D1%80%D0%B0%D1%8F_%D1%81%D0%BE%D1%80%D1%82%D0%B8%D1%80%D0%BE%D0%B2%D0%BA%D0%B0" target="_blank">быстрой сортировки Хоара</a>.<br>
Статья русскоязычной Википедии <a href="https://ru.wikipedia.org/wiki/%D0%90%D0%BB%D0%B3%D0%BE%D1%80%D0%B8%D1%82%D0%BC_%D0%B1%D1%8B%D1%81%D1%82%D1%80%D0%BE%D0%B9_%D0%BE%D0%B1%D0%BE%D0%BB%D0%BE%D1%87%D0%BA%D0%B8" target="_blank">"Алгоритм быстрой оболочки"</a>.<br>
Статья англоязычной Википедии <a href="https://en.wikipedia.org/wiki/Quickhull" target="_blank">"QuickHull"</a>.<br>
Общие сведения об алгоритме Quickhull: <span class="lnk" onmouseover="show('лекция Дирк Григориус на конференции<br>разработчиков игр в марте 2014 года')" onmouseout="hide()">Dirk Gregorius. March 2014, Game Developers Conference</span>: <a href="http://media.steampowered.com/apps/valve/2014/DirkGregorius_ImplementingQuickHull.pdf" target="_blank">Implementing QuickHull</a> (Реализация алгоритма QuickHull).<br>
Вот <a href="https://archive.org/details/GDC2014Gregorius" target="_blank">видеоролик</a> с этой презентацией.
Перевод этой статьи на русский язык <a href="https://customizer.github.io/DirkGregorius_QuickHull.ru/DirkGregorius_ImplementingQuickHull.htm" target="_blank">здесь</a>.<br>

<h3 id="7.1">Face</h3>
Представляет секцию, ограниченную определенным числом полуребер. Текущая реализация предполагает, что грань всегда состоит из трех ребер.<br><br>

<h4>Конструктор</h4>
<pre>Face( )</pre>
<br>

<h4>Свойства</h4>
<div class=blockindent><br>
<pre id="7.1normal"><a href="math.htm#19" onmouseover="show('Vector3.<br>normal - нормаль')" onmouseout="hide()">.normal</a></pre>
Вектор нормали к грани. Значением по умолчанию является <a href="math.htm#19" onmouseover="show('Vector3')" onmouseout="hide()">трехмерный вектор</a> <tt>(0, 0, 0)</tt>.<br><br>

<pre id="7.1midpoint"><a href="math.htm#19" onmouseover="show('Vector3.<br>midpoint - средняя точка')" onmouseout="hide()">.midpoint</a></pre>
Средняя точка или центроид грани. Значением по умолчанию является <a href="math.htm#19" onmouseover="show('Vector3')" onmouseout="hide()">трехмерный вектор</a> <tt>(0, 0, 0)</tt>.<br><br>

<pre id="7.1area"><span onclick="showClick(type_float)"><a href="#" onclick="return false" onblur="hideClick()" onmouseover="show('area - площадь')" onmouseout="hide()">.area</a></span></pre>
Площадь грани. Значение по умолчанию равно&nbsp;<tt>0</tt>.<br><br>

<pre id="7.1constant"><span onclick="showClick(type_float)"><a href="#" onclick="return false" onblur="hideClick()" onmouseover="show('constant - постоянная, константа')" onmouseout="hide()">.constant</a></span></pre>
Знаковое расстояние от грани до начала координат. Значение по умолчанию равно&nbsp;<tt>0</tt>.<br><br>

<pre id="7.1outside"><a href="#7.4" onmouseover="show('VertexNode.<br>outside - за пределами, снаружи')" onmouseout="hide()">.outside</a></pre>
Ссылка на вершину в списке вершин, которые может видеть данная грань. Значением по умолчанию является&nbsp;<tt>null</tt>.<br><br>

<pre id="7.1mark"><span onclick="showClick(type_int)"><a href="#" onclick="return false" onblur="hideClick()" onmouseover="show('mark - метка')" onmouseout="hide()">.mark</a></span></pre>
Свойство указывает, видима грань или удалена. Значением по умолчанию является <tt>Visible</tt>.<br><br>

<pre id="7.1edge"><a href="#7.2" onmouseover="show('HalfEdge.<br>edge - ребро, край')" onmouseout="hide()">.edge</a></pre>
Ссылка на базовое ребро грани. Для получения всех ребер можно воспользоваться ссылкой <tt><a href="#7.2next" onmouseover="show('HalfEdge.next')" onmouseout="hide()">next</a></tt> текущей грани. Значением по умолчанию является&nbsp;<tt>null</tt>.</div><br>

<h4>Методы</h4>
<div class=blockindent><br>
<pre id="7.1create"><a href="#7.1" onmouseover="show('Face.<br>create - создать')" onmouseout="hide()">.create</a>( <a href="#7.4" onmouseover="show('VertexNode')" onmouseout="hide()">a</a>, <a href="#7.4" onmouseover="show('VertexNode')" onmouseout="hide()">b</a>, <a href="#7.4" onmouseover="show('VertexNode')" onmouseout="hide()">c</a> )</pre>
<div class=list><tt>a</tt> - первая вершина грани.</div>
<div class=list><tt>b</tt> - вторая вершина грани.</div>
<div class=list><tt>c</tt> - третья вершина грани.</div>
Создает грань.<br><br>

<pre id="7.1getEdge"><a href="#7.2" onmouseover="show('HalfEdge.<br>get edge - получить ребро')" onmouseout="hide()">.getEdge</a>( <span onclick="showClick(type_int)"><a href="#" onclick="return false" onblur="hideClick()" onmouseover="show('i - сокращ. от англ. слова index - индекс')" onmouseout="hide()">i</a></span> )</pre>
<div class=list><tt>i</tt> - индекс ребра.</div>
Возвращает ребро по заданному индексу.<br><br>

<pre id="7.1compute"><a href="#7.1" onmouseover="show('Face.<br>compute - вычислить')" onmouseout="hide()">.compute</a>( )</pre>
Вычисляет все свойства этой грани.<br><br>

<pre id="7.1distanceToPoint"><span onclick="showClick(type_float)"><a href="#" onclick="return false" onblur="hideClick()" onmouseover="show('distance to point - расстояние до точки')" onmouseout="hide()">.distanceToPoint</a></span>( <a href="math.htm#19" onmouseover="show('Vector3.<br>point - точка')" onmouseout="hide()">point</a> )</pre>
<div class=list><tt>point</tt> - любая точка в трехмерном пространстве.</div>
Возвращает знаковое расстояние от заданной точки до плоскости, представленной данной гранью.</div><br>

<h4>Исходники</h4>
<div class=blockindent><a href="https://github.com/mrdoob/three.js/blob/master/examples/js/QuickHull.js" target="_blank">QuickHull.js на github.com</a></div><br><br>


<h3 id="7.2">HalfEdge</h3>
Основа для полурёберной структуры данных (half-edge data structure),
также известной как <a href="https://ru.wikipedia.org/wiki/%D0%94%D0%B2%D1%83%D1%81%D0%B2%D1%8F%D0%B7%D0%BD%D1%8B%D0%B9_%D1%81%D0%BF%D0%B8%D1%81%D0%BE%D0%BA_%D1%80%D1%91%D0%B1%D0%B5%D1%80" target="_blank">двусвязный список рёбер</a>
(doubly connected edge list - DCEL).<br><br>

<h4>Конструктор</h4>
<pre>HalfEdge( <a href="#7.4" onmouseover="show('VertexNode.<br>vertex - вершина')" onmouseout="hide()">vertex</a>, <a href="#7.1" onmouseover="show('Face.<br>face - грань')" onmouseout="hide()">face</a> )</pre>
<div class=list><tt>vertex</tt> - ссылка на свою целевую вершину.</div>
<div class=list><tt>face</tt> - ссылка на свою грань.</div><br>

<h4>Свойства</h4>
<div class=blockindent><br>
<pre id="7.2vertex"><a href="#7.4" onmouseover="show('VertexNode.<br>vertex - вершина')" onmouseout="hide()">.vertex</a></pre>
Ссылка на целевую вершину. Исходная вершина может быть получена при помощи запроса целевой вершины своего полуребра-двойника или целевой вершины предыдущего полуребра.
Значением по умолчанию является <tt>undefined</tt>, т.е. значение не определено.<br><br>

<pre id="7.2prev"><a href="#7.2" onmouseover="show('HalfEdge.<br>prev - сокращ. англ. слова previous - предыдущий')" onmouseout="hide()">.prev</a></pre>
Ссылка на предыдущее полуребро той же самой грани. Значением по умолчанию является <tt>null</tt>.<br><br>

<pre id="7.2next"><a href="#7.2" onmouseover="show('HalfEdge.<br>next - следующий')" onmouseout="hide()">.next</a></pre>
Ссылка на следующее полуребро той же самой грани. Значением по умолчанию является <tt>null</tt>.<br><br>

<pre id="7.2twin"><a href="#7.2" onmouseover="show('HalfEdge.<br>twin - двойной')" onmouseout="hide()">.twin</a></pre>
Ссылка на парное полуребро (полуребро-близнец) для перехода на противоположную грань. Значением по умолчанию является <tt>null</tt>.<br><br>

<pre id="7.2face"><a href="#7.1" onmouseover="show('Face.<br>face - грань')" onmouseout="hide()">.face</a></pre>
Каждое полуребро ограничивает отдельную грань и соответственно имеет ссылку на эту грань. Значением по умолчанию является <tt>undefined</tt>, т.е. значение не определено.</div><br>

<h4>Методы</h4>
<div class=blockindent><br>
<pre id="7.2head"><a href="#7.4" onmouseover="show('VertexNode.<br>head - голова')" onmouseout="hide()">.head</a>( )</pre>
Возвращает целевую вершину (вершину назначения).<br><br>

<pre id="7.2tail"><a href="#7.4" onmouseover="show('VertexNode.<br>tail - хвост')" onmouseout="hide()">.tail</a>()</pre>
Возвращает исходную (начальную) вершину.<br><br>

<pre id="7.2length"><span onclick="showClick(type_float)"><a href="#" onclick="return false" onblur="hideClick()" onmouseover="show('length - длина')" onmouseout="hide()">.length</a></span>( )</pre>
Возвращает <a href="https://en.wikipedia.org/wiki/Euclidean_distance" target="_blank">эвклидову длину</a> (расстояние по прямой) ребра.<br>
Статья Википедии о <a href="https://ru.wikipedia.org/wiki/%D0%95%D0%B2%D0%BA%D0%BB%D0%B8%D0%B4%D0%BE%D0%B2%D0%B0_%D0%BC%D0%B5%D1%82%D1%80%D0%B8%D0%BA%D0%B0" target="_blank">эвклидовом расстоянии</a> на русском языке.<br><br>

<pre id="7.2lengthSquared"><span onclick="showClick(type_float)"><a href="#" onclick="return false" onblur="hideClick()" onmouseover="show('length squared - квадрат длины, или длина во второй степени')" onmouseout="hide()">.lengthSquared</a></span>( )</pre>
Возвращает квадрат <a href="https://en.wikipedia.org/wiki/Euclidean_distance" target="_blank">эвклидовой длины</a> (расстояние по прямой) ребра.<br>
Статья Википедии о <a href="https://ru.wikipedia.org/wiki/%D0%95%D0%B2%D0%BA%D0%BB%D0%B8%D0%B4%D0%BE%D0%B2%D0%B0_%D0%BC%D0%B5%D1%82%D1%80%D0%B8%D0%BA%D0%B0" target="_blank">эвклидовом расстоянии</a> на русском языке.<br><br>

<pre id="7.2setTwin"><a href="#7.2" onmouseover="show('HalfEdge.<br>set twin - установить двойника (парное ребро)')" onmouseout="hide()">.setTwin</a>( <a href="#7.2" onmouseover="show('HalfEdge.<br>edge - ребро')" onmouseout="hide()">.edge</a> )</pre>
<div class=list><tt>edge</tt> - любое полуребро.</div>
Метод устанавливает парное ребро (ребро-близнец) к данному полуребру. Также он правильно устанавливает двойную ссылку заданного полуребра.</div><br>

<h4>Исходники</h4>
<div class=blockindent><a href="https://github.com/mrdoob/three.js/blob/master/examples/js/QuickHull.js" target="_blank">QuickHull.js на github.com</a></div><br><br>


<h3 id="7.3">QuickHull</h3>
Общие сведения об алгоритме Quickhull: <span class="lnk" onmouseover="show('лекция Дирк Григориус на конференции<br>разработчиков игр в марте 2014 года')" onmouseout="hide()">Dirk Gregorius. March 2014, Game Developers Conference</span>: <a href="http://media.steampowered.com/apps/valve/2014/DirkGregorius_ImplementingQuickHull.pdf" target="_blank">Implementing QuickHull</a> (Реализация алгоритма QuickHull).<br>
Вот <a href="https://archive.org/details/GDC2014Gregorius" target="_blank">видеоролик</a> с этой презентацией.
Перевод этой статьи на русский язык <a href="https://customizer.github.io/DirkGregorius_QuickHull.ru/DirkGregorius_ImplementingQuickHull.htm" target="_blank">здесь</a>.
<br><br>

<h4>Конструктор</h4>
<pre>QuickHull( )</pre><br>

<h4>Свойства</h4>
<div class=blockindent><br>
<pre id="7.3tolerance"><span onclick="showClick(type_float)"><a href="#" onclick="return false" onblur="hideClick()" onmouseover="show('tolerance - допустимое отклонение')" onmouseout="hide()">.tolerance</a></span></pre>
Значение эпсилон (epsilon), используемое для внутренних операций сравнения.
Вычисление этого значения зависит от размера геометрического элемента. Значение по умолчанию равно&nbsp;<tt>-1</tt>.<br><br>

<pre id="7.3faces"><span onclick="showClick(type_array)"><a href="#" onclick="return false" onblur="hideClick()" onmouseover="show('faces - грани')" onmouseout="hide()">.faces</a></span></pre>
Созданные грани выпуклой оболочки. Значением по умолчанию является пустой массив.<br><br>

<pre id="7.3newFaces"><span onclick="showClick(type_array)"><a href="#" onclick="return false" onblur="hideClick()" onmouseover="show('new faces - новые грани')" onmouseout="hide()">.newFaces</a></span></pre>
Данный массив содержит грани, созданные в течение одной итерации. Значением по умолчанию является пустой массив.<br><br>

<pre id="7.3assigned"><a href="#7.5" onmouseover="show('VertexList.<br>assigned - присвоить, назначить')" onmouseout="hide()">.assigned</a></pre>
Данный <a href="#7.5" onmouseover="show('VertexList')" onmouseout="hide()">список вершин</a> содержит все вершины, назначенные грани. Значением по умолчанию является пустой список вершин.<br><br>

<pre id="7.3unassigned"><a href="#7.5" onmouseover="show('VertexList.<br>unassigned - неназначить, отменить присвоенное')" onmouseout="hide()">.unassigned</a></pre>
Данный <a href="#7.5" onmouseover="show('VertexList')" onmouseout="hide()">список вершин</a> содержит все вершины, не назначенные грани. Значением по умолчанию является пустой список вершин.<br><br>

<pre id="7.3vertices"><span onclick="showClick(type_array)"><a href="#" onclick="return false" onblur="hideClick()" onmouseover="show('vertices - вершины')" onmouseout="hide()">.vertices</a></span></pre>
Внутреннее представление сведений о заданных геометрических элементах (массив <a href="#7.4" onmouseover="show('VertexNode')" onmouseout="hide()">вершин</a>).</div><br>

<h4>Методы</h4>
<div class=blockindent><br>
<pre id="7.3setFromPoints"><a href="#7.3" onmouseover="show('QuickHull.<br>set from points - установить из точек')" onmouseout="hide()">.setFromPoints</a>( <span onclick="showClick(type_array)"><a href="#" onclick="return false" onblur="hideClick()" onmouseover="show('points - точки')" onmouseout="hide()">points</a></span> )</pre>
<div class=list><tt>points</tt> - массив <a href="math.htm#19" onmouseover="show('Vector3')" onmouseout="hide()">трехмерных векторов</a>, который будет содержать получающаяся выпуклая оболочка.</div>
Вычисляет выпуклую оболочку по заданному массиву точек.<br><br>

<pre id="7.3setFromObject"><a href="#7.3" onmouseover="show('QuickHull.<br>set from object - установить из объекта')" onmouseout="hide()">.setFromObject</a>( <a href="core.htm#14" onmouseover="show('Object3D.<br>object - объект')" onmouseout="hide()">object</a> )</pre>
<div class=list><tt>object</tt> - <a href="core.htm#14" onmouseover="show('Object3D')" onmouseout="hide()">Object3D</a> по которому вычисляется выпуклая оболочка.</div>
Вычисляет выпуклую оболочку по <a href="core.htm#14" onmouseover="show('Object3D')" onmouseout="hide()">Object3D</a> (включая его дочерние элементы), с учетом "мировых" преобразований как самого объекта, так и его потомков.<br><br>

<pre id="7.3makeEmpty"><a href="#7.3" onmouseover="show('QuickHull.<br>make empty - сделать пустой')" onmouseout="hide()">.makeEmpty</a>( )</pre>
Делает данную выпуклую оболочку пустой.<br><br>

<pre id="7.3addVertexToFace"><a href="#7.3" onmouseover="show('QuickHull.<br>add vertex to face - добавить вершину к грани')" onmouseout="hide()">.addVertexToFace</a>( <a href="#7.4" onmouseover="show('VertexNode.<br>vertex - вершина')" onmouseout="hide()">vertex</a>, <a href="#7.2" onmouseover="show('Face.<br>face - грань')" onmouseout="hide()">face</a> )</pre>
<div class=list><tt>vertex</tt> - добавляемая вершина.</div>
<div class=list><tt>face</tt> - целевая грань.</div>
Метод добавляет вершину к списку 'назначенных' вершин и присваивает её заданной грани.<br><br>

<pre id="7.3removeVertexFromFace"><a href="#7.3" onmouseover="show('QuickHull.<br>remove vertex from face - удалить вершину грани')" onmouseout="hide()">.removeVertexFromFace</a>( <a href="#7.4" onmouseover="show('VertexNode.<br>vertex - вершина')" onmouseout="hide()">vertex</a>, <a href="#7.2" onmouseover="show('Face.<br>face - грань')" onmouseout="hide()">face</a> )</pre>
<div class=list><tt>vertex</tt> - удаляемая вершина.</div>
<div class=list><tt>face</tt> - целевая грань.</div>
Метод удаляет вершину от указанной грани <tt>face</tt> и из списка 'назначенных' вершин. Также он гарантирует, что привязка от грани <tt>face</tt> к первой вершине из списка 'назначенных' вершин, которую она видит, после удаления сделана правильно.<br><br>

<pre id="7.3removeAllVerticesFromFace"><a href="#7.4" onmouseover="show('VertexNode.<br>remove all vertices from face - удалить все вершины грани')" onmouseout="hide()">.removeAllVerticesFromFace</a>( <a href="#7.2" onmouseover="show('Face.<br>face - грань')" onmouseout="hide()">face</a> )</pre>
<div class=list><tt>face</tt> - задаваемая грань.</div>
Метод удаляет все видимые вершины из списка 'назначенных' вершин, которые заданная грань в состоянии видеть.<br><br>

<pre id="7.3deleteFaceVertices"><a href="#7.3" onmouseover="show('QuickHull.<br>delete face vertices - удалить вершины грани')" onmouseout="hide()">.deleteFaceVertices</a>( <a href="#7.2" onmouseover="show('Face.<br>face - грань')" onmouseout="hide()">face</a>, <a href="#7.2" onmouseover="show('Face.<br>absorbing face - поглощающая грань')" onmouseout="hide()">absorbingFace</a> )</pre>
<div class=list><tt>face</tt> - задаваемая грань.</div>
<div class=list><tt>absorbingFace</tt> - дополнительная грань, которая пытается поглотить все вершины первой грани.</div>
Метод удаляет все видимые вершины, которые грань <tt>face</tt> может видеть.<br>
&nbsp; &#9679; &nbsp; Если аргумент '<tt>absorbingFace</tt>' не указан, то все удаленные вершины будут добавлены  в список 'неназначенных' вершин.<br>
&nbsp; &#9679; &nbsp; Если аргумент '<tt>absorbingFace</tt>' существует, тогда данный метод назначит все вершины грани <tt>'face'</tt>, которые может видеть грань <tt>'absorbingFace'</tt>.<br>
&nbsp; &#9679; &nbsp; Если вершину не видит <tt>'absorbingFace'</tt>, она добавляется в список 'неназначенных' ('unassigned') вершин.<br><br>

<pre id="7.3resolveUnassignedPoints"><a href="#7.3" onmouseover="show('QuickHull.<br>resolve unassigned points - разрешить неназначенные точки')" onmouseout="hide()">.resolveUnassignedPoints</a>( <span onclick="showClick(type_array)"><a href="#" onclick="return false" onblur="hideClick()" onmouseover="show('new faces - новые грани')" onmouseout="hide()">newFaces</a></span> )</pre>
<div class=list><tt>newFaces</tt> - массив новых граней.</div>
Метод переназначает как можно больше вершин из списка 'неназначенных' вершин новым граням.<br><br>

<pre id="7.3computeExtremes"><span onclick="showClick(type_obj)"><a href="#" onclick="return false" onblur="hideClick()" onmouseover="show('compute extremes - вычислить экстремумы')" onmouseout="hide()">.computeExtremes</a></span>( )</pre>
Метод вычисляет экстремальные значения (минимальный и максимальный векторы), которые будут использованы для расчета начальной оболочки.<br><br>

<pre id="7.3computeInitialHull"><a href="#7.3" onmouseover="show('QuickHull.<br>compute initial hull - вычислить начальную оболочку')" onmouseout="hide()">.computeInitialHull</a>( )</pre>
Метод вычисляет начальную простейшую выпуклую оболочку, назначая её граням все точки, являющиеся кандидатами на формирование части оболочки.<br><br>

<pre id="7.3reindexFaces"><a href="#7.3" onmouseover="show('QuickHull.<br>reindex faces - переиндексация граней')" onmouseout="hide()">.reindexFaces</a>()</pre>
Удаляет неактивные (то есть, удаленные) грани из внутреннего списка граней.<br><br>

<pre id="7.3nextVertexToAdd"><a href="#7.4" onmouseover="show('VertexNode.<br>next vertex to add - следующая добавляемая вершина')" onmouseout="hide()">.nextVertexToAdd</a>( )</pre>
Метод выполняет поиск следующей вершины для создания грани с текущей оболочкой.<br>
&nbsp; &#9679; &nbsp; Пусть начальная грань будет первой гранью, существующей в списке 'назначенных' вершин.<br>
&nbsp; &#9679; &nbsp; Если грань не существует, то происходит возврат, поскольку больше вершин нет.<br>
&nbsp; &#9679; &nbsp; В противном случае, для каждой вершины, которую видит грань, находим наиболее удаленную от нее вершину.<br><br>

<pre id="7.3computeHorizon"><a href="#7.3" onmouseover="show('QuickHull.<br>compute horizon - вычислить горизонт')" onmouseout="hide()">.computeHorizon</a>( <a href="math.htm#19" onmouseover="show('Vector3.<br>eye point - точка зрения')" onmouseout="hide()">eyePoint</a>, <a href="#7.2" onmouseover="show('HalfEdge.<br>cross edge - ')" onmouseout="hide()">crossEdge</a>, <a href="#7.2" onmouseover="show('Face.<br>face - грань')" onmouseout="hide()">face</a>, <span onclick="showClick(type_array)"><a href="#" onclick="return false" onblur="hideClick()" onmouseover="show('horizon - горизонт')" onmouseout="hide()">horizon</a></span> )</pre>
<div class=list><tt>eyePoint</tt> - координаты точки в трехмерном пространстве.</div>
<div class=list><tt>crossEdge</tt> - ребро, используемое для перехода к текущей грани.</div>
<div class=list><tt>face</tt> - текущая проверяемая грань.</div>
<div class=list><tt>horizon</tt> - ребра, составляющие часть горизонта, в направлении против часовой стрелки.</div>
Метод вычисляет цепь полуребер, называемую горизонтом ('horizon'), в направлении против часовой стрелки.
Чтобы ребро стало частью горизонта, оно должно соединять грань, видимую из точки просмотра ('eyeVertex'), и грань, которую нельзя увидеть из точки просмотра ('eyeVertex').<br><br>

<pre id="7.3addAdjoiningFace"><a href="#7.2" onmouseover="show('HalfEdge.<br>add adjoining face - добавить прилегающую грань')" onmouseout="hide()">.addAdjoiningFace</a>( <a href="#7.4" onmouseover="show('VertexNode.<br>eye vertex - вершина просмотра,<br>т.е. вершина, которая является<br>точкой просмотра')" onmouseout="hide()">eyeVertex</a>, <a href="#7.2" onmouseover="show('HalfEdge.<br>horizon edge - край (ребро) горизонта')" onmouseout="hide()">horizonEdge</a> )</pre>
<div class=list><tt>eyeVertex</tt> - вершина, добавляемая к оболочке.</div>
<div class=list><tt>horizonEdge</tt> - один край горизонта.</div>
Создает грань с вершинами '<span class="lnk" onmouseover="show('eyeVertex.point - вершина, которая<br>является точкой просмотра')" onmouseout="hide()">eyeVertex.point</span>', '<span class="lnk" onmouseover="show('horizonEdge.tail - хвостовая вершина<br>ребра, являющегося частью горизонта')" onmouseout="hide()">horizonEdge.tail</span>' и '<span class="lnk" onmouseover="show('horizonEdge.head - головная вершина<br>ребра, являющегося частью горизонта')" onmouseout="hide()">horizonEdge.head</span>' в направлении против часовой стрелки.<br>
Все полуребра создаются в направлении против часовой стрелки, поэтому грань всегда указывает за пределы оболочки.<br><br>

<pre id="7.3addNewFaces"><a href="#7.3" onmouseover="show('QuickHull.<br>add new faces - добавить новые грани')" onmouseout="hide()">.addNewFaces</a>( <a href="#7.4" onmouseover="show('VertexNode.<br>eye vertex - вершина просмотра,<br>т.е. вершина, которая является<br>точкой просмотра')" onmouseout="hide()">eyeVertex</a>, <a href="#7.2" onmouseover="show('HalfEdge.<br>horizon - горизонт')" onmouseout="hide()">horizon</a> )</pre>
<div class=list><tt>eyeVertex</tt> - вершина, добавляемая к оболочке.</div>
<div class=list><tt>horizon</tt> - массив полуребер, формирующий горизонт.</div>
Метод добавляет к оболочке грани протяженности горизонта ('horizon.length'), каждая грань будет связана с противоположной гранью горизонта и гранями слева/справа.<br><br>

<pre id="7.3addVertexToHull"><a href="#7.3" onmouseover="show('QuickHull.<br>add vertex to hull - добавить вершину к оболочке')" onmouseout="hide()">.addVertexToHull</a>( <a href="#7.4" onmouseover="show('VertexNode.<br>eye vertex - вершина просмотра,<br>т.е. вершина, которая является<br>точкой просмотра')" onmouseout="hide()">eyeVertex</a> )</pre>
<div class=list><tt>eyeVertex</tt> - вершина, добавляемая к оболочке.</div>
Метод добавляет вершину к оболочке по следующему алгоритму:<br>
&nbsp; &#9679; &nbsp; Вычисляется цепь полуребер, называемая горизонтом ('horizon'). Чтобы ребро стало частью горизонта, оно должно соединять грань, видимую из точки просмотра ('eyeVertex'), и грань, которую нельзя увидеть из точки просмотра ('eyeVertex').<br>
&nbsp; &#9679; &nbsp; Все грани, которые могут быть видны из точки просмотра ('eyeVertex') имеют свои видимые вершины, удаляемые из списка назначенных вершин.<br>
&nbsp; &#9679; &nbsp; С добавлением каждой точки просмотра ('eyeVertex') и каждого ребра горизонта ('horizon') создается новый набор граней. Каждая грань связана с противоположной гранью горизонта и гранями слева/справа.<br>
&nbsp; &#9679; &nbsp; Вершины, удаленные со всех видимых граней, по возможности назначаются новым граням.<br><br>

<pre id="7.3cleanup"><a href="#7.3" onmouseover="show('QuickHull.<br>clean up - очистить')" onmouseout="hide()">.cleanup</a>( )</pre>
Метод удаляет внутренние свойства, после вычисления выпуклой оболочки.<br><br>

<pre id="7.3compute"><a href="#7.3" onmouseover="show('QuickHull.<br>compute - вычислить')" onmouseout="hide()">.compute</a>( )</pre>
Запускает выполнение алгоритма построения выпуклой оболочки (QuickHull).</div><br>

<h4>Исходники</h4>
<div class=blockindent><a href="https://github.com/mrdoob/three.js/blob/master/examples/js/QuickHull.js" target="_blank">QuickHull.js на github.com</a></div><br><br>


<h3 id="7.4">VertexNode</h3>
Вершина в качестве узла двусвязного списка.<br><br>

<h4>Конструктор</h4>
<pre>VertexNode( <a href="math.htm#19" onmouseover="show('Vector3.<br>point - точка')" onmouseout="hide()">point</a> )</pre>
<div class=list><tt>point</tt> - точка-<a href="math.htm#19" onmouseover="show('Vector3')" onmouseout="hide()">трехмерный вектор</a> <tt>(x, y, z)</tt> в трехмерном пространстве.</div><br>

<h4>Свойства</h4>
<div class=blockindent><br>
<pre id="7.4point"><a href="math.htm#19" onmouseover="show('Vector3.<br>point - точка')" onmouseout="hide()">.point</a></pre>
Точка с координатами <tt>(x, y, z)</tt> в трехмерном пространстве.
Значением по умолчанию является <tt>undefined</tt>, т.е. значение не определено.<br><br>

<pre id="7.4prev"><a href="#7.4" onmouseover="show('VertexNode.<br>prev - сокращ. англ. слова previous - предыдущий')" onmouseout="hide()">.prev</a></pre>
Ссылка на предыдущую вершину в двусвязном списке. Значением по умолчанию является&nbsp;<tt>null</tt>.<br><br>

<pre id="7.4next"><a href="#7.4" onmouseover="show('VertexNode.<br>next - следующий')" onmouseout="hide()">.next</a></pre>
Ссылка на следующую вершину в двусвязном списке. Значением по умолчанию является&nbsp;<tt>null</tt>.<br><br>

<pre id="7.4face"><a href="#7.1" onmouseover="show('Face.<br>face - грань')" onmouseout="hide()">.face</a></pre>
Ссылка на грань, с которой возможно видеть данную вершину. Значением по умолчанию является <tt>undefined</tt>, т.е. значение не определено.</div><br>

<h4>Исходники</h4>
<div class=blockindent><a href="https://github.com/mrdoob/three.js/blob/master/examples/js/QuickHull.js" target="_blank">QuickHull.js на github.com</a></div><br><br>


<h3 id="7.5">VertexList</h3>
<a href="https://ru.wikipedia.org/wiki/%D0%A1%D0%B2%D1%8F%D0%B7%D0%BD%D1%8B%D0%B9_%D1%81%D0%BF%D0%B8%D1%81%D0%BE%D0%BA" target="_blank" onmouseover="show('Двусвязный список - двунаправленный связный список,<br>ссылки в каждом узле указывают на предыдущий и на<br>последующий узел в списке. Как и односвязный список,<br>двусвязный допускает только последовательный доступ<br>к элементам, но при этом дает возможность<br>перемещения в обе стороны.')" onmouseout="hide()">Двусвязный список</a> вершин.<br><br>

<h4>Конструктор</h4>
<pre>VertexList( )</pre><br>

<h4>Свойства</h4>
<div class=blockindent><br>
<pre id="7.5head"><a href="#7.4" onmouseover="show('VertexNode.<br>head - голова')" onmouseout="hide()">.head</a></pre>
Ссылка на первую вершину в связном списке. Значением по умолчанию является&nbsp;<tt>null</tt>.<br><br>

<pre id="7.5tail"><a href="#7.4" onmouseover="show('VertexNode.<br>tail - хвост, окончание')" onmouseout="hide()">.tail</a></pre>
Ссылка на последнюю вершину в связном списке. Значением по умолчанию является&nbsp;<tt>null</tt>.</div><br>

<h4>Методы</h4>
<div class=blockindent><br>
<pre id="7.5first"><a href="#7.4" onmouseover="show('VertexNode.<br>first - первый')" onmouseout="hide()">.first</a>( )</pre>
Возвращает головную ссылку, т.е. ссылка направлена в начало списка.<br><br>

<pre id="7.5last"><a href="#7.4" onmouseover="show('VertexNode.<br>last - последний')" onmouseout="hide()">.last</a>( )</pre>
Возвращает хвостовую ссылку, т.е. ссылка направлена в конец списка.<br><br>

<pre id="7.5clear"><a href="#7.5" onmouseover="show('VertexList.<br>clear - очистить')" onmouseout="hide()">.clear</a>( )</pre>
Очищает связный список.<br><br>

<pre id="7.5insertBefore"><a href="#7.5" onmouseover="show('VertexList.<br>insert before - вставить перед')" onmouseout="hide()">.insertBefore</a>( <span onmouseover="show('Vertex.<br>target - цель')" onmouseout="hide()">target</span>, <span onmouseover="show('Vertex.<br>vertex - вершина')" onmouseout="hide()">vertex</span> )</pre>
<div class=list><tt>target</tt> - целевая вершина. Предполагается, что данная вершина входит в этот связный список.</div>
<div class=list><tt>vertex</tt> - вершина, которую нужно вставить.</div>
Метод вставляет вершину в список <b>перед</b> целевой вершиной.<br><br>

<pre id="7.5insertAfter"><a href="#7.5" onmouseover="show('VertexList.<br>insert after - вставить после')" onmouseout="hide()">.insertAfter</a>( <span onmouseover="show('Vertex.<br>target - цель')" onmouseout="hide()">target</span>, <span onmouseover="show('Vertex.<br>vertex - вершина')" onmouseout="hide()">vertex</span> )</pre>
<div class=list><tt>target</tt> - целевая вершина. Предполагается, что данная вершина входит в этот связный список.</div>
<div class=list><tt>vertex</tt> - вершина, которую нужно вставить.</div>
Метод вставляет вершину в список <b>после</b> целевой вершины.<br><br>

<pre id="7.5append"><a href="#7.5" onmouseover="show('VertexList.<br>append - добавлять, присоединять')" onmouseout="hide()">.append</a>( <span onmouseover="show('Vertex.<br>vertex - вершина')" onmouseout="hide()">vertex</span> )</pre>
<div class=list><tt>vertex</tt> - добавляемая вершина.</div>
Добавляет вершину в конец связного списка.<br><br>

<pre id="7.5appendChain"><a href="#7.5" onmouseover="show('VertexList.<br>append chain - добавить цепочку')" onmouseout="hide()">.appendChain</a>( <span onmouseover="show('Vertex.<br>vertex - вершина')" onmouseout="hide()">vertex</span> )</pre>
<div class=list><tt>vertex</tt> - головная (начальная) вершина в цепочке вершин.</div>
Метод добавляет цепочку вершин, в которой заданная вершина является началом.<br><br>

<pre id="7.5remove"><a href="#7.5" onmouseover="show('VertexList.<br>remove - удалить')" onmouseout="hide()">.remove</a>( <span onmouseover="show('Vertex.<br>vertex - вершина')" onmouseout="hide()">vertex</span> )</pre>
<div class=list><tt>vertex</tt> - удаляемая вершина.</div>
Удаляет вершину из связного списка.<br><br>

<pre id="7.5removeSubList"><a href="#7.5" onmouseover="show('VertexList.<br>remove sublist - удалить вложенный список')" onmouseout="hide()">.removeSubList</a>( <span onmouseover="show('Vertex.<br>a - первая буква алфавита - здесь просто<br>обозначение первой (головной) вершины')" onmouseout="hide()">a</span>, <span onmouseover="show('Vertex.<br>b - вторая буква алфавита - здесь просто<br>обозначение конечной (хвостовой) вершины')" onmouseout="hide()">b</span> )</pre>
<div class=list><tt>a</tt> - голова (начало) вложенного списка.</div>
<div class=list><tt>b</tt> - хвост (конец) вложенного списка.</div>
Удаляет вложенный список вершин из связного списка.<br><br>

<pre id="7.5isEmpty"><span onclick="showClick(type_bool)"><a href="#" onclick="return false" onblur="hideClick()" onmouseover="show('is empty - является пустым')" onmouseout="hide()">.isEmpty</a></span>( )</pre>
Возвращает значение <tt>true</tt>, если связанный список пуст.</div>

<h4>Исходники</h4>
<div class=blockindent><a href="https://github.com/mrdoob/three.js/blob/master/examples/js/QuickHull.js" target="_blank">QuickHull.js на github.com</a></div><br><br>


<h2 id="8">Визуализаторы</h2>

<h3 id="8.2">CSS2DRenderer</h3>
CSS2DRenderer является упрощенной версией <a href="#8.2" onmouseover="show('CSS3DRenderer')" onmouseout="hide()">CSS3DRenderer</a>. Единственная трансформация, здесь поддерживаемая, это перенос (translation).<br>
Визуализатор очень полезен если нужно объединить надписи (на основе HTML) с трехмерными объектами. В этом случае соответствующие элементы DOM упаковываются в экземпляр CSS2DObject и добавляются к графу сцены.<br>
В отличие от <a href="#8.2" onmouseover="show('CSS3DRenderer')" onmouseout="hide()">CSS3DRenderer</a>, здесь поддерживаются камеры с ортографической проекцией.<br><br>

<h4>Примеры</h4>
<pre><a href="https://threejs.org/examples/#css2d_label" target="_blank">css2d_label</a>
<a href="https://threejs.org/examples/webgl_loader_pdb.html" target="_blank">molecules</a></pre><br>

<h4>Конструктор</h4>
<pre>CSS2DRenderer()</pre><br>

<h4>Методы</h4>
<div class=blockindent><br>
<pre id="8.2getSize"><span onclick="showClick(type_obj)"><a href="#" onclick="return false" onblur="hideClick()" onmouseover="show('get size - получить размер')" onmouseout="hide()">.getSize</a></span>( )</pre>
Возвращает объект, содержащий ширину и высоту рендерера.<br><br>

<pre id="8.2render"><span onclick="showClick(type_null)"><a href="#" onclick="return false" onblur="hideClick()" onmouseover="show('render - представлять, отображать')" onmouseout="hide()">.render</a></span>( <a href="scenes.htm#3" onmouseover="show('Scene.<br>scene - сцена')" onmouseout="hide()">scene</a>, <a href="cameras.htm#1" onmouseover="show('Camera.<br>camera - камера')" onmouseout="hide()">camera</a> )</pre>
Отображает сцену (аргумент <tt>scene</tt>) при помощи камеры (аргумент <tt>camera</tt>).<br><br>

<pre id="8.2setSize"><span onclick="showClick(type_null)"><a href="#" onclick="return false" onblur="hideClick()" onmouseover="show('set size - установить размер')" onmouseout="hide()">.setSize</a></span>( <span onclick="showClick(type_number)"><a href="#" onclick="return false" onblur="hideClick()" onmouseover="show('width - ширина')" onmouseout="hide()">width</a></span>, <span onclick="showClick(type_number)"><a href="#" onclick="return false" onblur="hideClick()" onmouseover="show('height - высота')" onmouseout="hide()">height</a></span> )</pre>
Изменяет размеры рендерера на указанные в аргументах <tt>width</tt> и <tt>height</tt>.</div><br>

<h4>Исходники</h4>
<div class=blockindent><a href="https://github.com/mrdoob/three.js/blob/master/examples/js/renderers/CSS2DRenderer.js" target="_blank">CSS2DRenderer.js на github.com</a></div><br><br>


<h3 id="8.3">CSS3DRenderer</h3>
CSS3DRenderer может использоваться для иерархических трехмерных преобразований применяемых к DOM элементам с помощью свойства CSS3 <tt><a href="http://htmlbook.ru/css/transform" target="_blank">transform</a></tt>.<br>
Данный визуализатор особенно интересен, если нужно применить на вебсайте 3D эффекты без отображения, основанного на <tt><a href="http://htmlbook.ru/html/canvas" target="_blank">canvas</a></tt>. Также его можно использовать для объединения элементов DOM с WebGL контентом.<br>
Тем не менее, существуют значительные ограничения:
<ul><li>нельзя использовать систему материалов <b>three.js</b>.</li>
<li>также нет возможности использовать геометрические элементы (Geometry).</li>
<li>на данный момент поддерживается только <a href="cameras.htm#4" onmouseover="show('PerspectiveCamera')" onmouseout="hide()">камера с перспективной проекцией</a>.</li></ul>
Так что CSS3DRenderer сфокусирован только на обычных DOM-элементах. Эти элементы упаковываются в специальные объекты (CSS3DObject или CSS3DSprite), а затем добавляются к графу сцены.<br><br>

<h4>Примеры</h4>
<pre><a href="https://threejs.org/examples/#css3d_molecules" target="_blank">molecules</a>
<a href="https://threejs.org/examples/css3d_orthographic.html" target="_blank">orthographic camera</a>
<a href="https://threejs.org/examples/#css3d_panorama" target="_blank">panorama</a>
<a href="https://threejs.org/examples/#css3d_periodictable" target="_blank">periodictable</a>
<a href="https://threejs.org/examples/#css3d_sprites" target="_blank">sprites</a></pre><br>

<h4>Конструктор</h4>
<pre>CSS3DRenderer( )</pre><br>

<h4>Методы</h4>
<div class=blockindent><br>
<pre id="8.3getSize"><span onclick="showClick(type_obj)"><a href="#" onclick="return false" onblur="hideClick()" onmouseover="show('get size - получить размер')" onmouseout="hide()">.getSize</a></span>( )</pre>
Возвращает объект, содержащий ширину и высоту рендерера.<br><br>

<pre id="8.3render"><span onclick="showClick(type_null)"><a href="#" onclick="return false" onblur="hideClick()" onmouseover="show('render - представлять, отображать')" onmouseout="hide()">.render</a></span>( <a href="scenes.htm#3" onmouseover="show('Scene.<br>scene - сцена')" onmouseout="hide()">scene</a>, <a href="cameras.htm#4" onmouseover="show('PerspectiveCamera.<br>camera - камера')" onmouseout="hide()">camera</a> )</pre>
Отображает сцену (аргумент <tt>scene</tt>) при помощи камеры (аргумент <tt>camera</tt>) с перспективной проекцией.<br><br>

<pre id="8.3setSize"><span onclick="showClick(type_null)"><a href="#" onclick="return false" onblur="hideClick()" onmouseover="show('set size - установить размер')" onmouseout="hide()">.setSize</a></span>( <span onclick="showClick(type_number)"><a href="#" onclick="return false" onblur="hideClick()" onmouseover="show('width - ширина')" onmouseout="hide()">width</a></span>, <span onclick="showClick(type_number)"><a href="#" onclick="return false" onblur="hideClick()" onmouseover="show('height - высота')" onmouseout="hide()">height</a></span> )</pre>
Изменяет размеры рендерера на указанные в аргументах <tt>width</tt> и <tt>height</tt>.</div><br>

<h4>Исходники</h4>
<div class=blockindent><a href="https://github.com/mrdoob/three.js/blob/master/examples/js/renderers/CSS3DRenderer.js" target="_blank">CSS3DRenderer.js на github.com</a></div><br><br>


<h3 id="8.4">SVGRenderer</h3>
SVGRenderer может быть применен для визуализации данных геометрических элементов, использующих формат SVG. Получаемая векторная графика особенно эффективна в следующих случаях применения:
<ul><li>анимированные логотипы или иконки</li>
<li>интерактивные двух-трехмерные диаграммы и графики.</li>
<li>интерактивные карты</li>
<li>сложные или анимированные пользовательские интерфейсы.</li></ul>
SVGRenderer имеет различные достоинства. Он дает кристально чистый и резкий результат, который не зависит от фактического разрешения области видимости.<br>
SVG-элементы можно оформить через CSS. И у них хорошая доступность, поскольку можно добавлять метаданные вроде названия (title) или описания (description) (используются поисковыми движками или программами считывания с экрана.<br>
Тем не менее, существуют значительные ограничения:
<ul><li>нет дополнительной тонировки</li>
<li>не поддерживается текстура</li>
<li>не поддерживается тень.</li></ul><br>

<h4>Примеры</h4>
<pre><a href="https://threejs.org/examples/#svg_lines" target="_blank">lines</a>
<a href="https://threejs.org/examples/#svg_sandbox" target="_blank">sandbox</a></pre><br>

<h4>Конструктор</h4>
<pre>SVGRenderer( )</pre><br>

<h4>Методы</h4>
<div class=blockindent><br>
<pre id="8.4clear"><span onclick="showClick(type_null)"><a href="#" onclick="return false" onblur="hideClick()" onmouseover="show('clear - очистить')" onmouseout="hide()">.clear</a></span>( )</pre>
Указывает рендереру очистить свою поверхность рисования.<br><br>

<pre id="8.4render"><span onclick="showClick(type_null)"><a href="#" onclick="return false" onblur="hideClick()" onmouseover="show('render - представлять, отображать')" onmouseout="hide()">.render</a></span>( <a href="scenes.htm#3" onmouseover="show('Scene.<br>scene - сцена')" onmouseout="hide()">scene</a>, <a href="cameras.htm#1" onmouseover="show('Camera.<br>camera - камера')" onmouseout="hide()">camera</a> )</pre>
Отображает сцену (аргумент <tt>scene</tt>) при помощи камеры (аргумент <tt>camera</tt>).<br><br>

<pre id="8.4setClearColor"><span onclick="showClick(type_null)"><a href="#" onclick="return false" onblur="hideClick()" onmouseover="show('set clear color - установить прозрачный цвет')" onmouseout="hide()">.setClearColor</a></span>( <a href="math.htm#3" onmouseover="show('Color.<br>color - цвет')" onmouseout="hide()">color</a>, <span onclick="showClick(type_number)"><a href="#" onclick="return false" onblur="hideClick()" onmouseover="show('alpha - альфа-канал (прозрачность)')" onmouseout="hide()">alpha</a></span> )</pre>
Устанавливает прозрачный цвет (<tt>clearColor</tt>) и его коэффициент прозрачности (<tt>clearAlpha</tt>).<br><br>

<pre id="8.4setPrecision"><span onclick="showClick(type_null)"><a href="#" onclick="return false" onblur="hideClick()" onmouseover="show('set precision - установить точность')" onmouseout="hide()">.setPrecision</a></span>( <span onclick="showClick(type_number)"><a href="#" onclick="return false" onblur="hideClick()" onmouseover="show('precision - точность')" onmouseout="hide()">precision</a></span> )</pre>
Устанавливает точность данных, используемых для создания пути (контура).<br><br>

<pre id="8.4setQuality"><span onclick="showClick(type_null)"><a href="#" onclick="return false" onblur="hideClick()" onmouseover="show('set quality - установить качество')" onmouseout="hide()">.setQuality</a></span>( )</pre>
Устанавливает качество визуализации. Возможные значения - <tt>low</tt> (низкое) и <tt>high</tt> (высокое). Значение по умолчанию - <tt>high</tt>.<br><br>

<pre id="8.4setSize"><span onclick="showClick(type_null)"><a href="#" onclick="return false" onblur="hideClick()" onmouseover="show('set size - установить размер')" onmouseout="hide()">.setSize</a></span>( <span onclick="showClick(type_number)"><a href="#" onclick="return false" onblur="hideClick()" onmouseover="show('width - ширина')" onmouseout="hide()">width</a></span>, <span onclick="showClick(type_number)"><a href="#" onclick="return false" onblur="hideClick()" onmouseover="show('height - высота')" onmouseout="hide()">height</a></span> )</pre>
Изменяет размеры рендерера на указанные в аргументах <tt>width</tt> и <tt>height</tt>.</div><br>

<h4>Исходники</h4>
<div class=blockindent><a href="https://github.com/mrdoob/three.js/blob/master/examples/js/renderers/SVGRenderer.js" target="_blank">SVGRenderer.js на github.com</a></div><br><br>


<h2 id="9">Подсобные функции (утилиты)</h2>
<h3 id="9.1">BufferGeometryUtils</h3>
Класс, содержащий вспомогательные функции для экземпляров <a href="core.htm#2" onmouseover="show('BufferGeometry')" onmouseout="hide()">BufferGeometry</a>.<br><br>

<h4>Методы</h4>
<div class=blockindent><br>
<pre id="9.1computeTangents"><span onclick="showClick(type_null)"><a href="#" onclick="return false" onblur="hideClick()" onmouseover="show('compute tangents - вычислить касательные')" onmouseout="hide()">.computeTangents</a></span>( <a href="core.htm#2" onmouseover="show('BufferGeometry.<br>geometry - геометрия, в данном<br>случае - геометрический элемент')" onmouseout="hide()">geometry</a> )</pre>
<div class=list><tt>geometry</tt> -- экземпляр <a href="core.htm#2" onmouseover="show('BufferGeometry')" onmouseout="hide()">BufferGeometry</a>, у которого должны быть атрибуты <tt>index</tt>, <tt>position</tt>, <tt>normal</tt>, и <tt>uv</tt>.</div>
Метод вычисляет касательные и добавляет данному геометрическому элементу атрибут <tt>tangent</tt>.<br><br>

<pre id="9.1mergeBufferGeometries"><a href="core.htm#2" onmouseover="show('BufferGeometry.<br>merge BufferGeometries - слить (соединить) экземпляры BufferGeometry')" onmouseout="hide()">.mergeBufferGeometries</a>( <span onclick="showClick(type_array)"><a href="#" onclick="return false" onblur="hideClick()" onmouseover="show('geometries - геометрии, в данном<br>случае - геометрические элементы')" onmouseout="hide()">geometries</a></span> )</pre>
<div class=list><tt>geometries</tt> -- массив экземпляров <a href="core.htm#2" onmouseover="show('BufferGeometry')" onmouseout="hide()">BufferGeometry</a>.</div>
Метод соединяет набор геометрических элементов в один экземпляр. Все геометрические элементы должны иметь совместимые атрибуты. Если объединение не получилось, метод возвращает значение <tt>null</tt>.<br><br>

<pre id="9.1mergeBufferAttributes"><a href="core.htm#2" onmouseover="show('BufferGeometry.<br>merge BufferAttributes - слить (соединить)<br>атрибуты буферных элементов')" onmouseout="hide()">.mergeBufferAttributes</a>( <span onclick="showClick(type_array)"><a href="#" onclick="return false" onblur="hideClick()" onmouseover="show('attributes - атрибуты')" onmouseout="hide()">attributes</a></span> )</pre>
<div class=list><tt>attributes</tt> -- массив экземпляров <a href="core.htm#2" onmouseover="show('BufferGeometry')" onmouseout="hide()">BufferGeometry</a>.</div>
Метод соединяет набор атрибутов в один экземпляр. Все атрибуты должны иметь совместимые свойства и типы,
а <a href="core.htm#12" onmouseover="show('InterleavedBufferAttributes')" onmouseout="hide()">InterleavedBufferAttributes</a> не поддерживается.
Если объединение не получилось, метод возвращает значение <tt>null</tt>.</div><br>

<h4>Исходники</h4>
<div class=blockindent><a href="https://github.com/mrdoob/three.js/blob/master/examples/js/BufferGeometryUtils.js" target="_blank">BufferGeometryUtils.js на github.com</a></div><br><br>


<h3 id="9.2">SceneUtils</h3>
Класс, содержащий полезные служебные функции для работы со сценой.<br><br>

<h4>Методы</h4>
<div class=blockindent><br>
<pre id="9.2createMultiMaterialObject"><a href="objects.htm#2" onmouseover="show('Group.<br>create multimaterial object - создать многоматериальный объект')" onmouseout="hide()">.createMultiMaterialObject</a>( <a href="core.htm#7" onmouseover="show('Geometry.<br>geometry - геометрия, в данном<br>случае - геометрический элемент')" onmouseout="hide()">geometry</a>, <span onclick="showClick(type_array)"><a href="#" onclick="return false" onblur="hideClick()" onmouseover="show('materials - материалы')" onmouseout="hide()">materials</a></span> )</pre>
<div class=list><tt>geometry</tt> -- геометрический элемент, для которого создается набор материалов.</div>
<div class=list><tt>materials</tt> -- материалы для объекта, указанного в <tt>geometry</tt>.</div>
Создает новую <a href="objects.htm#2" onmouseover="show('Group')" onmouseout="hide()">группу</a>, которая содержит новую сетку (mesh) для каждого материала, обозначенного в <tt>materials</tt>.
Будьте осторожными и помните, что это не то же самое, что и массив материалов, устанавливающий множество материалов для 1 сетки.<br>
В основном это выгодно для объектов, которым нужен как материал, так и реализация каркаса.<br><br>

<pre id="9.2attach"><span onclick="showClick(type_null)"><a href="#" onclick="return false" onblur="hideClick()" onmouseover="show('attach - прикрепить, присоединить')" onmouseout="hide()">.attach</a></span>( <a href="core.htm#14" onmouseover="show('Object3D.<br>child - ребёнок, в данном случае - дочерний объект')" onmouseout="hide()">child</a>, <a href="core.htm#14" onmouseover="show('Object3D.<br>scene - сцена')" onmouseout="hide()">scene</a>, <a href="core.htm#14" onmouseover="show('Object3D.<br>parent - родитель')" onmouseout="hide()">parent</a> )</pre>
<div class=list><tt>child</tt> -- объект, добавляемый к родительскому объекту (указанному в <tt>parent</tt>.</div>
<div class=list><tt>scene</tt> -- сцена, от которой отсоединяется объект.</div>
<div class=list><tt>parent</tt> -- родительский объект, к которому присоединяется объект <tt>child</tt>.</div>
Метод присоединяет объект <tt>child</tt> к родительскому объекту <tt>parent</tt>, без перемещения объекта <tt>child</tt> в "мировом" пространстве.
Помните, что для этого нужно обновить <tt>matrixWorld</tt>, это можно сделать вызвав для родительского объекта метод <tt>updateMatrixWorld</tt>.<br><br>

<pre id="9.2detach"><span onclick="showClick(type_null)"><a href="#" onclick="return false" onblur="hideClick()" onmouseover="show('detach - отделить, отсоединить')" onmouseout="hide()">.detach</a></span>( <a href="core.htm#14" onmouseover="show('Object3D.<br>child - ребёнок, в данном случае - дочерний объект')" onmouseout="hide()">child</a>, <a href="core.htm#14" onmouseover="show('Object3D.<br>parent - родитель')" onmouseout="hide()">parent</a>, <a href="core.htm#14" onmouseover="show('Object3D.<br>scene - сцена')" onmouseout="hide()">scene</a> )</pre>
<div class=list><tt>child</tt> -- объект, удаляемый от родительского объекта <tt>parent</tt>.</div>
<div class=list><tt>scene</tt> -- сцена, к которой присоединяется объект <tt>child</tt>.</div>
<div class=list><tt>parent</tt> -- родительский объект, от которого отсоединяется объект <tt>child</tt>.</div>
Метод отсоединяет объект <tt>child</tt> от родительского объекта <tt>parent</tt> и добавляет его обратно на сцену, без перемещения в "мировом" пространстве.
Помните, что для этого нужно обновить <tt>matrixWorld</tt>, это можно сделать вызвав для родительского объекта метод <tt>updateMatrixWorld</tt>.</div><br>

<h4>Исходники</h4>
<div class=blockindent><a href="https://github.com/mrdoob/three.js/blob/master/examples/js/utils/SceneUtils.js" target="_blank">SceneUtils.js на github.com</a></div><br><br>
  
<br><br>
</body></html>
