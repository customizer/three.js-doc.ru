<!DOCTYPE html PUBLIC "-//W3C//DTD HTML 4.01 Transitional//EN">
<html><head>
<title>Three.js - Примеры - Загрузчики</title>
<meta http-equiv="content-type" content="text/html; charset=utf-8">
<link rel="stylesheet" type="text/css" href="../../1.css">
<script type="text/javascript" src="../../1.js"></script>
</head>
<body>

<span class="right_side"><a href="../../loaders/loader.htm" title="Переход к родительскому классу"><tt>Loader &rarr;</tt></a></span>
<h3>DRACOLoader</h3>

A loader for geometry compressed with the Draco library.<br>

Draco is an open source library for compressing and decompressing 3D meshes and point clouds. Compressed geometry can be significantly smaller, at the cost of additional decoding time on the client device.<br>

Standalone Draco files have a .drc extension, and contain vertex positions, normals, colors, and other attributes. Draco files do not contain materials, textures, animation, or node hierarchies – to use these features, embed Draco geometry inside of a glTF file. A normal glTF file can be converted to a Draco-compressed glTF file using glTF-Pipeline. When using Draco with glTF, an instance of DRACOLoader will be used internally by GLTFLoader.<br><br>

<h4>Пример</h4>
<pre>// Instantiate a loader
var loader = new THREE.DRACOLoader();

// Specify path to a folder containing WASM/JS decoding libraries.
THREE.DRACOLoader.setDecoderPath( '/examples/js/libs/draco' );

// Optional: Pre-fetch Draco WASM/JS module.
THREE.DRACOLoader.getDecoderModule();

// Load a Draco geometry
loader.load(
	// resource URL
	'model.drc',
	// called when the resource is loaded
	function ( geometry ) {

		var material = new THREE.MeshStandardMaterial( { color: 0x606060 } );
		var mesh = new THREE.Mesh( geometry, material );
		scene.add( mesh );

	},
	// called as loading progresses
	function ( xhr ) {

		console.log( ( xhr.loaded / xhr.total * 100 ) + '% loaded' );

	},
	// called when loading has errors
	function ( error ) {

		console.log( 'An error happened' );

	}
);</pre>

<h5>Другие примеры:</h5>
<pre><a href="https://threejs.org/examples/#webgl_loader_draco" target="_blank">webgl/loader/draco</a></pre><br>


<h4>Browser compatibility</h4>

DRACOLoader relies on ES6 Promises, which are not supported in IE11. To use the loader in IE11, you must include a polyfill providing a Promise replacement. DRACOLoader will automatically use either the JS or the WASM decoding library, based on browser capabilities.

<h4>Конструктор</h4>
DRACOLoader( <a href="../../loaders/loadingManager.htm" onmouseover="show('LoadingManager.<br>manager - менеджер, управляющий')" onmouseout="hide()">manager</a> )</pre>
<div class=list><tt>manager</tt> — <a href="../../loaders/loadingManager.htm" onmouseover="show('LoadingManager')" onmouseout="hide()">менеджер загрузки</a>, используемый для загрузки.
Значением по умолчанию является <a href="../../loaders/defaultLoadingManager.htm" onmouseover="show('DefaultLoadingManager')" onmouseout="hide()">THREE.DefaultLoadingManager</a>.</div>
Создает новый DRACOLoader.

<h4>Статические методы</h4>
<div class=blockindent><br>
.setDecoderPath ( value : String ) : null

value — Path to folder containing the JS and WASM decoder libraries.
.setDecoderConfig ( config : Object ) : null

config.type - (Optional) "js" or "wasm".

Provides configuration for the decoder libraries. Configuration cannot be changed after loading the decoders.
.getDecoderModule () : Promise

Requests the decoder libraries, if not already loaded.
.releaseDecoderModule () : null

Disposes of the decoder library and deallocates memory. The decoder cannot be reloaded afterward.</div><br>

<h4>Методы</h4>
<div class=blockindent><br>
.load ( url : String, onLoad : Function, onProgress : Function, onError : Function ) : null

url — A string containing the path/URL of the .drc file.
onLoad — A function to be called after the loading is successfully completed.
onProgress — (optional) A function to be called while the loading is in progress. The argument will be the XMLHttpRequest instance, that contains .total and .loaded bytes.
onError — (optional) A function to be called if an error occurs during loading. The function receives error as an argument.

Begin loading from url and call the onLoad function with the decompressed geometry.
.setPath ( path : String ) : DRACOLoader

path — Base path.

Set the base path for the .drc file.</div><br>

<h4>Исходники</h4>
<div class=blockindent><a href="https://github.com/mrdoob/three.js/blob/master/examples/js/loaders/DRACOLoader.js" target="_blank">DRACOLoader.js на github.com</a></div><br><br>

<br><br>
</body></html>