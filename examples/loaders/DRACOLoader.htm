<!DOCTYPE html PUBLIC "-//W3C//DTD HTML 4.01 Transitional//EN">
<html><head>
<title>Three.js - Примеры - Загрузчики</title>
<meta http-equiv="content-type" content="text/html; charset=utf-8">
<link rel="stylesheet" type="text/css" href="../../1.css">
<script type="text/javascript" src="../../1.js"></script>
</head>
<body>

<span class="right_side"><a href="../../loaders/loader.htm" title="Переход к родительскому классу"><tt>Loader &rarr;</tt></a></span>
<h3>DRACOLoader</h3>
Загрузчик геометрических элементов сжатых с помощью библиотеки <a href="https://github.com/google/draco" target="_blank">Draco</a>.<br>
<a href="https://google.github.io/draco/" target="_blank">Draco</a> - это библиотека с открытым исходным кодом для сжатия и распаковки 3D сеток (mesh) и облаков точек (point cloud).
Сжатые геометрические элементы могут быть существенно меньше за счет дополнительного времени декодирования на клиентском устройстве.<br>
Отдельные файлы Draco имеют расширение <tt>.drc</tt> и содержат позиции вершин, нормали, цвета и другие атрибуты.
Файлы Draco не содержат материалы, текстуры, анимацию или структуры - для использования этих функций геометрические элементы в формате Draco встроены в glTF-файл.
Обычный glTF-файл можно преобразовать в файл glTF, сжатый в формате Draco, с помощью <a href="https://github.com/AnalyticalGraphicsInc/gltf-pipeline" target="_blank">glTF-Pipeline</a>.
При использовании Draco с glTF, экземпляр DRACOLoader будет использоваться внутри <a href="GLTFLoader.htm" onmouseover="show('GLTFLoader')" onmouseout="hide()">GLTFLoader</a>'а.<br><br>

<h4>Пример</h4>
<div><a class='link' onclick='javascript:spoiler1(this)'>... показать</a>
<div style='display:none;'>
<pre>// Instantiate a loader (создаем экземпляр загрузчика)
var loader = new THREE.DRACOLoader();<br>
// Specify path to a folder containing WASM/JS decoding libraries.
// определяем путь к папке, содержащей библиотеки декодирования WASM/JS.
THREE.DRACOLoader.setDecoderPath( '/examples/js/libs/draco' );<br>
// Optional: Pre-fetch Draco WASM/JS module.
// опционально: предварительное получение модуля Draco WASM/JS.
THREE.DRACOLoader.getDecoderModule();<br>
// Load a Draco geometry (загружаем геометрические элементы в формате Draco)
loader.load(
  // resource URL (URL-адрес ресурса)
  'model.drc',
  // called when the resource is loaded (вызывается по завершении загрузки)
  function ( geometry ) {<br>
    var material = new THREE.MeshStandardMaterial( { color: 0x606060 } );
    var mesh = new THREE.Mesh( geometry, material );
    scene.add( mesh );<br>
  },
  // called as loading progresses (вызывается во время загрузки)
  function ( xhr ) {
    console.log( ( xhr.loaded / xhr.total * 100 ) + '% loaded' );
  },
  // called when loading has errors (вызывается при ошибках в загрузке)
  function ( error ) {
    console.log( 'Произошла ошибка' );
  }
);</pre></div></div>

<h5>Другие примеры:</h5>
<pre><a href="https://threejs.org/examples/#webgl_loader_draco" target="_blank">webgl/loader/draco</a></pre><br>

<h4>Совместимость с браузером</h4>
DRACOLoader использует так называемые <a href="https://learn.javascript.ru/promise-basics" target="_blank">"обещания"</a> - <a href="https://developer.mozilla.org/ru/docs/Web/JavaScript/Reference/Global_Objects/Promise" target="_blank">promises</a>,
введенными с принятием <a href="https://ru.wikipedia.org/wiki/ECMAScript" target="_blank">ES6</a>, которые не поддерживаются в
<a href="https://ru.wikipedia.org/wiki/Internet_Explorer_11" target="_blank" onmouseover="show('Internet Explorer 11 (сокр. — IE11) — последняя<br>версия браузера Internet Explorer от Microsoft.')" onmouseout="hide()">IE11</a>.
Чтобы применить данный загрузчик в IE11, следует подключить <a href="https://github.com/stefanpenner/es6-promise" target="_blank">полифилл</a>, предоставляющий подмену "обещаний".
DRACOLoader будет автоматически использовать библиотеку декодирования либо JS, либо WASM исходя из возможностей браузера.<br><br>

<h4>Конструктор</h4>
<pre>DRACOLoader( <a href="../../loaders/loadingManager.htm" onmouseover="show('LoadingManager.<br>manager - менеджер, управляющий')" onmouseout="hide()">manager</a> )</pre>
<div class=list><tt>manager</tt> — <a href="../../loaders/loadingManager.htm" onmouseover="show('LoadingManager')" onmouseout="hide()">менеджер загрузки</a>, используемый для загрузки.
Значением по умолчанию является <a href="../../loaders/defaultLoadingManager.htm" onmouseover="show('DefaultLoadingManager')" onmouseout="hide()">THREE.DefaultLoadingManager</a>.</div>
Создает новый DRACOLoader.<br><br>

<h4>Свойства</h4>
Общие свойства смотрите в описании базового класса <a href="../../loaders/loader.htm" onmouseover="show('Loader')" onmouseout="hide()">Loader</a>.
<br><br>

<h4>Методы</h4>
Общие методы смотрите в описании базового класса <a href="../../loaders/loader.htm" onmouseover="show('Loader')" onmouseout="hide()">Loader</a>.
<div class=blockindent><br>
<pre id="load"><span onclick="showClick(type_null)"><a href="#" onclick="return false" onblur="hideClick()" onmouseover="show('load - загрузить')" onmouseout="hide()">.load</a></span>( <span onclick="showClick(type_string)"><a href="#" onclick="return false" onblur="hideClick()" onmouseover="show('url - сокращ. англ. слов Uniform Resource Locator<br>- единообразный локатор (определитель<br>местонахождения) ресурса')" onmouseout="hide()">url</a></span>, <span onclick="showClick(type_func)"><a href="#" onclick="return false" onblur="hideClick()" onmouseover="show('on load - на загрузку')" onmouseout="hide()">onLoad</a></span>, <span onclick="showClick(type_func)"><a href="#" onclick="return false" onblur="hideClick()" onmouseover="show('on progress - на ход процесса')" onmouseout="hide()">onProgress</a></span>, <span onclick="showClick(type_func)"><a href="#" onclick="return false" onblur="hideClick()" onmouseover="show('on error - на ошибку')" onmouseout="hide()">onError</a></span> )</pre>
<div class=list><tt>url</tt> — строка, содержащая путь/url-адрес к <tt>.drc</tt> файлу.</div>
<div class=list><tt>onLoad</tt> — функция, которая будет вызвана после успешного завершения загрузки.</div>
<div class=list><tt>onProgress</tt> — функция, которая будет вызываться пока идет процесс загрузки (дополнительный, необязательный параметр).
Аргументом будет экземпляр XMLHttpRequest, что содержит сведения о загрузке <tt><span onclick="showClick(type_int)"><a href="#" onclick="return false" onblur="hideClick()" onmouseover="show('total - полный (размер ресурса)')" onmouseout="hide()">total</a></span></tt>
и <tt><span onclick="showClick(type_int)"><a href="#" onclick="return false" onblur="hideClick()" onmouseover="show('loaded - загружено, в данном случае<br>размер загруженного ресурса')" onmouseout="hide()">loaded</a></span></tt> в байтах.</div>
<div class=list><tt>onError</tt> — функция, которая будет вызвана в случае ошибки при загрузке (дополнительный, необязательный параметр). Функция принимает ошибку в качестве аргумента.</div>
Метод загружает файл из url-адреса и вызывает функцию, указанную в аргументе <tt>onLoad</tt> с распакованным геометрическим элементом.<br><br>

<pre id="setDecoderPath"><span onclick="showClick(type_this)"><a href="#" onclick="return false" onblur="hideClick()" onmouseover="show('set decoder path - установить путь к декодеру')" onmouseout="hide()">.setDecoderPath</a></span>( <span onclick="showClick(type_string)"><a href="#" onclick="return false" onblur="hideClick()" onmouseover="show('value - значение, величина')" onmouseout="hide()">value</a></span> )</pre>
<div class=list><tt>value</tt> — путь к папке, содержащей декодирующие библиотеки JS и WASM.</div><br>

<pre id="setDecoderConfig"><span onclick="showClick(type_this)"><a href="#" onclick="return false" onblur="hideClick()" onmouseover="show('set decoder config - установить настройки декодера')" onmouseout="hide()">.setDecoderConfig</a></span>( <span onclick="showClick(type_obj)"><a href="#" onclick="return false" onblur="hideClick()" onmouseover="show('сокращ. от англ. слова configuration -<br>настройки, комплектация, конфигурация')" onmouseout="hide()">config</a></span> )</pre>
<div class=list><tt class="lnk" onmouseover="show('config.type - параметр <tt>type</tt> (тип) в объекте аргумента <tt>config</tt>')" onmouseout="hide()">config.type</tt> - выбор из "<tt>js</tt>" или "<tt>wasm</tt>" (дополнительный, необязательный аргумент).</div>
Метод предоставляет настройку библиотек декодера. После начала декодирования настройки не могут быть изменены.<br><br>

<pre id="setWorkerLimit"><span onclick="showClick(type_this)"><a href="#" onclick="return false" onblur="hideClick()" onmouseover="show('set worker limit - установить ограничение по числу веб-обработчиков')" onmouseout="hide()">.setWorkerLimit</a></span>( <span onclick="showClick(type_number)"><a href="#" onclick="return false" onblur="hideClick()" onmouseover="show('limit - предел, граница')" onmouseout="hide()">limit</a></span> )</pre>
<div class=list><tt>limit</tt> — максимальное количество веб-обработчиков (web worker). Значение по умолчанию равно&nbsp;<tt>4</tt>.</div>
Метод устанавливает максимальное количество <a href="https://developer.mozilla.org/ru/docs/DOM/Using_web_workers" target="_blank" onmouseover="show('Веб-обработчики (web worker-ы) это механизм, который позволяет скрипту<br>выполняться в фоновом потоке, отделенном от основного потока<br>веб-приложения. Преимущество заключается в том, ресурсоёмкие вычисления<br>могут выполняться в отдельном потоке, позволяя запустить основной<br>(обычно пользовательский) поток без блокировки и замедления.<br>Поток обработчика может выполнять задачи без вмешательства в<br>пользовательский интерфейс. К тому же, они могут осуществлять ввод/вывод,<br>используя XMLHttpRequest (хотя атрибуты <tt>responseXML</tt> и <tt>channel</tt><br>всегда будут равны <tt>null</tt>). Существующий веб-обработчик может<br>отсылать сообщения JavaScript коду-создателю через обработчик событий,<br>указанный этим кодом (и наоборот).')" onmouseout="hide()">веб-обработчиков</a>
(<a href="https://developer.mozilla.org/ru/docs/DOM/Using_web_workers" target="_blank">web worker</a>), которое будет выделено данному экземпляру.<br><br>

<pre id="preload"><span onclick="showClick(type_this)"><a href="#" onclick="return false" onblur="hideClick()" onmouseover="show('preload - предварительная загрузка')" onmouseout="hide()">.preload</a></span>() : this</pre>
Запрашивает библиотеки декодера, если они ещё не были загружены.<br><br>

<pre id="dispose"><span onclick="showClick(type_this)"><a href="#" onclick="return false" onblur="hideClick()" onmouseover="show('dispose - удалить, выбросить')" onmouseout="hide()">.dispose</a></span>()</pre>
Метод удаляет ресурсы декодера и высвобождает память. После этого декодер <a href="https://github.com/google/draco/issues/349" target="_blank">нельзя снова загрузить</a>.</div><br>

<h4>Исходники</h4>
<div class=blockindent><a href="https://github.com/mrdoob/three.js/blob/master/examples/js/loaders/DRACOLoader.js" target="_blank">DRACOLoader.js на github.com</a></div><br><br>

<br><br>
</body></html>
