<!DOCTYPE html PUBLIC "-//W3C//DTD HTML 4.01 Transitional//EN">
<html><head>
<title>Three.js</title>
<meta http-equiv="content-type" content="text/html; charset=utf-8">
<link rel="stylesheet" type="text/css" href="../1.css">
<script type="text/javascript" src="../1.js"></script>
</head>
<body>

<h2>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; Как создать VR-контент</h2>
В этом руководстве представлен краткий обзор основных компонентов веб-приложений
<a href="https://ru.wikipedia.org/wiki/%D0%92%D0%B8%D1%80%D1%82%D1%83%D0%B0%D0%BB%D1%8C%D0%BD%D0%B0%D1%8F_%D1%80%D0%B5%D0%B0%D0%BB%D1%8C%D0%BD%D0%BE%D1%81%D1%82%D1%8C" target="_blank" onmouseover="show('Виртуальная реальность, сокращ. от англ. слов virtual reality - искусственная<br>реальность) — созданный техническими средствами мир, передаваемый<br>человеку через его ощущения: зрение, слух, осязание и другие.<br>Виртуальная реальность имитирует как воздействие, так и реакции на<br>воздействие. Для создания убедительного комплекса ощущений реальности<br>компьютерный синтез свойств и реакций виртуальной реальности<br>производится в реальном времени.')" onmouseout="hide()">VR</a>, сделанных с помощью <em>three.js</em>.<br><br>

<h3>Последовательность действий</h3>
Вначале следует включить в свой проект <a href="https://github.com/mrdoob/three.js/blob/master/examples/jsm/webxr/VRButton.js" target="_blank">VRButton.js</a>.
<pre>import { VRButton } from 'three/examples/jsm/webxr/VRButton.js';</pre>
<tt>VRButton.createButton()</tt> (из VRButton.js) делает две важные вещи: создает кнопку, которая показывает совместимость VR, а также, если пользователь активирует кнопку, запускает сеанс VR.
Единственное, что нужно сделать, это добавить в приложение следующую строку кода.
<pre>document.body.appendChild( VRButton.createButton( renderer ) );</pre>
Затем указываем свой экземпляр WebGLRenderer'а для включения визуализации (рендеринга) VR.
<pre>renderer.xr.enabled = true;</pre>
Наконец нужно настроить цикл анимации, поскольку нельзя использовать хорошо известную функцию
<tt><a href="https://developer.mozilla.org/en-US/docs/Web/API/window/requestAnimationFrame" target="_blank">window.requestAnimationFrame()</a></tt>.
Для проектов VR используется <tt><a href="../renderers/webGLRenderer.htm#setAnimationLoop" onmouseover="show('WebGLRenderer.setAnimationLoop')" onmouseout="hide()">setAnimationLoop</a></tt>. Минимальный код выглядит так:
<pre>renderer.setAnimationLoop( function () {
  renderer.render( scene, camera );
} );</pre><br>

<h3>Дальнейшие шаги</h3>
Чтобы увидеть этот рабочий процесс в действии, посмотрите некоторые из официальных примеров WebVR.
<pre><a href="https://threejs.org/examples/#webxr_vr_ballshooter" target="_blank">WebXR / VR / ballshooter</a>
<a href="https://threejs.org/examples/#webxr_vr_cubes" target="_blank">WebXR / VR / cubes</a>
<a href="https://threejs.org/examples/#webxr_vr_dragging" target="_blank">WebXR / VR / dragging</a>
<a href="https://threejs.org/examples/#webxr_vr_lorenzattractor" target="_blank">WebXR / VR / lorenzattractor</a>
<a href="https://threejs.org/examples/#webxr_vr_multiview" target="_blank">WebXR / VR / multiview</a>
<a href="https://threejs.org/examples/#webxr_vr_paint" target="_blank">WebXR / VR / paint</a>
<a href="https://threejs.org/examples/#webxr_vr_panorama_depth" target="_blank">WebXR / VR / panorama_depth</a>
<a href="https://threejs.org/examples/#webxr_vr_panorama" target="_blank">WebXR / VR / panorama</a>
<a href="https://threejs.org/examples/#webxr_vr_rollercoaster" target="_blank">WebXR / VR / rollercoaster</a>
<a href="https://threejs.org/examples/#webxr_vr_sandbox" target="_blank">WebXR / VR / sandbox</a>
<a href="https://threejs.org/examples/#webxr_vr_sculpt" target="_blank">WebXR / VR / sculpt</a>
<a href="https://threejs.org/examples/#webxr_vr_video" target="_blank">WebVR / VR / video</a></pre>
<br><br>

<br><br>
</body>
</html>
