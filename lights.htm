<!DOCTYPE html PUBLIC "-//W3C//DTD HTML 4.01 Transitional//EN">
<html><head>
<title>Three.js</title>
<meta http-equiv="content-type" content="text/html; charset=utf-8">
<link rel="stylesheet" type="text/css" href="1.css">
<script type="text/javascript" src="1.js"></script>
</head>
<body>
<h2 class=head1>Освещение</h2>
<div class=below>В этой части рассматриваются различные виды освещения и образование тени, при некоторых способах освещения.
<div class=list><a href="#1">AmbientLight</a> - фоновое освещение.</div>
<div class=list><a href="#2">DirectionalLight</a> - направленный свет.</div>
<div class=list>&nbsp; &nbsp; &nbsp; <a href="#2.1">DirectionalLightShadow</a> - тени от направленного света.</div>
<div class=list><a href="#3">HemisphereLight</a> - освещение от источника, расположенного непосредственно над сценой (дословно, освещение полусферой).</div>
<div class=list><a href="#4">Light</a> - абстрактный базовый класс освещения.</div>
<div class=list>&nbsp; &nbsp; &nbsp; <a href="#4.1">LightShadow</a> - базовый класс для других классов теней.</div>
<div class=list><a href="#5">PointLight</a> - освещение из одной точки по всем направлениям.</div>
<div class=list><a href="#6">RectAreaLight</a> - освещение от источника в виде прямоугольника.</div>
<div class=list><a href="#7">SpotLight</a> - освещение прожектором (дословно, пятно света).</div>
<div class=list>&nbsp; &nbsp; &nbsp; <a href="#7.1">SpotLightShadow</a> - тени от прожекторного освещения.</div><br>
Для понимания процесса освещения в компьютерной графике посмотрите следующие статьи:
<div class=blockindent><a href="https://habrahabr.ru/post/333932/" target="_blank">learnopengl. Урок 2.2 — Основы освещения</a><br>
<a href="http://eax.me/opengl-lighting/" target="_blank">Продолжаем изучение OpenGL: освещение по Фонгу</a><br>
<a href="https://ru.wikipedia.org/wiki/%D0%97%D0%B0%D1%82%D0%B5%D0%BD%D0%B5%D0%BD%D0%B8%D0%B5_%D0%BF%D0%BE_%D0%A4%D0%BE%D0%BD%D0%B3%D1%83" target="_blank">Затенение по Фонгу</a></div>

</div><br><br>

<span class="right_side"><a href="core.htm#14" title="Переход к родительскому классу: Object3D"><tt>Object3D &rarr;</tt></a>&nbsp;&nbsp;<a href="#4" title="Переход к родительскому классу: Light"><tt>Light &rarr;</tt></a></span>
<h3 id="1">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; <span class="lnk" onmouseover="show('ambient light это окружающее или фоновое освещение');" onmouseout="hide()">AmbientLight</span></h3>
Фоновое освещение глобально и в равной степени освещает все объекты на сцене. Этот свет не может использоваться для создания теней, так как не имеет направления.<br><br>
<h4>Пример</h4><br>
<pre>var light = new THREE.AmbientLight( 0x404040 ); // soft white light (мягкий белый свет)
scene.add( light );</pre>
<h5>Другие примеры:</h5>
<pre><a href="https://threejs.org/examples/#canvas_camera_orthographic" target="_blank">camera / orthographic</a>
<a href="https://threejs.org/examples/#canvas_interactive_voxelpainter" target="_blank">interactive / voxelpainter</a>
<a href="https://threejs.org/examples/#canvas_materials" target="_blank">materials</a>
<a href="https://threejs.org/examples/#canvas_sandbox" target="_blank">sandbox</a>
<a href="https://threejs.org/examples/#webgl_animation_cloth" target="_blank">animation / cloth</a>
<a href="https://threejs.org/examples/#webgl_animation_skinning_blending" target="_blank">animation / skinning / blending</a></pre><br>

<h4>Конструктор</h4><br>
<pre>AmbientLight( <span onclick="showClick(type_int)"><a href="#" onclick="return false" onblur="hideClick()" onmouseover="show('color - цвет');" onmouseout="hide()">color</a></span>, <span onclick="showClick(type_float)"><a href="#" onclick="return false" onblur="hideClick()" onmouseover="show('intensity - интесивность');" onmouseout="hide()">intensity</a></span> )</pre>
<div class=list><tt>color</tt> — числовое значение RGB компонентов цвета. Значение по умолчанию равно <tt>0xffffff</tt>. Дополнительный, необязательный аргумент.</div>
<div class=list><tt>intensity</tt> — числовое значение силы/интенсивности света. Значение по умолчанию равно&nbsp;<tt>1</tt>. Дополнительный, необязательный аргумент.</div>
Конструктор создает окружающее (общее) освещение с заданными цветом и интенсивностью.<br><br>

<h4>Свойства</h4><br>
Смотрите базовый класс <a href="#4" onmouseover="show('Light');" onmouseout="hide()"><tt>Light</tt></a> для общих свойств.
<div class=blockindent><br>
<pre id="1castShadow"><span onclick="showClick(type_bool)"><a href="#" onclick="return false" onblur="hideClick()" onmouseover="show('cast shadow - бросать тень');" onmouseout="hide()">.castShadow</a></span></pre>
В конструкторе значение этого свойства установлено как <tt>undefined</tt> - неопределено, поскольку фоновое освещение не может отбрасывать тени.<br><br>
<pre id="1isAmbientLight"><span onclick="showClick(type_bool)"><a href="#" onclick="return false" onblur="hideClick()" onmouseover="show('is ambient light - является фоновым светом');" onmouseout="hide()">.isAmbientLight</a></span></pre>
Свойство используется для проверки, является ли данный и производные от него классы фоновым освещением. Значением по умолчанию является <tt>true</tt>.<br>
Его нельзя изменять, так как оно используется внутри <em>three.js</em> для оптимизации.</div><br>
<h4>Методы</h4><br>
Смотрите базовый класс <a href="#4" onmouseover="show('Light');" onmouseout="hide()"><tt>Light</tt></a> для общих методов.<br><br>
<h4>Исходники</h4>
<div class=blockindent><a href="https://github.com/mrdoob/three.js/blob/master/src/lights/AmbientLight.js" target="_blank">AmbientLight.js на github.com</a></div><br><br>


<span class="right_side"><a href="core.htm#14" title="Переход к родительскому классу: Object3D"><tt>Object3D &rarr;</tt></a>&nbsp;&nbsp;<a href="#4" title="Переход к родительскому классу: Light"><tt>Light &rarr;</tt></a></span>
<h3 id="2">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; <span class="lnk" onmouseover="show('directional light это направленный свет');" onmouseout="hide()">DirectionalLight</span></h3>
Свет, который испускается в определенном направлении. Этот свет будет вести себя так, как будто он бесконечно удален, и лучи, полученные из него, все параллельны.
Общий пример использования - имитация дневного света; солнце достаточно далеко, так что расстояние до него можно считать бесконечным, а все лучи света, исходящие от него, параллельными.<br><br>
Это освещение может отбрасывать тени - подробности смотрите в статье <tt><a href="#2.1" onmouseover="show('DirectionalLightShadow');" onmouseout="hide()">DirectionalLightShadow</a></tt><br><br>
<h4>Примечание относительно положения, цели и вращения</h4>
Общим местом недопонимания с направленным освещением является то, что настройки поворота не оказывают влияния. Это происходит из-за того, что <tt>DirectionalLight</tt> в <em>three.js</em> равнозначен тому, что в других приложениях зачастую называется <tt>Target Direct Light</tt> - целенаправленный (адресно направленный) свет.<br>
Это означает, что его направление вычисляется как вектор от места расположения источника освещения к месту, где находится цель (в отличие от <tt>Free Direct Light</tt>, у которого имеется только компонент вращения).
<div class=note_trans><b>Примечание переводчика:</b> То есть, если направление <tt>Free Direct Light</tt> определяется углом в трехмерном пространстве, то <tt>DirectionalLight</tt> направлен на конкретный объект - цель.</div>
Это сделано для того, чтобы у данного освещения была возможность отбрасывать тени - теневой камере требуется позиция, от которой рассчитываются тени.<br>
Смотрите ниже описание свойства <tt><a href="#2target" onmouseover="show('DirectionalLight.target');" onmouseout="hide()">target</a></tt> для подробностей по обновлению цели.<br><br>

<h4>Пример</h4><br>
<pre>// White directional light at half intensity shining from the top.
// Направленное освещение белого цвета вполовину интенсивности, светящее сверху.<br>
var directionalLight = new THREE.DirectionalLight( 0xffffff, 0.5 );
directionalLight.position.set( 0, 1, 0 );
scene.add( directionalLight );</pre>
<h5>Другие примеры</h5>
<pre><a href="https://threejs.org/examples/#canvas_morphtargets_horse" target="_blank">morphtargets / horse</a>
<a href="https://threejs.org/examples/#misc_controls_fly" target="_blank">controls / fly</a>
<a href="https://threejs.org/examples/#misc_lights_test" target="_blank">lights / test</a>
<a href="https://threejs.org/examples/#webvr_cubes" target="_blank">cubes</a>
<a href="https://threejs.org/examples/#webgl_effects_parallaxbarrier" target="_blank">effects / parallaxbarrier</a>
<a href="https://threejs.org/examples/#webgl_effects_stereo" target="_blank">effects / stereo</a>
<a href="https://threejs.org/examples/#webgl_geometry_extrude_splines" target="_blank">geometry / extrude / splines</a>
<a href="https://threejs.org/examples/#webgl_materials_bumpmap" target="_blank">materials / bumpmap</a>
<a href="https://threejs.org/examples/#webgl_materials_cubemap_balls_reflection" target="_blank">materials / cubemap / balls / reflection</a></pre><br>


<h4>Конструктор</h4><br>
<pre>DirectionalLight( <span onclick="showClick(type_int)"><a href="#" onclick="return false" onblur="hideClick()" onmouseover="show('hex - сокращ. англ. слова hexadecimal - шестнадцатиричный');" onmouseout="hide()">hex</a></span>, <span onclick="showClick(type_float)"><a href="#" onclick="return false" onblur="hideClick()" onmouseover="show('intensity - интенсивность');" onmouseout="hide()">intensity</a></span> )</pre>
<div class=list><tt><span onclick="showClick(type_int)"><a href="#" onclick="return false" onblur="hideClick()" onmouseover="show('hex - сокращ. англ. слова hexadecimal - шестнадцатиричный');" onmouseout="hide()">hex</a></span></tt> — шестнадцатиричное значение цвета освещения (дополнительный, необязательный параметр). Значение по умолчанию равно <tt>0xffffff</tt> (белый).</div>
<div class=list><tt><span onclick="showClick(type_float)"><a href="#" onclick="return false" onblur="hideClick()" onmouseover="show('intensity - интенсивность');" onmouseout="hide()">intensity</a></span></tt> — числовое значение силы/интенсивности освещения (дополнительный, необязательный параметр). Значение по умолчанию равно <tt>1</tt>.</div>
Создает новый <tt>DirectionalLight</tt><br><br>

<h4>Свойства</h4><br>
Смотрите базовый класс <a href="#4" onmouseover="show('Light');" onmouseout="hide()"><tt>Light</tt></a> для общих свойств.
<div class=blockindent><br>
<pre id="2castShadow"><span onclick="showClick(type_bool)"><a href="#" onclick="return false" onblur="hideClick()" onmouseover="show('cast shadow - бросить тень');" onmouseout="hide()">.castShadow</a></span></pre>
Если установлено значение <tt>true</tt>, освещение будет отбрасывать динамические (движущиеся при перемещении объекта-цели) тени.
<div class=warning><b>Предупреждение:</b> Это довольно затратно и требует настройки для получения правильного отображения теней. Подробнее смотрите в описании <tt><a href="#2.1" onmouseover="show('DirectionalLightShadow');" onmouseout="hide()">DirectionalLightShadow</a></tt>.</div>
Значением по умолчанию является	<tt>false</tt>.<br><br>
<pre id="2isDirectionalLight"><span onclick="showClick(type_bool)"><a href="#" onclick="return false" onblur="hideClick()" onmouseover="show('is directional light - является направленным светом');" onmouseout="hide()">.isDirectionalLight</a></span></pre>
Свойство используется для проверки, является ли данный класс и все производные от него классы, направленным освещением. Значением по умолчанию является <tt>true</tt>.<br>
Это свойство нельзя изменять, так как оно используется внутри <em>three.js</em> для оптимизации.<br><br>

<pre id="2position"><a href="math.htm#19" onmouseover="show('Vector3.<br>position - положение, позиция');" onmouseout="hide()">.position</a></pre>
Это свойство устанавливается равным <tt><a href="core.htm#14DefaultUp" onmouseover="show('Object3D.DefaultUp');" onmouseout="hide()">Object3D.DefaultUp</a> (0, 1, 0)</tt>, так что свет светит сверху вниз.<br><br>
<pre id="2shadow"><a href="#2.1" onmouseover="show('DirectionalLightShadow.<br>shadow - тень');" onmouseout="hide()">.shadow</a></pre>
Свойство используется в <tt><a href="#2.1" onmouseover="show('DirectionalLightShadow');" onmouseout="hide()">DirectionalLightShadow</a></tt> для расчета теней от данного освещения.<br><br>

<pre id="2target"><a href="core.htm#14" onmouseover="show('Object3D.<br>target - цель, мишень, назначение');" onmouseout="hide()">.target</a></pre>
Со своей <a href="#2position" onmouseover="show('DirectionalLight.position');" onmouseout="hide()">позиции</a> DirectionalLight направлен на позицию объекта-цели (target.position), которую и определяет данное свойство. Позицией цели по умолчанию является <tt>(0, 0, 0)</tt>.
<div class=note><b>Примечание:</b> Чтобы изменить позицию объекта-цели на что-либо другое, кроме значения по умолчанию, он должен быть добавлен на <a href="scenes.htm#3" onmouseover="show('Scene');" onmouseout="hide()">сцену</a> при помощи
<pre>scene.add( light.target );</pre>
Так что <tt><a href="core.htm#14matrixWorld" onmouseover="show('Object3D.matrixWorld');" onmouseout="hide()">matrixWorld</a></tt> цели станет автоматически обновляться с каждым кадром.<br>
Также возможно установить в качестве цели другой объект на сцене (что-нибудь со свойством <tt><a href="core.htm#14position" onmouseover="show('Object3D.position');" onmouseout="hide()">position</a></tt>), вот так:
<pre>var targetObject = new THREE.Object3D();
  scene.add(targetObject);<br>
  light.target = targetObject;</pre>
Теперь <tt>directionalLight</tt> будет отслеживать целевой объект.</div></div><br>

<h4>Методы</h4>
Смотрите базовый класс <a href="#4" onmouseover="show('Light');" onmouseout="hide()"><tt>Light</tt></a> для общих методов.
<div class=blockindent><br>
<pre id="2copy"><a href="#2" onmouseover="show('DirectionalLight.<br>copy - копировать');" onmouseout="hide()">.copy</a>( <a href="#2" onmouseover="show('DirectionalLight.<br>source - источник');" onmouseout="hide()">source</a> )</pre>
Копирует значение всех свойств из <tt>source</tt> в данный объект DirectionalLight.</div><br>

<h4>Исходники</h4>
<div class=blockindent><a href="https://github.com/mrdoob/three.js/blob/master/src/lights/DirectionalLight.js" target="_blank">DirectionalLight.js на github.com</a></div><br><br>


<span class="right_side"><a href="#6" title="Переход к родительскому классу: LightShadow"><tt>LightShadow &rarr;</tt></a></span>
<h3 id="2.1">&nbsp;&nbsp;&nbsp;&nbsp; <span class="lnk" onmouseover="show('directional light shadow это тень от направленного света');" onmouseout="hide()">DirectionalLightShadow</span></h3>
Этот класс используется внутри для расчета теней от <tt><a href="#2" onmouseover="show('DirectionalLight');" onmouseout="hide()">DirectionalLight</a></tt>.
В отличие от других классов тени, данный класс для вычисления теней использует <tt><a href="cameras.htm#3" onmouseover="show('OrthographicCamera');" onmouseout="hide()">OrthographicCamera</a></tt>, а не <tt><a href="cameras.htm#4" onmouseover="show('PerspectiveCamera');" onmouseout="hide()">PerspectiveCamera</a></tt>.
Это делается потому, что лучи света от <tt><a href="#2" onmouseover="show('DirectionalLight');" onmouseout="hide()">DirectionalLight</a></tt> параллельны.<br><br>
<h4>Пример</h4>
<pre>// Create a WebGLRenderer and turn on shadows in the renderer
// создаем WebGLRenderer и включаем тени в визуализаторе
var renderer = new THREE.WebGLRenderer();
renderer.shadowMap.enabled = true;
renderer.shadowMap.type = THREE.PCFSoftShadowMap; // default THREE.PCFShadowMap
                                                  // (по умолчанию THREE.PCFShadowMap)<br>
// Create a DirectionalLight and turn on shadows for the light
// создаем DirectionalLight и включаем тени от него
var light = new THREE.DirectionalLight( 0xffffff, 1, 100 );
light.position.set( 0, 1, 0 ); // default; light shining from top
                               // (по умолчанию; свет светит сверху)
light.castShadow = true;       // default false (по умолчанию - false)
scene.add( light );<br>
// Set up shadow properties for the light
// установка свойств тени для этого освещения
light.shadow.mapSize.width = 512;  // default (значение по умолчанию)
light.shadow.mapSize.height = 512; // default (значение по умолчанию)
light.shadow.camera.near = 0.5;    // default (значение по умолчанию)
light.shadow.camera.far = 500      // default (значение по умолчанию)<br>
// Create a sphere that cast shadows (but does not receive them)
// создаем сферу, отбрасывающую тени (но не принимающую их)
var sphereGeometry = new THREE.SphereBufferGeometry( 5, 32, 32 );
var sphereMaterial = new THREE.MeshStandardMaterial( { color: 0xff0000 } );
var sphere = new THREE.Mesh( sphereGeometry, sphereMaterial );
sphere.castShadow = true;     // default is false (по умолчанию - false)
sphere.receiveShadow = false; // default (значение по умолчанию)
scene.add( sphere );<br>
// Create a plane that receives shadows (but does not cast them)
// Создаем плоскость, принимающую тени (но не отбрасывающую их)
var planeGeometry = new THREE.PlaneBufferGeometry( 20, 20, 32, 32 );
var planeMaterial = new THREE.MeshStandardMaterial( { color: 0x00ff00 } )
var plane = new THREE.Mesh( planeGeometry, planeMaterial );
plane.receiveShadow = true;
scene.add( plane );<br>
// Create a helper for the shadow camera (optional)
// создаем вспомогательный элемент для камеры теней (необязательно)
var helper = new THREE.CameraHelper( light.shadow.camera );
scene.add( helper );</pre><br>
<h4>Конструктор</h4><br>
<pre>DirectionalLightShadow( )</pre>
Создает новый <tt>DirectionalLightShadow</tt>. Конструктор не предназначен для непосредственного вызова - он вызывается внутри <em>three.js</em>, посредством <tt><a href="#2" onmouseover="show('DirectionalLight');" onmouseout="hide()">DirectionalLight</a></tt>.<br><br>
<h4>Свойства</h4><br>
Смотрите базовый класс <tt><a href="#4.1" onmouseover="show('LightShadow');" onmouseout="hide()">LightShadow</a></tt> для общих свойств.
<div class=blockindent><br>
<pre id="2.1camera"><a href="cameras.htm#1" onmouseover="show('Camera.<br>camera - камера');" onmouseout="hide()">.camera</a></pre>
Свойство представляет освещенную область виртуального мира. Она используется для создания карты глубины сцены; объекты, находящиеся позади других объектов, с точки зрения освещения будут в тени.<br>
По умолчанию это <tt><a href="cameras.htm#3" onmouseover="show('OrthographicCamera');" onmouseout="hide()">OrthographicCamera</a></tt> с параметрами
<tt><a href="cameras.htm#3left" onmouseover="show('OrthographicCamera.left');" onmouseout="hide()">left</a></tt> и <tt><a href="cameras.htm#3bottom" onmouseover="show('OrthographicCamera.bottom');" onmouseout="hide()">bottom</a></tt> установленными как <tt>-5</tt>,
<tt><a href="cameras.htm#3right" onmouseover="show('OrthographicCamera.right');" onmouseout="hide()">right</a></tt> и <tt><a href="cameras.htm#3top" onmouseover="show('OrthographicCamera.top');" onmouseout="hide()">top</a></tt> установленными как <tt>5</tt>,
параметр <tt><a href="cameras.htm#3near" onmouseover="show('OrthographicCamera.near');" onmouseout="hide()">near</a></tt> (ближняя плоскость отсечения) установлен как <tt>0.5</tt>,
а параметр <tt><a href="cameras.htm#3far" onmouseover="show('OrthographicCamera.far');" onmouseout="hide()">far</a></tt> (дальняя плоскость отсечения) установлен как <tt>500</tt>.</div><br>
<h4>Методы</h4><br>
Смотрите базовый класс <a href="#4.1" onmouseover="show('LightShadow');" onmouseout="hide()"><tt>LightShadow</tt></a> для общих методов.<br><br>
<h4>Исходники</h4>
<div class=blockindent><a href="https://github.com/mrdoob/three.js/blob/master/src/lights/DirectionalLightShadow.js" target="_blank">DirectionalLightShadow.js на github.com</a></div><br><br>


<span class="right_side"><a href="core.htm#14" title="Переход к родительскому классу: Object3D"><tt>Object3D &rarr;</tt></a>&nbsp;&nbsp;<a href="#4" title="Переход к родительскому классу: Light"><tt>Light &rarr;</tt></a></span>
<h3 id="3">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; <span class="lnk" onmouseover="show('hemisphere light это свет полусферы');" onmouseout="hide()">HemisphereLight</span></h3>
Источник света, расположенный непосредственно над сценой, с затуханием цвета от цвета неба до цвета земли.<br>
Это освещение не может использоваться для отбрасывания теней.<br><br>

<h4>Пример</h4><br>
<pre>var light = new THREE.HemisphereLight( 0xffffbb, 0x080820, 1 );
scene.add( light );</pre>
<h5>Другие примеры:</h5>
<pre><a href="https://threejs.org/examples/#webgl_lights_hemisphere" target="_blank">lights / hemisphere</a>
<a href="https://threejs.org/examples/#misc_controls_pointerlock" target="_blank">controls / pointerlock</a>
<a href="https://threejs.org/examples/#webgl_decals" target="_blank">decals</a>
<a href="https://threejs.org/examples/#webgl_loader_collada_kinematics" target="_blank">loader / collada / kinematics</a>
<a href="https://threejs.org/examples/#webgl_materials_lightmap" target="_blank">materials / lightmap</a>
<a href="https://threejs.org/examples/#webgl_shaders_ocean" target="_blank">shaders / ocean</a></pre><br>

<h4>Конструктор</h4><br>
<pre>HemisphereLight( <span onclick="showClick(type_int)"><a href="#" onclick="return false" onblur="hideClick()" onmouseover="show('sky color - цвет неба');" onmouseout="hide()">skyColor</a></span>, <span onclick="showClick(type_int)"><a href="#" onclick="return false" onblur="hideClick()" onmouseover="show('ground color - цвет земли');" onmouseout="hide()">groundColor</a></span>, <span onclick="showClick(type_float)"><a href="#" onclick="return false" onblur="hideClick()" onmouseover="show('intensity - интенсивность');" onmouseout="hide()">intensity</a></span> )</pre>
<div class=list><tt><span onclick="showClick(type_int)"><a href="#" onclick="return false" onblur="hideClick()" onmouseover="show('sky color - цвет неба');" onmouseout="hide()">skyColor</a></span></tt> — шестнадцатиричное значение цвета неба, по умолчанию равно <tt>0xffffff</tt>. Дополнительный, необязательный аргумент.</div>
<div class=list><tt><span onclick="showClick(type_int)"><a href="#" onclick="return false" onblur="hideClick()" onmouseover="show('ground color - цвет земли');" onmouseout="hide()">groundColor</a></span></tt> —  шестнадцатиричное значение цвета земли, по умолчанию равно <tt>0xffffff</tt>. Дополнительный, необязательный аргумент.</div>
<div class=list><tt><span onclick="showClick(type_float)"><a href="#" onclick="return false" onblur="hideClick()" onmouseover="show('intensity - интенсивность');" onmouseout="hide()">intensity</a></span></tt> —  числовое значение силы/интенсивности света, по умолчанию равно <tt>1</tt>. Дополнительный, необязательный аргумент.</div>
Создает новый HemisphereLight.<br><br>

<h4>Свойства</h4><br>
Смотрите базовый класс <a href="#4" onmouseover="show('Light');" onmouseout="hide()"><tt>Light</tt></a> для общих свойств.
<div class=blockindent><br>
<pre id="3castShadow"><span onclick="showClick(type_bool)"><a href="#" onclick="return false" onblur="hideClick()" onmouseover="show('cast shadow - бросить тень');" onmouseout="hide()">.castShadow</a></span></pre>
Это свойство в конструкторе устанавливается как <tt>undefined</tt>, так как освещение полусферой не может отбрасывать тени.<br><br>
<pre id="3color"><span onclick="showClick(type_int)"><a href="#" onclick="return false" onblur="hideClick()" onmouseover="show('color - цвет');" onmouseout="hide()">.color</a></span></pre>
Цвет освещения неба, какой передан в конструктор. Значение по умолчанию для нового <a href="math.htm#3" onmouseover="show('Color');" onmouseout="hide()">цвета</a> устанавливается как <tt>(0xffffff)</tt> - белый.<br><br>
<pre id="3groundColor"><span onclick="showClick(type_int)"><a href="#" onclick="return false" onblur="hideClick()" onmouseover="show('ground color - цвет земли');" onmouseout="hide()">.groundColor</a></span></pre>
Цвет освещения земли, какой передан в конструктор. Значение по умолчанию для нового <a href="math.htm#3" onmouseover="show('Color');" onmouseout="hide()">цвета</a> устанавливается как <tt>(0xffffff)</tt> - белый.<br><br>
<pre id="3isHemisphereLight"><span onclick="showClick(type_bool)"><a href="#" onclick="return false" onblur="hideClick()" onmouseover="show('is hemisphere light - является светом полусферы');" onmouseout="hide()">.isHemisphereLight</a></span></pre>
Свойство используется для проверки, является ли данный класс и все производные от него классы, освещением полусферы. Значением по умолчанию является <tt>true</tt>.<br>
Это свойство нельзя изменять, так как оно используется внутри <em>three.js</em> для оптимизации.<br><br>
<pre id="3position"><a href="math.htm#19" onmouseover="show('Vector3.<br>position - позиция, положение');" onmouseout="hide()">.position</a></pre>
Это свойство устанавливается равным <tt><a href="core.htm#14DefaultUp" onmouseover="show('Object3D.DefaultUp');" onmouseout="hide()">Object3D.DefaultUp</a> (0, 1, 0)</tt>, так что свет светит сверху вниз.</div><br>

<h4>Методы</h4><br>
Смотрите базовый класс <a href="#4" onmouseover="show('Light');" onmouseout="hide()"><tt>Light</tt></a> для общих методов.
<div class=blockindent><br>
<pre id="3copy"><a href="#3" onmouseover="show('HemisphereLight.<br>copy - копировать');" onmouseout="hide()">.copy</a>( <a href="#3" onmouseover="show('HemisphereLight.<br>source - источник');" onmouseout="hide()">source</a> )</pre>
Копирует значение параметров <a href="#3color" onmouseover="show('HemisphereLight.color');" onmouseout="hide()"><tt>color</tt></a>, <a href="#3intensity" onmouseover="show('HemisphereLight.intensity');" onmouseout="hide()"><tt>intensity</tt></a> и <a href="#3groundColor" onmouseover="show('HemisphereLight.groundColor');" onmouseout="hide()"><tt>groundColor</tt></a> из <a href="#4" onmouseover="show('Light');" onmouseout="hide()"><tt>source</tt></a> освещения в этот.</div><br>
<h4>Исходники</h4>
<div class=blockindent><a href="https://github.com/mrdoob/three.js/blob/master/src/lights/HemisphereLight.js" target="_blank">HemisphereLight.js на github.com</a></div><br><br>


<span class="right_side"><a href="core.htm#14" title="Переход к родительскому классу: Object3D"><tt>Object3D &rarr;</tt></a></span>
<h3 id="4">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; Light</h3>
Абстрактный базовый класс освещения - все другие типы освещения наследуют описанные здесь свойства и методы.<br><br>

<h4>Конструктор</h4><br>
<pre>Light( <span onclick="showClick(type_int)"><a href="#" onclick="return false" onblur="hideClick()" onmouseover="show('color - цвет');" onmouseout="hide()">color</a></span>, <span onclick="showClick(type_float)"><a href="#" onclick="return false" onblur="hideClick()" onmouseover="show('intensity - интенсивность');" onmouseout="hide()">intensity</a></span> )</pre>
<div class=list><tt><span onclick="showClick(type_int)"><a href="#" onclick="return false" onblur="hideClick()" onmouseover="show('color - цвет');" onmouseout="hide()">color</a></span></tt> — шестнадцатиричное значение цвета освещения (дополнительный, необязательный параметр). Значением по умолчанию является <tt>0xffffff</tt> (белый).</div>
<div class=list><tt><span onclick="showClick(type_float)"><a href="#" onclick="return false" onblur="hideClick()" onmouseover="show('intensity - интенсивность');" onmouseout="hide()">intensity</a></span></tt> — числовое значение силы/интенсивности света (дополнительный, необязательный параметр). Значение по умолчанию равно <tt>1</tt>.</div>
Создает новый <tt>Light</tt>. Обратите внимание, что конструктор не предназначен для вызова напрямую (взамен используйте один из производных от него классов).<br><br>

<h4>Свойства</h4><br>
Смотрите базовый класс <a href="core.htm#14" onmouseover="show('Object3D');" onmouseout="hide()"><tt>Object3D</tt></a> для общих свойств.
<div class=blockindent><br>
<pre id="4color"><span onclick="showClick(type_color)"><a href="#" onclick="return false" onblur="hideClick()" onmouseover="show('Color.<br>color - цвет');" onmouseout="hide()">.color</a></span></pre>
Цвет освещения. По умолчанию, если это не передается в конструкторе, новый <tt>Color</tt> устанавливается белым (<tt>0xffffff</tt>).<br><br>

<pre id="4intensity"><span onclick="showClick(type_float)"><a href="#" onclick="return false" onblur="hideClick()" onmouseover="show('intensity - интесивность');" onmouseout="hide()">.intensity</a></span></pre>
<a href="https://ru.wikipedia.org/wiki/%D0%A1%D0%B8%D0%BB%D0%B0_%D1%81%D0%B2%D0%B5%D1%82%D0%B0" target="_blank">Интенсивность (сила) света</a>.<br>
В режиме, <a href="renderers.htm#1.1physicallyCorrectLights" onmouseover="show('WebGLRenderer.physicallyCorrectLights');" onmouseout="hide()">правильном с точки зрения физики</a>, произведение <tt><a href="#4color" onmouseover="show('Light.color');" onmouseout="hide()">color</a></tt> * <tt>intensity</tt> интерпретируется как интенсивность (сила) света, измеряемая в канделах (candela).<br>
Значение по умолчанию равно <tt>1.0</tt>.<br><br>
<pre id="4isLight"><span onclick="showClick(type_bool)"><a href="#" onclick="return false" onblur="hideClick()" onmouseover="show('is light - является светом');" onmouseout="hide()">.isLight</a></span></pre>
Свойство используется для проверки, является ли данный класс и все производные от него классы, освещением. Значением по умолчанию является <tt>true</tt>.<br>
Это свойство нельзя изменять, так как оно используется внутри <em>three.js</em> для оптимизации.</div><br>

<h4>Методы</h4><br>
Смотрите базовый класс <a href="core.htm#14" onmouseover="show('Object3D');" onmouseout="hide()"><tt>Object3D</tt></a> для общих методов.
<div class=blockindent><br>
<pre id="4copy"><a href="#4" onmouseover="show('Light.<br>copy - копировать');" onmouseout="hide()">.copy</a>( <a href="#4" onmouseover="show('Light.<br>source - исходник');" onmouseout="hide()">source</a> )</pre>
Метод копирует значение из <tt>source</tt> в данный объект <tt>Light</tt>.<br><br>

<pre id="4toJSON"><span onclick="showClick('JSON')"><a href="#" onclick="return false" onblur="hideClick()" onmouseover="show('to JSON - в формат JSON');" onmouseout="hide()">.toJSON</a></span>( <span onclick="showClick(type_string)"><a href="#" onclick="return false" onblur="hideClick()" onmouseover="show('meta - сокращ. от metadata - метаданные. Вообще-то meta (с латыни)<br>это цель, конечный пункт, предел, а метаданные - информация о другой<br>информации, или данные, относящиеся к дополнительной информации о<br>содержимом или объекте. Метаданные раскрывают сведения о признаках<br>и свойствах, характеризующих какие-либо сущности, которые позволяют<br>автоматически искать и управлять ими в больших информационных<br>потоках.');" onmouseout="hide()">meta</a></span> )</pre>
Возвращает данные <tt>Light</tt> в JSON-формате.</div><br>

<h4>Исходники</h4>
<div class=blockindent><a href="https://github.com/mrdoob/three.js/blob/master/src/lights/Light.js" target="_blank">Light.js на github.com</a></div><br><br>


<h3 id="4.1">&nbsp;&nbsp;&nbsp;&nbsp; LightShadow</h3>
Этот класс используется для расчета теней внутри <tt><a href="#5" onmouseover="show('PointLight');" onmouseout="hide()">PointLight</a></tt>, а также служит базовым классом для других классов теней.<br><br>

<h4>Пример</h4>
<pre>// Create a WebGLRenderer and turn on shadows in the renderer
// Создаем WebGLRenderer и включаем в нем тени
var renderer = new THREE.WebGLRenderer();
renderer.shadowMap.enabled = true;
renderer.shadowMap.type = THREE.PCFSoftShadowMap; // default THREE.PCFShadowMap
                                                  // по умолчанию THREE.PCFShadowMap<br>
// Create a PointLight and turn on shadows for the light
// Создаем PointLight и включаем тени от него
var light = new THREE.PointLight( 0xffffff, 1, 100 );
light.position.set( 0, 10, 0 );
light.castShadow = true;           // default false (значение по умолчанию false )
scene.add( light );<br>
// Set up shadow properties for the light
// Устанавливаем свойства тени
light.shadow.mapSize.width = 512;  // default (по умолчанию)
light.shadow.mapSize.height = 512; // default (по умолчанию)
light.shadow.camera.near = 0.5;    // default (по умолчанию)
light.shadow.camera.far = 500      // default (по умолчанию)<br>
// Create a sphere that cast shadows (but does not receive them)
// Создаем сферу, отбрасывающую тени (но не принимающую их)
var sphereGeometry = new THREE.SphereBufferGeometry( 5, 32, 32 );
var sphereMaterial = new THREE.MeshStandardMaterial( { color: 0xff0000 } );
var sphere = new THREE.Mesh( sphereGeometry, sphereMaterial );
sphere.castShadow = true;     // default is false (по умолчанию равно false)
sphere.receiveShadow = false; // default (по умолчанию)
scene.add( sphere );<br>
// Create a plane that receives shadows (but does not cast them)
// Создаем плоскость, которая принимает тени (но не отбрасывает их)
var planeGeometry = new THREE.PlaneBufferGeometry( 20, 20, 32, 32 );
var planeMaterial = new THREE.MeshStandardMaterial( { color: 0x00ff00 } )
var plane = new THREE.Mesh( planeGeometry, planeMaterial );
plane.receiveShadow = true;
scene.add( plane );<br>
// Create a helper for the shadow camera (optional)
// Создаем вспомогательный элемент для теневой камеры (необязательно)
var helper = new THREE.CameraHelper( light.shadow.camera );
scene.add( helper );</pre><br>

<h4>Конструктор</h4><br>
<pre>LightShadow( <a href="cameras.htm#1" onmouseover="show('Camera.<br>camera - камера');" onmouseout="hide()">camera</a> )</pre>
<div class=list><tt><a href="cameras.htm#1" onmouseover="show('Camera.<br>camera - камера');" onmouseout="hide()">camera</a></tt> — The shadow's view of the world.</div>
Конструктор создает новый LightShadow. Он не предназначен для вызова непосредственно - конструктор вызывается внутри <a href="#5" onmouseover="show('PointLight');" onmouseout="hide()">PointLight</a> или используется в качестве базового класса при построении теней от других источников света.<br><br>
<h4>Свойства</h4>
<div class=blockindent><br>
<pre id="4.1camera"><a href="cameras.htm#1" onmouseover="show('Camera.<br>camera - камера');" onmouseout="hide()">.camera</a></pre>
The shadow's view of the world.<br><br>

<pre id="4.1bias"><span onclick="showClick(type_float)"><a href="#" onclick="return false" onblur="hideClick()" onmouseover="show('bias - смещение, наклон');" onmouseout="hide()">.bias</a></span></pre>
Отклонение от теневой карты, сколько можно добавить или отнять от нормализованной глубины при определении находится ли поверхность в тени.<br>
Значение по умолчанию равно <tt>0</tt>. Самые маленькие подстройки значения данного свойства (порядка <tt>0.0001</tt>) могут помочь уменьшить артефакты в тенях.<br><br>

<pre id="4.1map"><a href="renderers.htm#1.2" onmouseover="show('WebGLRenderTarget.<br>map - карта');" onmouseout="hide()">.map</a></pre>
Карта глубины создается при помощи внутренней камеры; расположение вне пределов пиксельной глубины находится в тени.
The depth map generated using the internal camera; a location beyond a pixel's depth is in shadow. Вычисляется внутри класса, во время визуализации (рендеринга).<br><br>

<pre id="4.1mapSize"><a href="math.htm#18" onmouseover="show('Vector2.<br>map size - размер карты');" onmouseout="hide()">.mapSize</a></pre>
<a href="math.htm#18" onmouseover="show('Vector2');" onmouseout="hide()">Vector2</a> определяющий ширину и высоту теневой карты.<br>
Более высокие значения дают более качественные тени за счет увеличения времени вычисления.
Значения должны быть степенями двойки, вплоть до значения свойства <a href="renderers.htm#1.1capabilities" onmouseover="show('WebGLRenderer.capabilities.maxTextureSize');" onmouseout="hide()">WebGLRenderer.capabilities.maxTextureSize</a> данного устройства,
причем ширина и высота могут быть неодинаковыми (так например, <tt>(512, 1024)</tt> вполне допустимо). Значением по умолчанию является <tt>( 512, 512 )</tt>.<br><br>

<pre id="4.1matrix"><a href="math.htm#11" onmouseover="show('Matrix4.<br>matrix - матрица');" onmouseout="hide()">.matrix</a></pre>
Модель пространства теневой камеры, для расчета местоположения и глубины в теневой карте.
Хранится в <a href="math.htm#11" onmouseover="show('Matrix4');" onmouseout="hide()">Matrix4</a>. Значение свойства вычисляется внутренне в процессе визуализации (рендеринга).<br><br>

<pre id="4.1radius"><span onclick="showClick(type_float)"><a href="#" onclick="return false" onblur="hideClick()" onmouseover="show('radius - радиус');" onmouseout="hide()">.radius</a></span></pre>
Установка значения больше <tt>1</tt> вызовет размытие краев тени.
Более высокие значения будут вызывать нежелательный эффект полосатости в тенях - большие значения свойства <tt><a href="#4.1mapSize" onmouseover="show('LightShadow.mapSize');" onmouseout="hide()">mapSize</a></tt> позволят использовать высокие значения данного свойства, прежде чем этот эффект станет видимым.<br>
Обратите внимание, что это свойство не оказывает никакого влияния, если свойство <tt><a href="renderers.htm#1.1shadowMap.type" onmouseover="show('WebGLRenderer.shadowMap.type');" onmouseout="hide()">WebGLRenderer.shadowMap.type</a></tt> установлено как <tt><a href="constants.htm#6.3" onmouseover="show('константа визуализатора (рендерера) WebGL');" onmouseout="hide()">BasicShadowMap</a></tt>.</div><br>

<h4>Методы</h4>
<div class=blockindent><br>
<pre id="4.1copy"><a href="#4.1" onmouseover="show('LightShadow.<br>copy - копировать');" onmouseout="hide()">.copy</a>( <a href="#4.1" onmouseover="show('LightShadow.<br>source - исходник');" onmouseout="hide()">source</a> )</pre>
Метод копирует значения всех свойств из <tt><a href="#4.1" onmouseover="show('LightShadow.<br>source - исходник');" onmouseout="hide()">source</a></tt> в данный SpotLight.<br><br>

<pre id="4.1clone"><a href="#4.1" onmouseover="show('LightShadow.<br>clone - клонировать');" onmouseout="hide()">.clone</a>( )</pre>
Возвращает новый LightShadow с теми же свойствами что и у данного.<br><br>

<pre id="4.1toJSON"><span onclick="showClick(type_obj)"><a href="#" onclick="return false" onblur="hideClick()" onmouseover="show('to JSON - (привести) к формату JSON');" onmouseout="hide()">.toJSON</a></span>( )</pre>
<span class="lnk" onmouseover="show('т.е. переводит объект в строку, в данном случае в формате JSON');" onmouseout="hide()">Сериализует</span> данный LightShadow.</div><br>

<h4>Исходники</h4>
<div class=blockindent><a href="https://github.com/mrdoob/three.js/blob/master/src/lights/LightShadow.js" target="_blank">LightShadow.js на github.com</a></div><br><br>


<span class="right_side"><a href="core.htm#14" title="Переход к родительскому классу: Object3D"><tt>Object3D &rarr;</tt></a>&nbsp;&nbsp;<a href="#5" title="Переход к родительскому классу: Light"><tt>Light &rarr;</tt></a></span>
<h3 id="5">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; <span class="lnk" onmouseover="show('point light - точечное освещение');" onmouseout="hide()">PointLight</span></h3>
Свет, который излучается из одной точки во всех направления. Обычный случай использования такого освещения это повторение освещения от простой лампочки (без светильника).<br>
Это освещение может отбрасывать тени - подробности смотрите в описании <a href="#4.1" onmouseover="show('LightShadow');" onmouseout="hide()">LightShadow</a>.<br><br>

<h4>Пример</h4>
<pre>var light = new THREE.PointLight( 0xff0000, 1, 100 );
light.position.set( 50, 50, 50 );
scene.add( light );</pre>
<h5>Другие примеры:</h5>
<pre><a href="https://threejs.org/examples/#canvas_lights_pointlights" target="_blank">lights / pointlights</a>
<a href="https://threejs.org/examples/#webgl_lights_pointlights" target="_blank">lights / pointlights</a>
<a href="https://threejs.org/examples/#webgl_lights_pointlights2" target="_blank">lights / pointlights2</a>
<a href="https://threejs.org/examples/#webgldeferred_animation" target="_blank">animation</a>
<a href="https://threejs.org/examples/#webgl_effects_anaglyph" target="_blank">effects / anaglyph</a>
<a href="https://threejs.org/examples/#webgl_geometry_text" target="_blank">geometry / text</a>
<a href="https://threejs.org/examples/#webgl_lensflares" target="_blank">lensflares</a></pre><br>

<h4>Конструктор</h4><br>
<pre>PointLight( <span onclick="showClick(type_int)"><a href="#" onclick="return false" onblur="hideClick()" onmouseover="show('color - цвет');" onmouseout="hide()">color</a></span>, <span onclick="showClick(type_float)"><a href="#" onclick="return false" onblur="hideClick()" onmouseover="show('intensity - интенсивность, яркость');" onmouseout="hide()">intensity</a></span>, <span onclick="showClick(type_number)"><a href="#" onclick="return false" onblur="hideClick()" onmouseover="show('distance - расстояние');" onmouseout="hide()">distance</a></span>, <span onclick="showClick(type_float)"><a href="#" onclick="return false" onblur="hideClick()" onmouseover="show('decay - распад');" onmouseout="hide()">decay</a></span> )</pre>
<div class=list><tt><span onclick="showClick(type_int)"><a href="#" onclick="return false" onblur="hideClick()" onmouseover="show('color - цвет');" onmouseout="hide()">color</a></span></tt> — шестнадцатиричное значение цвета освещения, по умолчанию <tt>0xffffff</tt> (белый). Дополнительный, необязательный аргумент.</div>
<div class=list><tt><span onclick="showClick(type_float)"><a href="#" onclick="return false" onblur="hideClick()" onmouseover="show('intensity - интенсивность, яркость');" onmouseout="hide()">intensity</a></span></tt> — числовое значение силы/интенсивности света. Значение по умолчанию равно <tt>1</tt>. Дополнительный, необязательный аргумент.</div>
<div class=list><tt><span onclick="showClick(type_number)"><a href="#" onclick="return false" onblur="hideClick()" onmouseover="show('distance - расстояние');" onmouseout="hide()">distance</a></span></tt> - расстояние от источника света, при котором интенсивность света становится равной <tt>0</tt>.
When set to 0, then the light never stops. Значение по умолчанию равно <tt>0</tt>.</div>
<div class=list><tt><span onclick="showClick(type_float)"><a href="#" onclick="return false" onblur="hideClick()" onmouseover="show('decay - распад');" onmouseout="hide()">decay</a></span></tt> - значение, на которое уменьшается интенсивность света с увеличением расстояния от источника.</div>
Создает новый PointLight.<br><br>

<h4>Свойства</h4>
Смотрите базовый класс <a href="#4" onmouseover="show('Light');" onmouseout="hide()"><tt>Light</tt></a> для общих свойств.
<div class=blockindent><br>
<pre id="5decay"><span onclick="showClick(type_float)"><a href="#" onclick="return false" onblur="hideClick()" onmouseover="show('decay - распад');" onmouseout="hide()">.decay</a></span></pre>
Значение, на которое уменьшается интенсивность света с увеличением расстояния от источника.<br>
В режиме, <a href="renderers.htm#1.1physicallyCorrectLights" onmouseover="show('WebGLRenderer.physicallyCorrectLights');" onmouseout="hide()">правильном с точки зрения физики</a>, <tt>decay = 2</tt> приводит к физически реалистичному уменьшению освещенности.
Значение по умолчанию равно <tt>1</tt>.<br><br>

<pre id="5distance"><span onclick="showClick(type_float)"><a href="#" onclick="return false" onblur="hideClick()" onmouseover="show('distance - расстояние');" onmouseout="hide()">.distance</a></span></pre>
При ненулевом значении свет будет уменьшаться линейно от максимальной интенсивности (в расположении источника света) до нуля (на расстоянии от источника света, задаваемым данным свойством).
Значение по умолчанию равно <tt>0.0</tt>.<br><br>

<pre id="5isPointLight"><span onclick="showClick(type_bool)"><a href="#" onclick="return false" onblur="hideClick()" onmouseover="show('is point light - является точечным освещением');" onmouseout="hide()">.isPointLight</a></span></pre>
Свойство используется для проверки, является ли данный класс и производные от него классы точечным освещением (PointLight). Значением по умолчанию является <tt>true</tt>.<br>
Его нельзя изменять, так как оно используется внутри <em>three.js</em> для оптимизации.<br><br>

<pre id="5power"><span onclick="showClick(type_float)"><a href="#" onclick="return false" onblur="hideClick()" onmouseover="show('power - сила, мощность');" onmouseout="hide()">.power</a></span></pre>
Сила света. (По-русски это будет <a href="https://ru.wikipedia.org/wiki/%D0%A1%D0%B2%D0%B5%D1%82%D0%BE%D0%B2%D0%BE%D0%B9_%D0%BF%D0%BE%D1%82%D0%BE%D0%BA" target="_blank">световой поток</a>.)<br>
В режиме, <a href="renderers.htm#1.1physicallyCorrectLights" onmouseover="show('WebGLRenderer.physicallyCorrectLights');" onmouseout="hide()">правильном с точки зрения физики</a>, световой поток измеряется в люменах. Значением по умолчанию является <tt>4Math.PI</tt>.<br>
Он напрямую связан с интенсивностью (<tt><a href="#4intensity" onmouseover="show('Light.intensity');" onmouseout="hide()">intensity</a></tt>) соотношением
<pre>power = intensity * 4<i>&#960;</i></pre>
и его изменение также приведет к изменению интенсивности.<br><br>

<pre id="5shadow"><a href="#4.1" onmouseover="show('LightShadow.<br>shadow - тень');" onmouseout="hide()">.shadow</a></pre>
Для вычисления теней при данном освещении используется класс <a href="#4.1" onmouseover="show('LightShadow');" onmouseout="hide()">LightShadow</a>.<br>
<a href="#4.1camera" onmouseover="show('LightShadow.camera');" onmouseout="hide()">Камерой LightShadow</a> устанавливается <a href="cameras.htm#4" onmouseover="show('PerspectiveCamera');" onmouseout="hide()">камера с перспективной проекцией</a> и параметрами:
<tt><a href="cameras.htm#4fov" onmouseover="show('PerspectiveCamera.fov');" onmouseout="hide()">fov</a></tt> равен <tt>90</tt> градусов, <tt><a href="cameras.htm#4aspect" onmouseover="show('PerspectiveCamera.aspect');" onmouseout="hide()">aspect</a></tt> равен <tt>1</tt>, ближняя плоскость отсечения <tt><a href="cameras.htm#4near" onmouseover="show('PerspectiveCamera.near');" onmouseout="hide()">near</a></tt> равна <tt>0.5</tt> и дальняя плоскость отсечения <tt><a href="cameras.htm#4far" onmouseover="show('PerspectiveCamera.far');" onmouseout="hide()">far</a></tt> равна <tt>500</tt>.</div><br>

<h4>Методы</h4>
Смотрите базовый класс <a href="#4" onmouseover="show('Light');" onmouseout="hide()"><tt>Light</tt></a> для общих методов.
<div class=blockindent><br>
<pre id="5copy"><a href="#5" onmouseover="show('PointLight.<br>copy - копировать');" onmouseout="hide()">.copy</a>( <a href="#5" onmouseover="show('PointLight.<br>source - исходник');" onmouseout="hide()">source</a> )</pre>
Метод копирует значения всех свойств из <tt><a href="#5" onmouseover="show('PointLight.<br>source - исходник');" onmouseout="hide()">source</a></tt> в данный PointLight.</div><br>

<h4>Исходники</h4>
<div class=blockindent><a href="https://github.com/mrdoob/three.js/blob/master/src/lights/PointLight.js" target="_blank">PointLight.js на github.com</a></div><br><br>


<span class="right_side"><a href="core.htm#14" title="Переход к родительскому классу: Object3D"><tt>Object3D &rarr;</tt></a>&nbsp;&nbsp;<a href="#5" title="Переход к родительскому классу: Light"><tt>Light &rarr;</tt></a></span>
<h3 id="6">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; <span class="lnk" onmouseover="show('сокращ. от англ. слов rectangular area light - свет прямоугольной области');" onmouseout="hide()">RectAreaLight</span></h3>
Этот свет излучается равномерно всей стороной прямоугольной плоскости. Он может быть использован для симуляции таких вещей как светящееся окно или освещение лентой (полосой).
<div class=note><b>Примечание:</b> этот класс в настоящее время находится в активной разработке и пока ещё не готов к полноценному использованию (начиная с версии r83). Вернитесь сюда через месяц или два! И в тоже время не стесняйтесь попробовать его в работе.</div><br>

<h4>Пример</h4>
<pre>var width = 2;
var height = 10;
var rectLight = new THREE.RectAreaLight( 0xffffff, undefined,  width, height );
rectLight.intensity = 70.0;
rectLight.position.set( 5, 5, 0 );
scene.add( rectLight )<br>
rectLightHelper = new THREE.RectAreaLightHelper( rectLight );
scene.add( rectLightHelper );</pre>
<h5>Другие примеры:</h5>
<pre><a href="https://threejs.org/examples/#webgl_lights_rectarealight" target="_blank">lights / rectarealight</a></pre><br>

<h4>Конструктор</h4>
<pre>RectAreaLight( <span onclick="showClick(type_int)"><a href="#" onclick="return false" onblur="hideClick()" onmouseover="show('color - цвет');" onmouseout="hide()">color</a></span>, <span onclick="showClick(type_float)"><a href="#" onclick="return false" onblur="hideClick()" onmouseover="show('intensity - интенсивность, яркость');" onmouseout="hide()">intensity</a></span>, <span onclick="showClick(type_float)"><a href="#" onclick="return false" onblur="hideClick()" onmouseover="show('width - ширина');" onmouseout="hide()">width</a></span>, <span onclick="showClick(type_float)"><a href="#" onclick="return false" onblur="hideClick()" onmouseover="show('height - высота');" onmouseout="hide()">height</a></span> )</pre>
<div class=list><tt><span onclick="showClick(type_int)"><a href="#" onclick="return false" onblur="hideClick()" onmouseover="show('color - цвет');" onmouseout="hide()">color</a></span></tt> — шестнадцатиричное значение цвета освещения, по умолчанию <tt>0xffffff</tt> (белый). Дополнительный, необязательный аргумент.</div>
<div class=list><tt><span onclick="showClick(type_float)"><a href="#" onclick="return false" onblur="hideClick()" onmouseover="show('intensity - интенсивность, яркость');" onmouseout="hide()">intensity</a></span></tt> — числовое значение силы/интенсивности света. Значение по умолчанию равно <tt>1</tt>. Дополнительный, необязательный аргумент.</div>
<div class=list><tt><span onclick="showClick(type_float)"><a href="#" onclick="return false" onblur="hideClick()" onmouseover="show('width - ширина');" onmouseout="hide()">width</a></span></tt> - ширина источника света. Значение по умолчанию равно <tt>10</tt>. Дополнительный, необязательный аргумент.</div>
<div class=list><tt><span onclick="showClick(type_float)"><a href="#" onclick="return false" onblur="hideClick()" onmouseover="show('height - высота');" onmouseout="hide()">height</a></span></tt> - высота источника света. Значение по умолчанию равно <tt>10</tt>. Дополнительный, необязательный аргумент.</div>
Создает новый RectAreaLight.<br><br>

<h4>Свойства</h4>
Смотрите базовый класс <a href="#4" onmouseover="show('Light');" onmouseout="hide()"><tt>Light</tt></a> для общих свойств.
<div class=blockindent><br>
<pre id="6castShadow"><span onclick="showClick(type_bool)"><a href="#" onclick="return false" onblur="hideClick()" onmouseover="show('cast shadow - отбрасывать тень');" onmouseout="hide()">castShadow</a></span></pre>
<!-- Если задано значение true, то данный тип освещения будет отбрасывать динамические тени.
<div class=warning><b>Предупреждение:</b>  Это затратно по ресурсам и для правильного отображения теней требуется подстройка. Подробнее смотрите в описании <a href="#6.1" onmouseover="show('RectAreaLightShadow');" onmouseout="hide()">RectAreaLightShadow</a>.</div>
Значением по умолчанию является <tt>false</tt>. -->
<div class=note><b>Примечание:</b> это свойство для этого типа освещения пока ещё не реализовано! (версия three.js r83).</div><br>

<pre id="6decay"><span onclick="showClick(type_float)"><a href="#" onclick="return false" onblur="hideClick()" onmouseover="show('decay - распад');" onmouseout="hide()">.decay</a></span></pre>
Значение, на которое уменьшается интенсивность света с увеличением расстояния от источника.<br>
В режиме, <a href="renderers.htm#1.1physicallyCorrectLights" onmouseover="show('WebGLRenderer.physicallyCorrectLights');" onmouseout="hide()">правильном с точки зрения физики</a>, <tt>decay = 2</tt> приводит к физически реалистичному уменьшению освещенности.
Значение по умолчанию равно <tt>1</tt>.
<div class=note><b>Примечание:</b> это свойство для этого типа освещения пока ещё не реализовано! (версия three.js r83).</div><br>

<pre id="6distance"><span onclick="showClick(type_float)"><a href="#" onclick="return false" onblur="hideClick()" onmouseover="show('distance - расстояние');" onmouseout="hide()">.distance</a></span></pre>
При ненулевом значении свет будет уменьшаться линейно от максимальной интенсивности (в расположении источника света) до нуля (на расстоянии от источника света, задаваемым данным свойством).
Значение по умолчанию равно <tt>0.0</tt>.
<div class=note><b>Примечание:</b> это свойство для этого типа освещения пока ещё не реализовано! (версия three.js r83).</div><br>

<pre id="6isRectAreaLight"><span onclick="showClick(type_bool)"><a href="#" onclick="return false" onblur="hideClick()" onmouseover="show('is rectangular area light - является<br>освещением от прямоугольной области');" onmouseout="hide()">.isRectAreaLight</a></span></pre>
Свойство используется для проверки, является ли данный класс и производные от него классы RectAreaLight. Значением по умолчанию является <tt>true</tt>.<br>
Его нельзя изменять, так как оно используется внутри <em>three.js</em> для оптимизации.<br><br>

<pre id="6position"><a href="math.htm#19" onmouseover="show('Vector3.<br>position - позиция, положение');" onmouseout="hide()">.position</a></pre>
Это свойство устанавливается равным <tt><a href="core.htm#14DefaultUp" onmouseover="show('Object3D.DefaultUp');" onmouseout="hide()">Object3D.DefaultUp</a> (0, 1, 0)</tt>, так что свет светит сверху вниз.<br><br>

<!-- <pre id="6shadow"><a href="#6.1" onmouseover="show('RectAreaLightShadow.<br>shadow - тень');" onmouseout="hide()">.shadow</a></pre>
Для расчета теней от этого освещения используется <a href="#6.1" onmouseover="show('RectAreaLightShadow');" onmouseout="hide()">RectAreaLightShadow</a>.
<div class=note><b>Примечание:</b> это свойство для этого типа освещения пока ещё не реализовано! (версия three.js r83).</div><br> -->

<pre id="6target"><a href="core.htm#14" onmouseover="show('Object3D.<br>target - цель, назначение');" onmouseout="hide()">.target</a></pre>
Свет RectAreaLight направлен из своего местоположения (свойство <tt><a href="#6position" onmouseover="show('RectAreaLight.position');" onmouseout="hide()">position</a></tt>) в целевую позицию, определяемую данным свойством.
По умолчанию <tt>target</tt> будет равен <tt>(0, 0, 0)</tt>.

<div class=note><b>Примечание:</b> чтобы изменить целевую позицию на что-либо другое кроме положения по умолчанию, её нужно добавить к <a href="scenes.htm#3" onmouseover="show('Scene');" onmouseout="hide()">сцене</a> при помощи
<pre>scene.add( light.target );</pre>
Это делается для того, чтобы <tt><a href="core.htm#14matrixWorld" onmouseover="show('Object3D.matrixWorld');" onmouseout="hide()">matrixWorld</a></tt> целевой позиции автоматически обновлялся с каждым кадром.<br>
Также возможно установить целью другой объект на сцене (любой объект со свойством <tt><a href="core.htm#14position" onmouseover="show('Object3D.position');" onmouseout="hide()">position</a></tt>), вот так:
<pre>var targetObject = new THREE.Object3D();
scene.add(targetObject);<br>
light.target = targetObject;</pre>
Теперь RectAreaLight будет отслеживать целевой объект.</div></div><br>

<h4>Методы</h4>
Смотрите базовый класс <a href="#4" onmouseover="show('Light');" onmouseout="hide()"><tt>Light</tt></a> для общих методов.
<div class=blockindent><br>
<pre id="6copy"><a href="#6" onmouseover="show('RectAreaLight.<br>copy - копировать');" onmouseout="hide()">.copy</a>( <a href="#6" onmouseover="show('RectAreaLight.<br>source - исходник');" onmouseout="hide()">source</a> )</pre>
Метод копирует значения всех свойств из <tt><a href="#6" onmouseover="show('RectAreaLight.<br>source - исходник');" onmouseout="hide()">source</a></tt> в данный RectAreaLight.</div><br>

<h4>Исходники</h4>
<div class=blockindent><a href="https://github.com/mrdoob/three.js/blob/master/src/lights/RectAreaLight.js" target="_blank">RectAreaLight.js на github.com</a></div><br><br>


<span class="right_side"><a href="core.htm#14" title="Переход к родительскому классу: Object3D"><tt>Object3D &rarr;</tt></a>&nbsp;&nbsp;<a href="#5" title="Переход к родительскому классу: Light"><tt>Light &rarr;</tt></a></span>
<h3 id="7">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; <span class="lnk" onmouseover="show('spot light это прожектор (дословно - пятно света)');" onmouseout="hide()">SpotLight</span></h3>
Данный свет излучается из одной точки в одном направлении, вдоль конуса, расширяемого по мере удаления от источника света.
Это освещение может отбрасывать тени - подробности смотрите в описании <a href="#7.1" onmouseover="show('SpotLightShadow')" onmouseout="hide()"><tt>SpotLightShadow</tt></a>.<br><br>

<h4>Пример</h4>
<pre>// white spotlight shining from the side, casting shadow
// белый прожектор светит со стороны, отбрасывает тень<br>
var spotLight = new THREE.SpotLight( 0xffffff );
spotLight.position.set( 100, 1000, 100 );<br>
spotLight.castShadow = true;<br>
spotLight.shadow.mapSize.width = 1024;
spotLight.shadow.mapSize.height = 1024;<br>
spotLight.shadow.camera.near = 500;
spotLight.shadow.camera.far = 4000;
spotLight.shadow.camera.fov = 30;<br>
scene.add( spotLight );</pre>
<h5>Другие примеры:</h5>
<pre><a href="https://threejs.org/examples/#webgl_lights_spotlight" target="_blank">lights / spotlights</a>
<a href="https://threejs.org/examples/#webgl_interactive_cubes_gpu" target="_blank">interactive / cubes / gpu</a>
<a href="https://threejs.org/examples/#webgl_interactive_draggablecubes" target="_blank">interactive / draggablecubes</a>
<a href="https://threejs.org/examples/#webgl_materials_bumpmap_skin" target="_blank">materials / bumpmap / skin</a>
<a href="https://threejs.org/examples/#webgl_materials_cubemap_dynamic" target="_blank">materials / cubemap / dynamic</a>
<a href="https://threejs.org/examples/#webgl_loader_md2" target="_blank">loader / md2</a>
<a href="https://threejs.org/examples/#webgl_shading_physical" target="_blank">shading / physical</a>
<a href="https://threejs.org/examples/#webgl_shadowmap" target="_blank">shadowmap</a>
<a href="https://threejs.org/examples/#webgl_shadowmap_performance" target="_blank">shadowmap / performance</a>
<a href="https://threejs.org/examples/#webgl_shadowmap_viewer" target="_blank">shadowmap / viewer</a></pre><br>

<h4>Конструктор</h4>
<pre>SpotLight( <span onclick="showClick(type_int)"><a href="#" onclick="return false" onblur="hideClick()" onmouseover="show('color - цвет');" onmouseout="hide()">color</a></span>, <span onclick="showClick(type_float)"><a href="#" onclick="return false" onblur="hideClick()" onmouseover="show('intensity - интенсивность, яркость');" onmouseout="hide()">intensity</a></span>, <span onclick="showClick(type_float)"><a href="#" onclick="return false" onblur="hideClick()" onmouseover="show('distance - расстояние');" onmouseout="hide()">distance</a></span>, <span onclick="showClick(type_rad)"><a href="#" onclick="return false" onblur="hideClick()" onmouseover="show('angle - угол');" onmouseout="hide()">angle</a></span>, <span onclick="showClick(type_float)"><a href="#" onclick="return false" onblur="hideClick()" onmouseover="show('penumbra - полутень');" onmouseout="hide()">penumbra</a></span>, <span onclick="showClick(type_float)"><a href="#" onclick="return false" onblur="hideClick()" onmouseover="show('decay - распад');" onmouseout="hide()">decay</a></span> )</pre>
<div class=list><tt><span onclick="showClick(type_int)"><a href="#" onclick="return false" onblur="hideClick()" onmouseover="show('color - цвет');" onmouseout="hide()">color</a></span></tt> — шестнадцатиричное значение цвета освещения, по умолчанию <tt>0xffffff</tt> (белый). Дополнительный, необязательный аргумент.</div>
<div class=list><tt><span onclick="showClick(type_float)"><a href="#" onclick="return false" onblur="hideClick()" onmouseover="show('intensity - интенсивность, яркость');" onmouseout="hide()">intensity</a></span></tt> — числовое значение силы/интенсивности света. Значение по умолчанию равно <tt>1</tt>. Дополнительный, необязательный аргумент.</div>
<div class=list><tt><span onclick="showClick(type_float)"><a href="#" onclick="return false" onblur="hideClick()" onmouseover="show('distance - расстояние');" onmouseout="hide()">distance</a></span></tt> - максимальное расстояние от источника, где свет будет светить с интенсивностью, которая будет линейно уменьшаться по мере удаления от источника.</div>
<div class=list><tt><span onclick="showClick(type_rad)"><a href="#" onclick="return false" onblur="hideClick()" onmouseover="show('angle - угол');" onmouseout="hide()">angle</a></span></tt> - максимальный угол рассеяния света по его направлению, верхней границей которого является угол <tt>Math.PI/2</tt>.</div>
<div class=list><tt><span onclick="showClick(type_float)"><a href="#" onclick="return false" onblur="hideClick()" onmouseover="show('penumbra - полутень');" onmouseout="hide()">penumbra</a></span></tt> - процент от конуса света прожектора, в котором интенсивность света ослабляется из-за полутени.
Принимает значения от нуля до единицы. Значение по умолчанию равно нулю.</div>
<div class=list><tt><span onclick="showClick(type_float)"><a href="#" onclick="return false" onblur="hideClick()" onmouseover="show('decay - распад');" onmouseout="hide()">decay</a></span></tt> - значение, на которое уменьшается интенсивность света с увеличением расстояния от источника.</div>
Создает новый SpotLight.<br><br>

<h4>Свойства</h4>
Смотрите базовый класс <a href="#4" onmouseover="show('Light');" onmouseout="hide()"><tt>Light</tt></a> для общих свойств.
<div class=blockindent><br>
<pre id="7angle"><span onclick="showClick(type_rad)"><a href="#" onclick="return false" onblur="hideClick()" onmouseover="show('angle - угол');" onmouseout="hide()">.angle</a></span></pre>
Maximum extent of the spotlight, in radians, from its direction. Should be no more than <tt>Math.PI/2</tt>. Значением по умолчанию является <tt>Math.PI/3</tt>.<br><br>

<pre id="7castShadow"><span onclick="showClick(type_bool)"><a href="#" onclick="return false" onblur="hideClick()" onmouseover="show('cast shadow - бросать тень');" onmouseout="hide()">.castShadow</a></span></pre>
Если задано значение <tt>true</tt>, то свет будет отбрасывать динамические тени.
<div class=warning><b>Предупреждение:</b> Это затратно по ресурсам и для правильного отображения теней требуется подстройка.</div>
Значением по умолчанию является <tt>false</tt>.<br><br>

<pre id="7decay"><span onclick="showClick(type_float)"><a href="#" onclick="return false" onblur="hideClick()" onmouseover="show('decay - распад');" onmouseout="hide()">.decay</a></span></pre>
Значение, на которое уменьшается интенсивность света с увеличением расстояния от источника.<br>
В режиме, <a href="renderers.htm#1.1physicallyCorrectLights" onmouseover="show('WebGLRenderer.physicallyCorrectLights');" onmouseout="hide()">правильном с точки зрения физики</a>, <tt>decay = 2</tt> приводит к физически реалистичному уменьшению освещенности.
Значение по умолчанию равно <tt>1</tt>.<br><br>

<pre id="7distance"><span onclick="showClick(type_float)"><a href="#" onclick="return false" onblur="hideClick()" onmouseover="show('distance - расстояние');" onmouseout="hide()">.distance</a></span></pre>
При ненулевом значении свет будет уменьшаться линейно от максимальной интенсивности (в расположении источника света) до нуля (на расстоянии от источника света, задаваемым данным свойством).
Значение по умолчанию равно <tt>0.0</tt>.<br><br>

<pre id="7isSpotLight"><span onclick="showClick(type_bool)"><a href="#" onclick="return false" onblur="hideClick()" onmouseover="show('is spot light - является прожекторным освещением');" onmouseout="hide()">.isSpotLight</a></span></pre>
Свойство используется для проверки, является ли данный класс и производные от него классы прожекторным освещением. Значением по умолчанию является <tt>true</tt>.<br>
Его нельзя изменять, так как оно используется внутри <em>three.js</em> для оптимизации.<br><br>

<pre id="7penumbra"><span onclick="showClick(type_float)"><a href="#" onclick="return false" onblur="hideClick()" onmouseover="show('penumbra - полутень');" onmouseout="hide()">.penumbra</a></span></pre>
Процент от конуса света прожектора, в котором интенсивность света ослабляется из-за полутени. Принимает значения от <tt>0</tt> до <tt>1</tt>. Значение по умолчанию равно <tt>0.0</tt>.<br><br>

<pre id="7position"><a href="math.htm19" onmouseover="show('Vector3.<br>position - положение, позиция');" onmouseout="hide()">.position</a></pre>
Значение свойства устанавливается равным <a href="core.htm#14DefaultUp" onmouseover="show('Object3D.DefaultUp');" onmouseout="hide()">Object3D.DefaultUp</a> <tt>(0, 1, 0)</tt>, так что свет светит сверху вниз.<br><br>

<pre id="7power"><span onclick="showClick(type_float)"><a href="#" onclick="return false" onblur="hideClick()" onmouseover="show('power - сила, мощность');" onmouseout="hide()">.power</a></span></pre>
Сила света. (По-русски это будет <a href="https://ru.wikipedia.org/wiki/%D0%A1%D0%B2%D0%B5%D1%82%D0%BE%D0%B2%D0%BE%D0%B9_%D0%BF%D0%BE%D1%82%D0%BE%D0%BA" target="_blank">световой поток</a>.)<br>
В режиме, <a href="renderers.htm#1.1physicallyCorrectLights" onmouseover="show('WebGLRenderer.physicallyCorrectLights');" onmouseout="hide()">правильном с точки зрения физики</a>, световой поток измеряется в люменах. Значением по умолчанию является <tt>4Math.PI</tt>.<br>
Он напрямую связан с интенсивностью (<tt><a href="#7intensity" onmouseover="show('Spotlight.intensity');" onmouseout="hide()">intensity</a></tt>) соотношением
<pre>power = intensity * <i>&#960;</i></pre>
и его изменение также приведет к изменению интенсивности.<br><br>

<pre id="7shadow"><a href="#7.1" onmouseover="show('SpotLightShadow.<br>shadow - тень');" onmouseout="hide()">.shadow</a></pre>
Для вычисления теней при данном освещении используется класс <a href="#7.1" onmouseover="show('SpotLightShadow');" onmouseout="hide()">SpotLightShadow</a>.<br><br>

<pre id="7target"><a href="core.htm#14" onmouseover="show('Object3D.<br>target - цель, мишень, назначение');" onmouseout="hide()">.target</a></pre>
Со своей <a href="#7position" onmouseover="show('Spotlight.position');" onmouseout="hide()">позиции</a> Spotlight направлен на позицию объекта-цели (target.position), которую и определяет данное свойство. Позицией цели по умолчанию является <tt>(0, 0, 0)</tt>.
<div class=note><b>Примечание:</b> Чтобы изменить позицию объекта-цели на что-либо другое, кроме значения по умолчанию, он должен быть добавлен на <a href="scenes.htm#3" onmouseover="show('Scene');" onmouseout="hide()">сцену</a> при помощи
<pre>scene.add( light.target );</pre>
Так что <tt><a href="core.htm#14matrixWorld" onmouseover="show('Object3D.matrixWorld');" onmouseout="hide()">matrixWorld</a></tt> цели станет автоматически обновляться с каждым кадром.<br>
Также возможно установить в качестве цели другой объект на сцене (что-нибудь со свойством <tt><a href="core.htm#14position" onmouseover="show('Object3D.position');" onmouseout="hide()">position</a></tt>), вот так:
<pre>var targetObject = new THREE.Object3D();
  scene.add(targetObject);<br>
  light.target = targetObject;</pre>
Теперь <tt>Spotlight</tt> будет отслеживать целевой объект.</div></div><br>

<h4>Методы</h4>
Смотрите базовый класс <a href="#4" onmouseover="show('Light');" onmouseout="hide()"><tt>Light</tt></a> для общих методов.
<div class=blockindent><br>
<pre id="7copy"><a href="#7" onmouseover="show('SpotLight.<br>copy - копировать');" onmouseout="hide()">.copy</a>( <a href="#7" onmouseover="show('SpotLight.<br>source - исходник');" onmouseout="hide()">source</a> )</pre>
Метод копирует значения всех свойств из <tt><a href="#7" onmouseover="show('SpotLight.<br>source - исходник');" onmouseout="hide()">source</a></tt> в данный SpotLight.</div><br>

<h4>Исходники</h4>
<div class=blockindent><a href="https://github.com/mrdoob/three.js/blob/master/src/lights/SpotLight.js" target="_blank">SpotLight.js на github.com</a></div><br><br>


<span class="right_side"><a href="#4.1" title="Переход к родительскому классу: LightShadow"><tt>LightShadow &rarr;</tt></a></span>
<h3 id="7.1">&nbsp;&nbsp;&nbsp;&nbsp; SpotLightShadow</h3>
Данный класс используется для расчета теней внутри класса <a href="#7" onmouseover="show('SpotLight');" onmouseout="hide()">SpotLight</a>.<br><br>

<h4>Пример</h4>
<pre>// Create a WebGLRenderer and turn on shadows in the renderer
// создаем WebGLRenderer и включаем тени в визуализаторе
var renderer = new THREE.WebGLRenderer();
renderer.shadowMap.enabled = true;
renderer.shadowMap.type = THREE.PCFSoftShadowMap; // default THREE.PCFShadowMap
                                                  // (по умолчанию THREE.PCFShadowMap)<br>
// Create a SpotLight and turn on shadows for the light
// создаем SpotLight и включаем тени от него
var light = new THREE.SpotLight( 0xffffff );
light.castShadow = true;            // default false (по умолчанию - false)
scene.add( light );<br>
// Set up shadow properties for the light
// установка свойств тени для этого освещения
light.shadow.mapSize.width = 512;  // default (значение по умолчанию)
light.shadow.mapSize.height = 512; // default (значение по умолчанию)
light.shadow.camera.near = 0.5;    // default (значение по умолчанию)
light.shadow.camera.far = 500      // default (значение по умолчанию)<br>
// Create a sphere that cast shadows (but does not receive them)
// создаем сферу, отбрасывающую тени (но не принимающую их)
var sphereGeometry = new THREE.SphereBufferGeometry( 5, 32, 32 );
var sphereMaterial = new THREE.MeshStandardMaterial( { color: 0xff0000 } );
var sphere = new THREE.Mesh( sphereGeometry, sphereMaterial );
sphere.castShadow = true;     // default is false (по умолчанию - false)
sphere.receiveShadow = false; // default (значение по умолчанию)
scene.add( sphere );<br>
// Create a plane that receives shadows (but does not cast them)
// Создаем плоскость, принимающую тени (но не отбрасывающую их)
var planeGeometry = new THREE.PlaneBufferGeometry( 20, 20, 32, 32 );
var planeMaterial = new THREE.MeshStandardMaterial( { color: 0x00ff00 } )
var plane = new THREE.Mesh( planeGeometry, planeMaterial );
plane.receiveShadow = true;
scene.add( plane );<br>
// Create a helper for the shadow camera (optional)
// создаем вспомогательный элемент для камеры теней (необязательно)
var helper = new THREE.CameraHelper( light.shadow.camera );
scene.add( helper );</pre><br>

<h4>Конструктор</h4>
Конструктор создает <a href="cameras.htm#4" onmouseover="show('PerspectiveCamera');" onmouseout="hide()">PerspectiveCamera</a> для управления отображением теней в представляемом мире.<br><br>

<h4>Свойства</h4>
Смотрите базовый класс <a href="#4.1" onmouseover="show('LightShadow');" onmouseout="hide()"><tt>LightShadow</tt></a> для общих свойств.
<div class=blockindent><br>
<pre id="7.1camera"><a href="cameras.htm#1" onmouseover="show('Camera.<br>camera - камера');" onmouseout="hide()">.camera</a></pre>
Представление освещения в мире. Свойство используется для построения карты глубины сцены; объекты позади других объектов исходя из распространения света будут находиться в тени.<br>
По умолчанию это <a href="cameras.htm#4" onmouseover="show('PerspectiveCamera');" onmouseout="hide()">камера с перспективной проекцией</a> с ближней плоскостью отсечения <tt><a href="cameras.htm#4near" onmouseover="show('PerspectiveCamera.near');" onmouseout="hide()">near</a></tt> равной <tt>0.5</tt>.
Свойство <tt><a href="cameras.htm#4fov" onmouseover="show('PerspectiveCamera.fov');" onmouseout="hide()">fov</a></tt> будет отслеживать свойство <tt><a href="#7angle" onmouseover="show('SpotLight.angle');" onmouseout="hide()">angle</a></tt> имеющегося <a href="#7" onmouseover="show('SpotLight');" onmouseout="hide()">SpotLight</a> с помощью метода <tt><a href="#7.1update" onmouseover="show('SpotLightShadow.update');" onmouseout="hide()">update</a></tt>.
Аналогично, свойство <tt><a href="cameras.htm#4aspect" onmouseover="show('PerspectiveCamera.aspect');" onmouseout="hide()">aspect</a></tt> будет отслеживать размеры сторон из <tt><a href="#4.1mapSize" onmouseover="show('LightShadow.mapSize');" onmouseout="hide()">mapSize</a></tt>.
Если установлено свойство <tt><a href="#7distance" onmouseover="show('SpotLight.distance');" onmouseout="hide()">distance</a></tt> освещения,
дальняя плоскость отсечения <tt><a href="cameras.htm#4far" onmouseover="show('PerspectiveCamera.far');" onmouseout="hide()">far</a></tt> будет отслеживать его, в противном случае она по умолчанию будет установлена как <tt>500</tt>.<br><br>

<pre id="7.1isSpotLightShadow"><span onclick="showClick(type_bool)"><a href="#" onclick="return false" onblur="hideClick()" onmouseover="show('is spot light shadow - является тенью от прожектора');" onmouseout="hide()">.isSpotLightShadow</a></span></pre>
Свойство используется для проверки, является ли данный класс и производные от него классы тенью от прожекторного освещения. Значением по умолчанию является <tt>true</tt>.<br>
Его нельзя изменять, так как оно используется внутри <em>three.js</em> для оптимизации.</div><br>

<h4>Методы</h4>
Смотрите базовый класс <a href="#4.1" onmouseover="show('LightShadow');" onmouseout="hide()"><tt>LightShadow</tt></a> для общих методов.
<div class=blockindent><br>
<pre id="7.1update"><a href="#7.1" onmouseover="show('SpotLightShadow.<br>update - обновление');" onmouseout="hide()">.update</a>( <a href="#7" onmouseover="show('SpotLight');" onmouseout="hide()">light</a> )</pre>
Метод обновляет внутреннюю <a href="#7.1camera" onmouseover="show('SpotLightShadow.camera');" onmouseout="hide()">камеру с перспективной проекцией</a> исходя из параметров освещения, переданного в <tt>light</tt>.</div><br>

<h4>Исходники</h4>
<div class=blockindent><a href="https://github.com/mrdoob/three.js/blob/master/src/lights/SpotLightShadow.js" target="_blank">SpotLightShadow.js на github.com</a></div><br>

<br><br>
</body></html>
