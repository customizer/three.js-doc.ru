<!DOCTYPE html PUBLIC "-//W3C//DTD HTML 4.01 Transitional//EN">
<html><head>
<title>Three.js</title>
<meta http-equiv="content-type" content="text/html; charset=utf-8">
<link rel="stylesheet" type="text/css" href="../1.css">
<script type="text/javascript" src="../1.js"></script>
</head>
<body>

<h3>DefaultLoadingManager</h3>
Общий экземпляр <a href="loadingManager.htm" onmouseover="show('LoadingManager')" onmouseout="hide()">LoadingManager</a>, используемый большинством загрузчиков, когда не указывается отдельный, специализированный менеджер загрузки.<br>
В большинстве случаем его должно быть достаточно, однако иногда могут потребоваться отдельные менеджеры загрузки для текстур и моделей.<br><br>

<h4>Пример</h4>
Для менеджера загрузки можно дополнительно устанавливать функции <a href="loadingManager.htm#onStart" onmouseover="show('LoadingManager.onStart')" onmouseout="hide()">onStart</a>,
<a href="loadingManager.htm#onLoad" onmouseover="show('LoadingManager.onLoad')" onmouseout="hide()">onLoad</a>, <a href="loadingManager.htm#onProgress" onmouseover="show('LoadingManager.onProgress')" onmouseout="hide()">onProgress</a>,
<a href="loadingManager.htm#onError" onmouseover="show('LoadingManager.onError')" onmouseout="hide()">onError</a>. Затем они будут применяться для любых загрузчиков, используемых DefaultLoadingManager.<br>
Обратите внимание, что не следует путать эти функции с функциями с такими же названиями отдельных, специализированных загрузчиков,
поскольку они предназначены для отображения информации об общем состоянии загрузки, а не для обработки загружаемых данных.
<pre>THREE.DefaultLoadingManager.onStart = function ( url, itemsLoaded, itemsTotal ) {
  console.log( 'Начата загрузка файлов: '+url+'.\nЗагружено '+itemsLoaded+' из '+itemsTotal+' файлов.' );
};<br>
THREE.DefaultLoadingManager.onLoad = function ( ) {
  console.log( 'Загрузка завершена!');
};<br>
THREE.DefaultLoadingManager.onProgress = function ( url, itemsLoaded, itemsTotal ) {
  console.log( 'Загрузка файлов: '+url+'.\nЗагружено '+itemsLoaded+' из '+itemsTotal+' файлов.' );
};<br>
THREE.DefaultLoadingManager.onError = function ( url ) {
  console.log( 'Произошла ошибка при загрузке '+url );
};</pre>
<h5>Другие примеры</h5>
<pre><a href="https://threejs.org/examples/#webgl_loader_scene" target="_blank">WebGL / loader / scene</a></pre><br>

<h4>Свойства</h4>
Подробнее о свойствах смотрите в описании <a href="loadingManager.htm" onmouseover="show('LoadingManager')" onmouseout="hide()">LoadingManager</a>.<br><br>

<h4>Методы</h4>
Подробнее о методах смотрите в описании <a href="loadingManager.htm" onmouseover="show('LoadingManager')" onmouseout="hide()">LoadingManager</a>.<br><br>

<h4>Исходники</h4>
<div class=blockindent><a href="https://github.com/mrdoob/three.js/blob/master/src/loaders/LoadingManager.js" target="_blank">LoadingManager.js на github.com</a></div><br><br>

<br><br>
</body></html>