<!DOCTYPE html PUBLIC "-//W3C//DTD HTML 4.01 Transitional//EN">
<html><head>
<title>Three.js</title>
<meta http-equiv="content-type" content="text/html; charset=utf-8">
<link rel="stylesheet" type="text/css" href="../1.css">
<script type="text/javascript" src="../1.js"></script>
</head>
<body>

<span class="right_side"><a href="material.htm" title="Переход к родительскому классу: Material"><tt>Material &rarr;</tt></a></span>
<h3>LineBasicMaterial</h3>
Материал для рисования геометрических фигур в каркасном стиле обычными линиями.<br><br>
<h4>Пример</h4>
<pre>var material = new THREE.LineBasicMaterial( {
  color: 0xffffff,
  linewidth: 1,
  linecap: 'round', // ignored by WebGLRenderer (игнорируется WebGLRenderer'ом)
  linejoin:  'round' // ignored by WebGLRenderer (игнорируется WebGLRenderer'ом)
} );</pre>

<h5>Другие примеры</h5>
<pre><a href="https://threejs.org/examples/webgl_buffergeometry_drawcalls" target="_blank">WebGL / buffergeometry / drawcalls</a>
<a href="https://threejs.org/examples/webgl_buffergeometry_lines" target="_blank">WebGL / buffergeometry / lines</a>
<a href="https://threejs.org/examples/webgl_buffergeometry_lines_indexed" target="_blank">WebGL / buffergeometry / lines / indexed</a>
<a href="https://threejs.org/examples/webgl_decals" target="_blank">WebGL / decals</a>
<a href="https://threejs.org/examples/webgl_geometry_nurbs" target="_blank">WebGL / geometry / nurbs</a>
<a href="https://threejs.org/examples/webgl_geometry_shapes" target="_blank">WebGL / geometry / shapes</a>
<a href="https://threejs.org/examples/webgl_geometry_spline_editor" target="_blank">WebGL / geometry / spline / editor</a>
<a href="https://threejs.org/examples/webgl_interactive_buffergeometry" target="_blank">WebGL / interactive / buffergeometry</a>
<a href="https://threejs.org/examples/webgl_interactive_voxelpainter" target="_blank">WebGL / interactive / voxelpainter</a>
<a href="https://threejs.org/examples/webgl_lines_colors" target="_blank">WebGL / lines / colors</a>
<a href="https://threejs.org/examples/webgl_lines_cubes" target="_blank">WebGL / lines / cubes</a>
<a href="https://threejs.org/examples/webgl_lines_dashed" target="_blank">WebGL / lines / dashed</a>
<a href="https://threejs.org/examples/webgl_lines_sphere" target="_blank">WebGL / lines / sphere</a>
<a href="https://threejs.org/examples/webgl_lines_splines" target="_blank">WebGL / lines / splines</a>
<a href="https://threejs.org/examples/webgl_materials" target="_blank">WebGL / materials</a>
<a href="https://threejs.org/examples/webgl_physics_rope" target="_blank">WebGL / physics / rope</a></pre><br>

<h4>Конструктор</h4>
<pre>LineBasicMaterial( <span onclick="showClick(type_obj)"><a href="#" onclick="return false" onblur="hideClick()" onmouseover="show('parameters - параметры')" onmouseout="hide()">parameters</a></span> )</pre>
<script>document.write(note_0, note_01);</script><br><br>

<h4>Свойства</h4>
Для информации об общих свойствах смотрите базовый класс <a href="material.htm" onmouseover="show('Material')" onmouseout="hide()">Material</a>.
<div class=blockindent><br>
<pre id="color"><a href="../math/color.htm" onmouseover="show('Color.<br>color - цвет')" onmouseout="hide()">.color</a></pre>
<a href="../math/color.htm" onmouseover="show('Color')" onmouseout="hide()">Цвет</a> материала, по умолчанию устанавливается как белый (<tt>0xffffff</tt>).<br><br>

<pre id="isLineBasicMaterial"><span onclick="showClick(type_bool)"><a href="#" onclick="return false" onblur="hideClick()" onmouseover="show('is line basic material -<br>является материалом обычных линий')" onmouseout="hide()">.isLineBasicMaterial</a></span></pre>
Используется для проверки, принадлежит ли данный объект, или производные от него, к классу LineBasicMaterial (материалу обычных линий). По умолчанию значение равно <tt>true</tt>.<br>
Не нужно его изменять, так как внутри <em>three.js</em> оно используется для оптимизации.<br><br>

<pre id="lights"><span onclick="showClick(type_bool)"><a href="#" onclick="return false" onblur="hideClick()" onmouseover="show('lights - огни, освещение')" onmouseout="hide()">.lights</a></span></pre>
Свойство определяет, будет ли освещение влиять на материал. Значением по умолчанию является <tt>false</tt>.<br><br>

<pre id="linewidth"><span onclick="showClick(type_float)"><a href="#" onclick="return false" onblur="hideClick()" onmouseover="show('line width - толщина линии')" onmouseout="hide()">.linewidth</a></span></pre>
Свойство управляет толщиной линии. Значение по умолчанию <tt>1</tt>.
<script>document.write(note_3);</script><br>

<pre id="linecap"><span onclick="showClick(type_string)"><a href="#" onclick="return false" onblur="hideClick()" onmouseover="show('line cap - конец линии')" onmouseout="hide()">.linecap</a></span></pre>
Определяет внешний вид концов линии. Возможные значения: <tt>butt</tt> (торец), <tt>round</tt> (круглый) и <tt>square</tt> (квадратный). Значение по умолчанию <tt>round</tt> - круглый.<br>
Данное свойство соответствует свойству <a href="https://developer.mozilla.org/en-US/docs/Web/API/CanvasRenderingContext2D/linecap" target="_blank"><tt>linecap</tt> в 2D Canvas</a> и игнорируется <a href="../renderers/webGLRenderer.htm" onmouseover="show('WebGLRenderer')" onmouseout="hide()">WebGL</a> визуализатором (рендерером).
Вот эта <a href="https://developer.mozilla.org/ru/docs/Web/API/CanvasRenderingContext2D/linecap" target="_blank">статья о <tt>linecap</tt></a> на русском языке.<br>
<table>
<tr><td><div class=note_trans><b>Примечание переводчика:</b> Вот нарисованы три линии с разными значениями <tt>linecap</tt>. Для наглядности добавлены две направляющие. Каждая линия будет начинаться и заканчиваться этими направляющими.<br>
Левая линия будет использовать для <tt>linecap</tt> значение <tt>butt</tt>. Она не будет выходить за направляющие. Средняя линия будет нарисована со значением <tt>round</tt>. За направляющие будут выходить полукруги с диаметром равным толщине линии. Правая линия будет использовать значение <tt>square</tt>. Она будет выходить за направляющие на поля с шириной равной толщине линии и высотой равной половине толщины.</div></td><td><img src="../img/linecap.png" width="150"></td></tr></table>

<pre id="linejoin"><span onclick="showClick(type_string)"><a href="#" onclick="return false" onblur="hideClick()" onmouseover="show('line join - соединение линии')" onmouseout="hide()">.linejoin</a></span></pre>
Определяет внешний вид соединений линии. Возможные значения: <tt>round</tt> - круглый, <tt>bevel</tt> (скос) и <tt>miter</tt> (<span class="lnk" onmouseover="show('<strong>митра</strong> - головной убор, часть богослужебного облачения<br>в ряде христианских церквей. В данном случае это<br>остроконечная католическая митра (в православии митра<br>округлая), что и определяет вид соединения линий.')" onmouseout="hide()">митра</span>). Значение по умолчанию <tt>round</tt> - круглый.<br>
<script>document.write(note_1);</script>
<table><tr><td><div class=note_trans><b>Примечание переводчика:</b> <tt>miter</tt> соединяет линии в одной точке, расширяя для этого их границы и заполняя пространство ромбами.<br>
<tt>round</tt> скругляет углы засчет добавления сектора с центром в точке пересечения линий и радиусом равным толщине линии.<br>
<tt>bevel</tt> "срезает" угол, рисуя треугольник с вершинами в точке пересечения линий и крайних точках каждой линии.</div></td><td><img src="../img/linejoin.png" width="200"></td></tr></table></div><br>

<h4>Методы</h4>
Общие методы смотрите в описании базового класса <a href="material.htm" onmouseover="show('Material')" onmouseout="hide()"><tt>Material</tt></a>.<br><br>

<h4>Исходники</h4>
<div class=blockindent><a href="https://github.com/mrdoob/three.js/blob/master/src/materials/LineBasicMaterial.js" target="_blank">LineBasicMaterial.js на github.com</a></div><br><br>

<br><br>
</body></html>