<!DOCTYPE html PUBLIC "-//W3C//DTD HTML 4.01 Transitional//EN">
<html><head>
<title>Three.js</title>
<meta http-equiv="content-type" content="text/html; charset=utf-8">
<link rel="stylesheet" type="text/css" href="1.css">
<script type="text/javascript" src="1.js"></script>
</head>
<body>
<h2 class=head1>Визуализаторы</h2>

<h3 id="1.1">WebGLRenderer</h3>
Рендерер (визуализатор) WebGL при помощи программной библиотеки <a href="https://en.wikipedia.org/wiki/WebGL" target="_blank">WebGL</a> отображает созданные сцены.
Вот <a href="https://ru.wikipedia.org/wiki/WebGL" target="_blank">статья Википедии о WebGL</a> на русском языке.<br><br>

<h4>Конструктор</h4>
<pre>WebGLRenderer( <span onclick="showClick(type_obj)"><a href="#" onclick="return false" onblur="hideClick()" onmouseover="show('parameters - параметры')" onmouseout="hide()">parameters</a></span> )</pre>
<div class=list><tt>parameters</tt> - объект со свойствами, определяющими поведение визуализатора (рендерера) (дополнительный, необязательный параметр).<br>
Конструктор также допускает полное отсутствие параметров. Во всех подобных случаях, им будут приниматься соответствующие значения по умолчанию.</div>
<div class=blockindent>Допустимы следующие параметры:
<div class=list><tt>canvas</tt> — <a href="https://developer.mozilla.org/en-US/docs/Web/HTML/Element/canvas" target="_blank" onmouseover="show('canvas - холст, полотно, картина')" onmouseout="hide()">холст</a>, на который визуализатор выводит результаты своей работы.
Он соответствует свойству <tt><a href="#1domElement" onmouseover="show('WebGLRenderer.domElement')" onmouseout="hide()">domElement</a></tt>, указанному ниже. Если он не был передан здесь, то будет создан новый элемент <tt>canvas</tt>.</div>
<div class=list><tt>context</tt> — этот параметр можно использовать для присоединения визуализатора (рендерера) к существующему <a href="https://developer.mozilla.org/en-US/docs/Web/API/WebGLRenderingContext" target="_blank">RenderingContext</a>. Значением по умолчанию является <tt>null</tt>.
Вот статья о <a href="https://developer.mozilla.org/ru/docs/Web/API/WebGLRenderingContext" target="_blank">RenderingContext</a> на русском языке.</div>
<div class=list><tt><span onclick="showClick(type_string)"><a href="#" onclick="return false" onblur="hideClick()" onmouseover="show('precision - точность')" onmouseout="hide()">precision</a></span></tt> — точность шейдера.
Может быть <tt><span class="lnk" onmouseover="show('сокращ. англ. слов high precision - высокая точность')" onmouseout="hide()">highp</span></tt>, <tt><span class="lnk" onmouseover="show('сокращ. англ. слов medium precision - средняя точность')" onmouseout="hide()">mediump</span></tt> или <tt><span class="lnk" onmouseover="show('сокращ. англ. слов low precision - низкая точность')" onmouseout="hide()">lowp</span></tt>.
Значением по умолчанию является <tt>highp</tt>, если поддерживается устройством.
Смотрите примечания "Things to Avoid" в статье <a href="https://developer.mozilla.org/en-US/docs/Web/API/WebGL_API/WebGL_best_practices" target="_blank">WebGL best practices</a>.
На русском языке это будет раздел "Чего следует избегать" в статье <a href="https://developer.mozilla.org/ru/docs/Web/API/WebGL_API/WebGL_best_practices" target="_blank">Лучшие практики WebGL</a>.</div>
<div class=list><tt><span onclick="showClick(type_bool)"><a href="#" onclick="return false" onblur="hideClick()" onmouseover="show('alpha - альфа(-канал) - канал прозрачности')" onmouseout="hide()">alpha</a></span></tt> — параметр определяет, будет ли холст (canvas) содержать буфер альфа-канала (канал прозрачности) или нет. Значением по умолчанию является <tt>false</tt>.</div>
<div class=list><tt><span onclick="showClick(type_bool)"><a href="#" onclick="return false" onblur="hideClick()" onmouseover="show('premultiplied alpha - предварительное перемножение альфа-(канала)')" onmouseout="hide()">premultipliedAlpha</a></span></tt>
— будет ли визуализатор (рендерер) предполагать, что цвета уже перемножены со значениями альфа-канала (<a href="https://en.wikipedia.org/wiki/Glossary_of_computer_graphics#Premultiplied_alpha" target="_blank">premultiplied alpha</a>). Значением по умолчанию является <tt>true</tt>.
<div class=note_trans><b>Примечание переводчика:</b> предварительное перемножение альфа-канала (premultiplied alpha) - вариант вычисления растрового изображения или альфа-смешивания,
в котором предполагается, что RGB значения цвета уже умножены на значения альфа-канала, для снижения вычислений во время альфа-смешивания;
применяется операция смешивания: <tt>dst = dst * ( 1 - alpha ) + src</tt>; допускающая соединение альфа-смешивание с дополнительными эффектами смешивания.</div></div>
<div class=list><tt><span onclick="showClick(type_bool)"><a href="#" onclick="return false" onblur="hideClick()" onmouseover="show('antialias - сглаживание')" onmouseout="hide()">antialias</a></span></tt>
—  параметр определяет, будет ли выполняться сглаживание (antialiasing). Значением по умолчанию является <tt>false</tt>.</div>
<div class=list><tt><span onclick="showClick(type_bool)"><a href="#" onclick="return false" onblur="hideClick()" onmouseover="show('stencil - шаблон, трафарет')" onmouseout="hide()">stencil</a></span></tt>
—  будет ли в буфере рисования находиться <a href="https://en.wikipedia.org/wiki/Stencil_buffer" target="_blank">буфер трафарета</a> не меньше 8 бит. Значением по умолчанию является <tt>true</tt>.
<div class=note_trans><b>Примечание переводчика:</b> вот перевод начала вышеприведенной статьи о буфере трафарета. <a class='link' onclick='javascript:spoiler(this)'>... читать далее</a>
<div style='display:none;'>Буфер трафарета - это особый буфер, в дополнение к буферам цвета и глубины (z-буферизация), установленный на современном графическом оборудовании.
Буфер попиксельный и работает с целочисленными значениями, обычно с глубиной один байт на пиксель. Буфер трафарета и буфер глубины зачастую используют одну и ту же область в оперативной памяти видеокарты.<br>
В простейшем случае буфер трафарета используется для ограничения области отрисовки (шаблонизации).
Более широкое применение буфера трафарета позволяет использовать тесную связь между буфером глубины и буфером трафарета в <a href="https://en.wikipedia.org/wiki/Graphics_pipeline" target="_blank">передаче конвейером</a>.<br>
Простая комбинация проверки глубины и модификаторов трафарета делает возможным огромное количество эффектов (таких как
<a href="http://steps3d.narod.ru/tutorials/shadow-volumes-tutorial.html" target="_blank">теневой объем</a> (<a href="https://en.wikipedia.org/wiki/Shadow_volume" target="_blank">stencil shadow volumes</a>)
(ещё <a href="https://triplepointfive.github.io/ogltutor/tutorials/tutorial40.html" target="_blank">ссылка про теневые объемы на русском языке</a>),
<span class="lnk" onmouseover="show('Теневые объемы используются для рисования теней с использованием<br>буфера трафарета. Приложение вычисляет теневые объемы, отбрасываемые<br>преграждающими геометрическими элементами, высчитывает края силуэта и<br>вытягивает их в сторону от источника света в набор трехмерных теневых<br>объемов. Затем эти объемы дважды отрисовываются в буфер трафарета.<br>'
+'Первое отображение отрисовывает полигоны стороны фигуры, находящейся<br>ближе к источнику света, и увеличивает значения буфера трафарета.<br>Второе отображение отрисовывает полигоны задней стороны теневого<br>объема и уменьшает значения буфера трафарета. Обычно все увеличения<br>и уменьшения значений компенсируют друг друга.<br>'
+'Однако сцена уже была отрисована с нормальными геометрическими<br>элементами и при отображении теневого объема некоторые пиксели не<br>прошли проверку Z-буфера. Значения, оставшиеся в буфере трафарета,<br>соответствуют пикселям в тени. Это оставшееся содержимое буфера<br>трафарета используется в качестве маски, для выполнения<br>альфа-смешивания крупного, всеобъемлющего черного квадрата на сцене.<br>С буфером трафарета, действующим в качестве маски, в результате<br>затемняются пиксели, которые находятся в тени.<br>'
+'Это означает, что тень геометрического элемента рисуется дважды для<br>каждого источника света, снижая производительность графического<br>процессора при расчете вершин. Для смягчения этой ситуации была<br>разработана функция двустороннего трафарета. При этом подходе<br>существует два набора состояний трафарета: один набор для<br>треугольников стороны фигуры, находящейся ближе к источнику света,<br>и другой — для треугольников задней стороны. Таким образом, на каждый<br>источник освещения теневой объем отрисовывается только за один проход.')" onmouseout="hide()">двусторонний трафарет</span>
(<a href="https://docs.microsoft.com/en-us/windows/desktop/direct3d9/two-sided-stencil" target="_blank">Two-Sided Stencil</a>),
<span class="lnk" onmouseover="show('Приложение может использовать буфер трафарета для<br>композитных (т.е. составных) 2D или 3D изображений<br>на 3D-сцене. '
+'Маска в буфере трафарета используется<br>для перекрытия области поверхности целевого отображения.<br>Затем, сохраненную двумерную информацию, в виде<br>текста или растрового изображения, можно записать<br>в эту перекрытую область. '
+'Кроме того, приложение может<br>отображать дополнительные 3D-примитивы в области<br>маскирования трафарета на поверхности целевого<br>отображения. Можно отобразить даже всю сцену целиком.<br><br>'
+'Игры часто объединяют несколько 3D-сцен вместе.<br>Например, при вождении машины в играх обычно<br>отображается зеркало заднего вида. Оно показывает<br>3D-сцену за водителем. Это, по сути, вторая 3D-сцена,<br>соединенная с представлением вида перед водителем.')" onmouseout="hide()">составные отображения (compositing)</span>,
наложение <a href="https://ru.wikipedia.org/wiki/%D0%94%D0%B5%D0%BA%D0%B0%D0%BB%D1%8C" target="_blank" onmouseover="show('Наложение декали (т.е. нанесение переводных картинок) применяется для<br>управления тем, какие пиксели конкретного изображения примитива<br>прорисованы на поверхности целевого отображения. '
+'Приложения применяют<br>декаль на изображениях примитивов для правильного отображения<br>копланарных (т.е. находящихся в одной плоскости) многоугольников<br>- полигонов.<br>'
+'Например, при нанесении следов от шин и линий разметки на проезжей<br>части, они должны появляться непосредственно поверх дороги. Однако<br>значения по оси <tt>z</tt> для дороги и линий разметки одинаковы. Поэтому<br>буфер глубины не может обеспечить четкое разделение между ними.<br>'
+'Некоторые пиксели примитива, находящегося позади, могут отображаться<br>поверх переднего примитива и наоборот. Получающееся изображение<br>будет казаться мерцающим при смене кадров. Этот эффект называется<br><tt>z</tt>-конфликт (<tt>z</tt>-fighting) или мерцание.<br>'
+'Для решения этой проблемы используйте трафарет, чтобы замаскировать<br>часть примитива, находящегося позади, на которой будет появляться<br>декаль. Отключите <tt>z</tt>-буферизацию и показывайте изображение переднего<br>примитива в замаскированной области поверхности целевого отображения.<br>'
+'Хотя для решения этой проблемы можно использовать многократное<br>смешивание текстур, оно ограничивает количество других специальных<br>эффектов, которые может создавать приложение. Использование же буфера<br>трафарета с применением декалей высвобождает шаги по смешиванию<br>текстуры для других эффектов.')" onmouseout="hide()">декали (переводной картинки)</a>(от англ. - <a href="https://en.wikipedia.org/wiki/Decal" target="_blank">decal</a>),
<span class="lnk" onmouseover="show('При растворении одно изображение постепенно заменяется<br>другим в плавной последовательности кадров.<br>Приложение, выполняющее растворение (dissolve) должно<br>отображать два разных изображения. При этом используется<br>буфер трафарета для управления тем, какие пиксели от<br>каждого изображения будут прорисованы на поверхности<br>целевого отображения. Можно определить серию масок<br>трафарета и копировать их в буфер трафарета в кадры,<br>следующие один за другим. С другой стороны, можно<br>определить базовую маску трафарета для первого кадра<br>и постепенно ее изменять.<br>'
+'В начале процесса растворения приложение устанавливает<br>функцию трафарета и маску трафарета, так что большинство<br>пикселей начального изображения проходят проверку<br>трафарета (stencil test). '
+'Большинство пикселей конечного<br>изображения не пройдут проверку трафарета.<br>На последующих кадрах маска трафарета обновляется,<br>так что все меньше и меньше пикселей начального<br>изображения проходит тест трафарета и все меньше<br>пикселей конечного изображения не проходят тест. Таким<br>образом, приложение может выполнить эффект растворения,<br>применяя любой, произвольный шаблон.')" onmouseout="hide()">растворение (dissolve)</span>,
<span class="lnk" onmouseover="show('Постепенное появление (fading in) и затухание (fading out)<br>- это особые случаи эффекта растворения (dissolve).<br><br>При постепенном появлении буфер трафарета используется<br>для растворения из черного или белого фона в отображение<br>3D сцены. При затухании все происходит наоборот,<br>приложение начинает отображать 3D сцену, которая<br>постепенно растворяется в черный или белый фон.<br>Постепенное появление (fading in) и затухание (fading out)<br>могут быть сделаны с помошью любого произвольного<br>шаблона, какой захотелось применить.')" onmouseout="hide()">постепенное появление (fading in) и затухание (fading out)</span>,
<span class="lnk" onmouseover="show('Техника, подобная применяемой для получения эффекта растворения,<br>используется для получения эффекта смахивания (swipe), когда<br>одно изображение сменяется другим, сдвигаясь в какую-либо<br>сторону. Например, при выполнении смахивания слева направо,<br>конечное изображение плавно скользит поверх начального<br>изображения слева направо.<br>'
+'Как и в случае растворения, нужно определить последовательность<br>масок трафарета, которые загружаются в буфер трафарета в кадрах,<br>следующих один за другим, или последовательно изменять начальную<br>маску трафарета. '
+'Маски трафарета используются для запрещения<br>записи пикселей из начального изображения и разрешения записи<br>пикселей конечного изображения.<br>'
+'Смахивание несколько сложнее растворения, так как приложение<br>должно считывать пиксели конечного изображения в направлении,<br>обратном смахиванию. То есть, если смахивание происходит слева<br>направо, то пиксели конечного изображения должны считываться<br>справа налево.')" onmouseout="hide()">смахивание (swipe)</span>,
<span class="lnk" onmouseover="show('Буфер трафарета можно использовать для более абстрактных эффектов<br>вроде рисования контуров и силуэтов.<br>'
+'Если приложение применяет маску трафарета для изображения примитива,<br>которое имеет точно такую же форму, но немного меньше по размеру,<br>то результирующее изображение будет содержать только контур этого<br>примитива. Затем можно залить эту область сплошным цветом, придавая<br>примитиву рельефный вид.<br>'
+'Если маска трафарета имеет тот же самый размер и форму, как и у<br>отображаемого примитива, то результирующее изображение будет состоять<br>из пустого места, в котором должен быть примитив. Можно заполнить его<br>черным цветом и получить силуэт примитива.')" onmouseout="hide()">рисование силуэтов и контуров</span>
или выделение пересечений в соединениях простых геометрических элементов - <a href="https://en.wikipedia.org/wiki/Geometric_primitive" target="_blank" onmouseover="show('В компьютерной графике и CAD-системах термин &#171;геометрический примитив&#187;<br>используется в различных смыслах, но в общем понимании обозначает<br>простейшие (т.е. атомарные или неделимые) геометрические объекты,<br>которые система может обрабатывать (нарисовать, сохранить).'
+'Иногда<br>подпрограммы для рисования соответствующих объектов также называют<br>&#171;геометрическими примитивами&#187;. Наиболее &#171;примитивные&#187; примитивы<br>это точка и отрезок прямой линии, которые имеются во всех самых<br>ранних системах векторной графики.<br>'
+'В понятиях стереометрии примитивами являются простые геометрические<br>фигуры, такие как куб, цилиндр, сфера, конус, пирамида, тор.<br>'
+'Современные системы двумерной компьютерной графики могут работать как<br>с примитивами в виде линий (отрезки прямых линий, окружности и более<br>сложные кривые), так и с фигурами (прямоугольниками, произвольными<br>многоугольниками (полигонами), окружностями).<br>'
+'Обычный набор двумерных примитивов включает в себя линии, точки и<br>многоугольники (полигоны), хотя некоторые люди предпочитают<br>рассматривать примитивы треугольников, так как любой многоугольник<br>можно построить из треугольников. '
+'Все другие графические элементы<br>создаются из этих примитивов.<br>В случае трех измерений, треугольники или полигоны, расположенные<br>в трехмерном пространстве, могут использоваться в качестве примитивов<br>для моделирования более сложных трехмерных фигур. '
+'Иногда кривые<br>(вроде кривых Безье, окружностей и т.д.) можно рассматривать как<br>примитивы; в других случаях кривые представляют более сложные формы,<br>созданные из множества простых, примитивных фигур.')" onmouseout="hide()">примитивов</a>),
хотя зачастую они требуют несколько проходов отрисовки и поэтому представляют большую нагрузку для видеокарты.<br>
Наиболее типичным применением является добавление теней в 3D приложениях. Также используется для двумерных отражений.<br>
Другие методы визуализации, такие как <a href="https://en.wikipedia.org/wiki/Portal_rendering" target="_blank">портальная передача</a>, используют буфер трафарета по-другому; например, можно использовать поиск области экрана, скрытой порталом, и повторно отобразить эти пиксели правильно.<br>
Буфер трафарета и его модификаторы доступны в API компьютерной графики вроде OpenGL и Direct3D.</div></div></div>

<div class=list><tt><span onclick="showClick(type_bool)"><a href="#" onclick="return false" onblur="hideClick()" onmouseover="show('preserve drawing buffer - сохранение буфера рисования')" onmouseout="hide()">preserveDrawingBuffer</a></span></tt>
— следует ли сохранять буферы до тех пор, пока они не будут удалены вручную или перезаписаны. Значением по умолчанию является <tt>false</tt>.</div>
<div class=list><tt><span onclick="showClick(type_bool)"><a href="#" onclick="return false" onblur="hideClick()" onmouseover="show('depth - глубина')" onmouseout="hide()">depth</a></span></tt>
— будет ли у буфера рисования буфер глубины размером не менее 16 бит. Значением по умолчанию является <tt>true</tt>.</div>
<div class=list id="1.1logarithmicDepthBuffer"><tt><span onclick="showClick(type_bool)"><a href="#" onclick="return false" onblur="hideClick()" onmouseover="show('logarithmic depth buffer - логарифмический буфер глубины')" onmouseout="hide()">logarithmicDepthBuffer</a></span></tt> — параметр определяет, будет ли использоваться логарифмический буфер глубины.
Его использование может понадобиться, если имеются очень большие различия в масштабе при работе в одной сцене. Значением по умолчанию является <tt>false</tt>.
Смотрите пример <a href="https://threejs.org/examples/#webgl_camera_logarithmicdepthbuffer" target="_blank">camera / logarithmicdepthbuffer</a>.</div></div><br>

<h4>Свойства</h4>
<div class=blockindent><br>
<pre id="1.1autoClear"><span onclick="showClick(type_bool)"><a href="#" onclick="return false" onblur="hideClick()" onmouseover="show('auto clear - автоматическая очистка')" onmouseout="hide()">.autoClear</a></span></pre>
Свойство определяет, будет ли визуализатор (рендерер) автоматически очищать свой выход перед визуализацией (рендерингом).<br><br>

<pre id="1.1autoClearColor"><span onclick="showClick(type_bool)"><a href="#" onclick="return false" onblur="hideClick()" onmouseover="show('auto clear color - автоматическая очистка (буфера) цвета')" onmouseout="hide()">.autoClearColor</a></span></pre>
Свойство определяет, должен ли визуализатор (рендерер) очищать буфер цвета, если значение свойства <tt><a href="#1.1autoClear" onmouseover="show('WebGLRenderer.autoClear')" onmouseout="hide()">autoClear</a></tt> установлено как <tt>true</tt>. Значением по умолчанию является <tt>true</tt>.<br><br>

<pre id="1.1autoClearDepth"><span onclick="showClick(type_bool)"><a href="#" onclick="return false" onblur="hideClick()" onmouseover="show('auto clear depth - автоматическая очистка глубины')" onmouseout="hide()">.autoClearDepth</a></span></pre>
Свойство определяет, должен ли визуализатор (рендерер) очищать буфер глубины, если значение свойства <tt><a href="#1.1autoClear" onmouseover="show('WebGLRenderer.autoClear')" onmouseout="hide()">autoClear</a></tt> установлено как <tt>true</tt>. Значением по умолчанию является <tt>true</tt>.<br><br>

<pre id="1.1autoClearStencil"><span onclick="showClick(type_bool)"><a href="#" onclick="return false" onblur="hideClick()" onmouseover="show('auto clear stencil - автоматическая очистка (буфера) трафарета')" onmouseout="hide()">.autoClearStencil</a></span></pre>
Свойство определяет, должен ли визуализатор (рендерер) очищать буфер трафарета, если значение свойства <tt><a href="#1.1autoClear" onmouseover="show('WebGLRenderer.autoClear')" onmouseout="hide()">autoClear</a></tt> установлено как <tt>true</tt>. Значением по умолчанию является <tt>true</tt>.<br><br>

<pre id="1.1capabilities"><span onclick="showClick(type_obj)"><a href="#" onclick="return false" onblur="hideClick()" onmouseover="show('capabilities - возможности')" onmouseout="hide()">.capabilities</a></span></pre>
Объект, содержащий сведения о возможностях текущего <a href="https://developer.mozilla.org/en-US/docs/Web/API/WebGLRenderingContext" target="_blank">RenderingContext</a>.
Вот <a href="https://developer.mozilla.org/ru/docs/Web/API/WebGLRenderingContext" target="_blank">статья Википедии о RenderingContext</a> на русском языке.
<div class=list><tt><span onclick="showClick(type_bool)"><a href="#" onclick="return false" onblur="hideClick()" onmouseover="show('float fragment textures - значения для<br>текстур фрагментов представлены<br>числами с плавающей запятой')" onmouseout="hide()">floatFragmentTextures</a></span></tt>:
поддерживает ли контекст расширение <a href="https://developer.mozilla.org/en-US/docs/Web/API/OES_texture_float" target="_blank">OES_texture_float</a>.
По данным <a href="https://webglstats.com/" target="_blank">WebGLStats</a>, по состоянию на февраль 2016 года, его поддерживают свыше 95% устройств, совместимых с WebGL.</div>
<div class=list><tt><span onclick="showClick(type_bool)"><a href="#" onclick="return false" onblur="hideClick()" onmouseover="show('float vertex textures - значения для<br>текстур вершин представлены<br>числами с плавающей запятой')" onmouseout="hide()">floatVertexTextures</a></span></tt>:
значение равно <tt>true</tt>, если значениями и <tt>floatFragmentTextures</tt> и <tt>vertexTextures</tt> является <tt>true</tt>.</div>
<div class=list><tt><span onclick="showClick('метод')"><a href="#" onclick="return false" onblur="hideClick()" onmouseover="show('get max anisotropy - получить максимальную анизотропию')" onmouseout="hide()">getMaxAnisotropy</a></span>()</tt>:
метод возвращает значение максимально возможной анизотропии.</div>
<div class=list><tt><span onclick="showClick('метод')"><a href="#" onclick="return false" onblur="hideClick()" onmouseover="show('get max precision - получить максимальную точность')" onmouseout="hide()">getMaxPrecision</a></span>()</tt>:
метод возвращает значение максимально возможной точности для вершинного и фрагментарного шейдеров.</div>
<div class=list><tt><span onclick="showClick(type_bool)"><a href="#" onclick="return false" onblur="hideClick()" onmouseover="show('logarithmic depth buffer - логарифмический буфер глубины')" onmouseout="hide()">logarithmicDepthBuffer</a></span></tt>:
значением является <tt>true</tt>, если в конструкторе параметр <tt><a href="#1.1logarithmicDepthBuffer" onmouseover="show('logarithmicDepthBuffer')" onmouseout="hide()">logarithmicDepthBuffer</a></tt>
был установлен как <tt>true</tt>, а контекст поддерживает расширение <a href="https://developer.mozilla.org/en-US/docs/Web/API/EXT_frag_depth" target="_blank">EXT_frag_depth</a>.
По данным <a href="https://webglstats.com/" target="_blank">WebGLStats</a>, по состоянию на февраль 2016 года, его поддерживают около 66% устройств, совместимых с WebGL.</div>
<div class=list><tt><span onclick="showClick(type_int)"><a href="#" onclick="return false" onblur="hideClick()" onmouseover="show('max attributes - максимум атрибутов')" onmouseout="hide()">maxAttributes</a></span></tt>:
значение <tt><span class="lnk" onmouseover="show('Максимальное количество 4-элементых векторов,<br>которые можно использовать в качестве атрибутов<br>вершинного шейдера. Каждый атрибут считается<br>как минимум одним 4-элементным вектором.')" onmouseout="hide()">gl.MAX_VERTEX_ATTRIBS</span></tt>.</div>
<div class=list><tt><span onclick="showClick(type_int)"><a href="#" onclick="return false" onblur="hideClick()" onmouseover="show('max cube map size - максимальный размер карты куба')" onmouseout="hide()">maxCubemapSize</a></span></tt>:
значение <tt><span class="lnk" onmouseover="show('Максимальный размер любой стороны кубической карты.')" onmouseout="hide()">gl.MAX_CUBE_MAP_TEXTURE_SIZE</span></tt>. Максимальное значение <tt>height * width</tt> текстур карты куба, которые может использовать шейдер.</div>
<div class=list><tt><span onclick="showClick(type_int)"><a href="#" onclick="return false" onblur="hideClick()" onmouseover="show('max fragment uniforms - максимум униформ фрагмента')" onmouseout="hide()">maxFragmentUniforms</a></span></tt>:
значение <tt><span class="lnk" onmouseover="show('Максимальное число 4-элементных векторов, которые<br>могут быть переданы в вершинный шейдер как униформы.<br>Все униформы выровнены по 4 элемента, одиночный униформ<br>считается как минимум одним 4-элементным вектором.')" onmouseout="hide()">gl.MAX_FRAGMENT_UNIFORM_VECTORS</span></tt>.
Количество униформ, что могут быть использованы шейдером фрагментов.</div>
<div class=list><tt><span onclick="showClick(type_int)"><a href="#" onclick="return false" onblur="hideClick()" onmouseover="show('max texture size - максимальный размер текстуры')" onmouseout="hide()">maxTextureSize</a></span></tt>:
значение <tt><span class="lnk" onmouseover="show('Наибольший размер текстуры (либо по ширине, либо по высоте),<br>который может быть создан. Заметьте, что VRAM может не разрешить<br>текстуру любого заданного размера, он как раз выражает поддержку<br>драйвером/оборудованием данного размера.<br><br>VRAM (сокращ.англ. слов Video Random Access Memory - видеопамять<br>с произвольным доступом) — ОЗУ для видеоизображений.<br>Оперативная память для временного хранения изображения (буфер<br>кадра), сформированного видеоадаптером и передаваемого<br>на видеомонитор. Является двухпортовой памятью — может<br>одновременно записывать данные для изменения изображения в то<br>время, когда видеоадаптер непрерывно считывает содержимое для<br>прорисовки его на экране.')" onmouseout="hide()">gl.MAX_TEXTURE_SIZE</span></tt>. Максимальное значение <tt>height * width</tt> текстуры, которое использует шейдер.</div>
<div class=list><tt><span onclick="showClick(type_int)"><a href="#" onclick="return false" onblur="hideClick()" onmouseover="show('max textures - максимум текстур')" onmouseout="hide()">maxTextures</a></span></tt>:
значение <tt><span class="lnk" onmouseover="show('Максимальное число блоков текстуры, которые могут<br>быть использованы в шейдере фрагментов.')" onmouseout="hide()">gl.MAX_TEXTURE_IMAGE_UNITS</span></tt>. Максимальное количество текстур, которое может быть использовано шейдером.</div>
<div class=list><tt><span onclick="showClick(type_int)"><a href="#" onclick="return false" onblur="hideClick()" onmouseover="show('max varyings - максимум вариаций')" onmouseout="hide()">maxVaryings</a></span></tt>:
значение <tt><span class="lnk" onmouseover="show('Максимальное число 4-элементных векторов,<br>которые могут быть использованы в качестве<br>вариаций. Каждая вариация считается как<br>минимум одним 4-элементным вектором.')" onmouseout="hide()">gl.MAX_VARYING_VECTORS</span></tt>. Число векторов-вариаций, которое могут использовать шейдеры.</div>
<div class=list><tt><span onclick="showClick(type_int)"><a href="#" onclick="return false" onblur="hideClick()" onmouseover="show('max vertex textures - максимум вершинных текстур')" onmouseout="hide()">maxVertexTextures</a></span></tt>:
значение <tt><span class="lnk" onmouseover="show('Максимальное количество текстурных блоков, которые<br>может использовать вершинный шейдер. Значением<br>может быть 0, который означает отсутствие поддержки<br>текстурирования вершинным шейдером.')" onmouseout="hide()">gl.MAX_VERTEX_TEXTURE_IMAGE_UNITS</span></tt>.
Количество текстур, которые могут быть использованы в вершинном шейдере.</div>
<div class=list><tt><span onclick="showClick(type_int)"><a href="#" onclick="return false" onblur="hideClick()" onmouseover="show('max vertex uniforms - максимум униформ вершин')" onmouseout="hide()">maxVertexUniforms</a></span></tt>:
значение <tt><span class="lnk" onmouseover="show('Максимальное число 4-элементных векторов, которые<br>могут быть переданы в качестве униформ вершинному<br>шейдеру. Все униформы выровнены по 4 элемента,<br>одиночный униформ считается как минимум одним<br>4-элементным вектором.')" onmouseout="hide()">gl.MAX_VERTEX_UNIFORM_VECTORS</span></tt>. Максимальное число униформ, которые могут быть использованы вершинным шейдером.</div>
<div class=list><tt><span onclick="showClick(type_string)"><a href="#" onclick="return false" onblur="hideClick()" onmouseover="show('precision - точность')" onmouseout="hide()">precision</a></span></tt>:
точность шейдера, используемая в настоящий момент рендерером (визуализатором).</div>
<div class=list><tt><span onclick="showClick(type_bool)"><a href="#" onclick="return false" onblur="hideClick()" onmouseover="show('vertex textures - текстуры вершин')" onmouseout="hide()">vertexTextures</a></span></tt>:
равно <tt>true</tt>, если <tt>maxVertexTextures</tt> больше <tt>0</tt> (то есть, можно использовать текстуры вершин).</div><br>

<pre id="1.1clippingPlanes"><span onclick="showClick(type_array)"><a href="#" onclick="return false" onblur="hideClick()" onmouseover="show('clipping planes - плоскости отсечения')" onmouseout="hide()">.clippingPlanes</a></span></pre>
Создаваемые пользователем плоскости отсечения, определяемые в мировом пространстве как объекты THREE.Plane. Эти плоскости применяются глобально.
Точки в пространстве, чье <a href="https://ru.wikipedia.org/wiki/%D0%A1%D0%BA%D0%B0%D0%BB%D1%8F%D1%80%D0%BD%D0%BE%D0%B5_%D0%BF%D1%80%D0%BE%D0%B8%D0%B7%D0%B2%D0%B5%D0%B4%D0%B5%D0%BD%D0%B8%D0%B5" target="_blank">скалярное произведение</a> (<a href="https://en.wikipedia.org/wiki/Dot_product" target="_blank">dot product</a>) с плоскостью является отрицательным, отсекаются.
Значением по умолчанию является <tt>[]</tt>.<br><br>

<pre id="1.1context"><span onclick="showClick('WebGLRenderingContext')"><a href="#" onclick="return false" onblur="hideClick()" onmouseover="show('context - контекст')" onmouseout="hide()">.context</a></span></pre>
Визуализатор (рендерер) по умолчанию получает контекст <a href="https://developer.mozilla.org/en-US/docs/Web/API/WebGLRenderingContext" target="_blank">RenderingContext</a> из своего <tt>domElement</tt>,
при помощи <a href="https://developer.mozilla.org/en-US/docs/Web/API/HTMLCanvasElement/getContext" target="_blank">HTMLCanvasElement.getContext()</a>.
Вот описание <a href="https://developer.mozilla.org/ru/docs/Web/API/WebGLRenderingContext" target="_blank">RenderingContext</a> и <a href="https://developer.mozilla.org/ru/docs/Web/API/HTMLCanvasElement/getContext" target="_blank">HTMLCanvasElement.getContext()</a> на русском языке.<br>
Контекст может быть создан вручную, однако он должен соответствовать свойству <tt>domElement</tt> для отображения на экране.<br><br>

<pre id="1.1domElement"><span onclick="showClick('DOMElement')"><a href="#" onclick="return false" onblur="hideClick()" onmouseover="show('dom element - элемент DOM (Document Object Model<br>— «объектная модель документа»)')" onmouseout="hide()">.domElement</a></span></pre>
Элемент <a href="https://developer.mozilla.org/en-US/docs/Web/HTML/Element/canvas" target="_blank">canvas</a> - холст, на котором рендерер (визуализатор) рисует результат своей работы.<br>
Он автоматически создается визуализатором (рендерером) в конструкторе (если уже не предоставлен); нужно просто добавить его на страницу, вот так:
<pre>document.body.appendChild( renderer.domElement );</pre><br>

<pre id="1.1extensions"><span onclick="showClick(type_obj)"><a href="#" onclick="return false" onblur="hideClick()" onmouseover="show('extensions - расширения')" onmouseout="hide()">.extensions</a></span></pre>
Оболочка для метода <tt><a href="#1.1extensions.get" onmouseover="show('WebGLRenderer.extensions.get')" onmouseout="hide()">extensions.get</a></tt>, используется для проверки поддержки различных расширений WebGL.<br><br>

<pre id="1.1gammaFactor"><span onclick="showClick(type_float)"><a href="#" onclick="return false" onblur="hideClick()" onmouseover="show('gamma factor - гамма-множитель')" onmouseout="hide()">.gammaFactor</a></span></pre>
<a href="https://ru.wikipedia.org/wiki/%D0%93%D0%B0%D0%BC%D0%BC%D0%B0-%D0%BA%D0%BE%D1%80%D1%80%D0%B5%D0%BA%D1%86%D0%B8%D1%8F" target="_blank">Гамма-коррекция</a>, т.е. коррекция яркости или цветовых компонентов цифрового изображения или видео. Значение по умолчанию равно&nbsp;<tt>2</tt>.<br><br>

<pre id="1.1gammaInput"><span onclick="showClick(type_bool)"><a href="#" onclick="return false" onblur="hideClick()" onmouseover="show('gamma input - гамма-вход')" onmouseout="hide()">.gammaInput</a></span></pre>
Если свойство установлено, то предполагается, что все текстуры и цвета предварительно перемножены на значение <tt>gammaFactor</tt>. Значением по умолчанию является&nbsp;<tt>false</tt>.<br><br>

<pre id="1.1gammaOutput"><span onclick="showClick(type_bool)"><a href="#" onclick="return false" onblur="hideClick()" onmouseover="show('gamma output - гамма-выход')" onmouseout="hide()">.gammaOutput</a></span></pre>
Если свойство установлено то предполагается, что все текстуры и цвета должны выводиться предварительно перемноженными на значение <tt>gammaFactor</tt>. Значением по умолчанию является&nbsp;<tt>false</tt>.<br><br>

<pre id="1.1info"><span onclick="showClick(type_obj)"><a href="#" onclick="return false" onblur="hideClick()" onmouseover="show('сокращ. англ. слова information - информация, сведения')" onmouseout="hide()">.info</a></span></pre>
Объект с рядом статических сведений о памяти видеокарты и процессе визуализации. Полезно при отладке или просто из любопытства. Объект содержит следующие поля:
<div class=blockindent><tt>memory</tt> (память):
<div class=blockindent><tt>geometries</tt> (геометрические элементы)<br>
<tt>textures</tt> (текстуры)</div></div>
<div class=blockindent><tt>render</tt> (визуализация):
<div class=blockindent><tt>calls</tt> (вызовы)<br>
<tt>vertices</tt> (вершины)<br>
<tt>faces</tt> (грани)<br>
<tt>points</tt> (точки)</div></div>
<div class=blockindent><tt>programs</tt> (программы)</div><br>

<pre id="1.1localClippingEnabled"><span onclick="showClick(type_bool)"><a href="#" onclick="return false" onblur="hideClick()" onmouseover="show('local clipping enabled - локальное отсечение включено')" onmouseout="hide()">.localClippingEnabled</a></span></pre>
Свойство определяет, соблюдает ли рендерер (визуализатор) плоскости отсечения на объектном уровне. Значением по умолчанию является&nbsp;<tt>false</tt>.<br><br>

<pre id="1.1maxMorphNormals"><span onclick="showClick(type_int)"><a href="#" onclick="return false" onblur="hideClick()" onmouseover="show('max morph normals - ')" onmouseout="hide()">.maxMorphNormals</a></span></pre>
Значение по умолчанию равно&nbsp;<tt>4</tt>. Максимальное число MorphNormals допускаемых в шейдере. Имейте ввиду, что для стандартных материалов разрешается только 4 MorphNormals.<br><br>

<pre id="1.1maxMorphTargets"><span onclick="showClick(type_int)"><a href="#" onclick="return false" onblur="hideClick()" onmouseover="show('max morph targets - максимум целей морфинга')" onmouseout="hide()">.maxMorphTargets</a></span></pre>
Максимальное число целей морфинга (MorphTargets), допускаемых в шейдере. Значение по умолчанию равно&nbsp;<tt>8</tt>. Имейте ввиду, что стандартные материалы допускают только 8 целей морфинга.<br><br>

<pre id="1.1physicallyCorrectLights"><span onclick="showClick(type_bool)"><a href="#" onclick="return false" onblur="hideClick()" onmouseover="show('physically correct lights - физически правильное освещение')" onmouseout="hide()">.physicallyCorrectLights</a></span></pre>
Свойство определяет, использовать ли режим освещения, правильный с точки зрения физики. Значением по умолчанию является&nbsp;<tt>false</tt>. Смотрите пример <tt><a href="https://threejs.org/examples/webgl_lights_physical" target="_blank">lights / physical</a></tt>.<br><br>

<pre id="1.1properties"><span onclick="showClick(type_obj)"><a href="#" onclick="return false" onblur="hideClick()" onmouseover="show('properties - свойства')" onmouseout="hide()">.properties</a></span></pre>
Свойство предназначено для внутреннего использования визуализатором, чтобы отслеживать различные свойства вложенных объектов.<br><br>

<pre id="1.1renderLists"><a href="#" target="_blank" onmouseover="show('WebGLRenderLists<br>render lists - списки визуализации')" onmouseout="hide()">.renderLists</a></pre>
Свойство предназначено для внутреннего использования визуализатором, чтобы обрабатывать порядок отображения объектов на сцене.<br><br>

<pre id="1.1shadowMap"><a href="#" target="_blank" onmouseover="show('WebGLShadowMap<br>shadow map - теневая карта')" onmouseout="hide()">.shadowMap</a></pre>
Свойство содержит ссылки на теневую карту, если таковая используется.<br><br>

<pre id="1.1shadowMap.enabled"><span onclick="showClick(type_bool)"><a href="#" onclick="return false" onblur="hideClick()" onmouseover="show('shadowMap.enabled - включить теневую карту')" onmouseout="hide()">.shadowMap.enabled</a></span></pre>
Если свойство установлено, на сцене используются теневые карты. Значением по умолчанию является&nbsp;<tt>false</tt>.<br><br>

<pre id="1.1shadowMap.autoUpdate"><span onclick="showClick(type_bool)"><a href="#" onclick="return false" onblur="hideClick()" onmouseover="show('shadowMap.autoUpdate - автоматическое обновление теневой карты')" onmouseout="hide()">.shadowMap.autoUpdate</a></span></pre>
Свойство включает автоматическое обновление теней на сцене. Значением по умолчанию является&nbsp;<tt>true</tt>.<br>
Если динамическое освещение/затенение не требуется, можно установить в данном свойстве значение&nbsp;<tt>false</tt>, при создании экземпляра визуализатора (рендерера).<br><br>

<pre id="1.1shadowMap.needsUpdate"><span onclick="showClick(type_bool)"><a href="#" onclick="return false" onblur="hideClick()" onmouseover="show('shadowMap.needsUpdate - требуется обновление теневой карты')" onmouseout="hide()">.shadowMap.needsUpdate</a></span></pre>
Если свойству задано значение&nbsp;<tt>true</tt>, теневые карты сцены будут обновлены при следующем вызове визуализации. Значением по умолчанию является&nbsp;<tt>false</tt>.<br>
Если автоматическое обновление теневых карт отключено (т.е. <tt>shadowMap.autoUpdate = false</tt>), необходимо установить в данном свойстве значение&nbsp;<tt>true</tt>, а затем выполнить вызов визуализации для обновления теней на сцене.<br><br>

<pre id="1.1shadowMap.type"><span onclick="showClick(type_int)"><a href="#" onclick="return false" onblur="hideClick()" onmouseover="show('shadowMap.type - тип теневой карты')" onmouseout="hide()">.shadowMap.type</a></span></pre>
Свойство определяет тип теневой карты (без фильтра, с фильтром процентного приближения, с фильтром процентного приближения с билинейной фильтрацией в шейдере).<br>
Возможные варианты: THREE.BasicShadowMap, THREE.PCFShadowMap (значение по умолчанию), THREE.PCFSoftShadowMap. Подробнее смотрите в описании <a href="constants.htm#6.3" onmouseover="show('Типы тени (shadow types)')" onmouseout="hide()">констант WebGLRenderer'а</a>.<br><br>

<pre id="1.1sortObjects"><span onclick="showClick(type_bool)"><a href="#" onclick="return false" onblur="hideClick()" onmouseover="show('sort objects - сортировка объектов')" onmouseout="hide()">.sortObjects</a></span></pre>
Свойство определяет, будет ли рендерер (визуализатор) сортировать объекты. Значением по умолчанию является&nbsp;<tt>true</tt>.
<div class=note><b>Примечание:</b> Сортировка применяется чтобы попробовать правильно отобразить объекты с некоторым уровнем прозрачности. По определению, сортировка объектов может работать не во всех случаях.
В зависимости от потребностей приложения, может появиться необходимость отключения сортировки и использования других методов работы с отображением прозрачности, например, вручную определяя порядок отображения каждого объекта.</div><br>

<pre id="1.1state"><span onclick="showClick(type_obj)"><a href="#" onclick="return false" onblur="hideClick()" onmouseover="show('state - состояние')" onmouseout="hide()">.state</a></span></pre>
Объект содержит функции для установки разных свойств состояния <a href="#1.1context" onmouseover="show('WebGLRenderer.context')" onmouseout="hide()">WebGLRenderer.context</a>.<br><br>
<pre id="1.1toneMapping"><span onclick="showClick(type_const)"><a href="#" onclick="return false" onblur="hideClick()" onmouseover="show('tone mapping - отображение тонов')" onmouseout="hide()">.toneMapping</a></span></pre>
Значением по умолчанию является <a href="constants.htm#6.4" onmouseover="show('linear tone mapping - линейное отображение тонов')" onmouseout="hide()">LinearToneMapping</a>.
Другие варианты смотрите в описании <a href="constants.htm#6.4" onmouseover="show('отображение тонов (tone mapping)')" onmouseout="hide()">констант WebGLRenderer'а</a>.<br><br>

<pre id="1.1toneMappingExposure"><span onclick="showClick(type_number)"><a href="#" onclick="return false" onblur="hideClick()" onmouseover="show('tone mapping exposure - экспозиция отображения тонов')" onmouseout="hide()">.toneMappingExposure</a></span></pre>
Уровень <a href="https://ru.wikipedia.org/wiki/%D0%AD%D0%BA%D1%81%D0%BF%D0%BE%D0%BA%D0%BE%D1%80%D1%80%D0%B5%D0%BA%D1%86%D0%B8%D1%8F" target="_blank">экспозиции</a> отображения тонов. Значение по умолчанию равно&nbsp;<tt>1</tt>.<br><br>

<pre id="1.1toneMappingWhitePoint"><span onclick="showClick(type_number)"><a href="#" onclick="return false" onblur="hideClick()" onmouseover="show('tone mapping white point - белая точка отображения тонов')" onmouseout="hide()">.toneMappingWhitePoint</a></span></pre>
Значение белой точки при отображении тонов, т.е. значение, после которого информация в светлых тонах обрезается. Все пиксели со значениями выше этого будут белыми. Значение по умолчанию равно&nbsp;<tt>1</tt>.</div><br>

<h4>Методы</h4>
<div class=blockindent><br>
<pre id="1.1allocTextureUnit"><span onclick="showClick(type_int)"><a href="#" onclick="return false" onblur="hideClick()" onmouseover="show('сокращ. англ. слов allocate texture unit - выделить блок текстуры')" onmouseout="hide()">.allocTextureUnit</a></span></pre>
Метод пытается выделить блок текстуры для использования шейдером. При попытке выделения блоков текстуры больше, чем поддерживается GPU, будет предупреждение.
В основном этот метод используется внутренне.
Смотрите описание свойства <a href="#1.1capabilities" onmouseover="show('WebGLRenderer.capabilities.maxTextures')" onmouseout="hide()">capabilities.maxTextures</a>.<br><br>

<pre id="1.1clear"><span onclick="showClick(type_null)"><a href="#" onclick="return false" onblur="hideClick()" onmouseover="show('clear - очистить')" onmouseout="hide()">.clear</a></span>( <span onclick="showClick(type_bool)"><a href="#" onclick="return false" onblur="hideClick()" onmouseover="show('color - цвет')" onmouseout="hide()">color</a></span>, <span onclick="showClick(type_bool)"><a href="#" onclick="return false" onblur="hideClick()" onmouseover="show('depth - глубина')" onmouseout="hide()">depth</a></span>, <span onclick="showClick(type_bool)"><a href="#" onclick="return false" onblur="hideClick()" onmouseover="show('stencil - трафарет')" onmouseout="hide()">stencil</a></span> )</pre>
Метод указывает рендереру очистить буфер(ы) прорисовки цвета, глубины или трафарета. Данный метод инициализирует буфер цвета с текущим значением прозрачного цвета. По умолчанию аргументы равны <tt>true</tt>.<br><br>

<pre id="1.1clearColor"><span onclick="showClick(type_null)"><a href="#" onclick="return false" onblur="hideClick()" onmouseover="show('clear color - очистить (буфер) цвета')" onmouseout="hide()">.clearColor</a></span>( )</pre>
Метод очищает буфер цвета. Равнозначен вызову метода <tt><a href="#1.1clear" onmouseover="show('WebGLRenderer.clear')" onmouseout="hide()">.clear</a>( true, false, false )</tt>.<br><br>

<pre id="1.1clearDepth"><span onclick="showClick(type_null)"><a href="#" onclick="return false" onblur="hideClick()" onmouseover="show('clear depth - очистить (буфер) глубины')" onmouseout="hide()">.clearDepth</a></span>( )</pre>
Метод очищает буфер глубины. Равнозначен вызову метода <tt><a href="#1.1clear" onmouseover="show('WebGLRenderer.clear')" onmouseout="hide()">.clear</a>( false, true, false )</tt>.<br><br>

<pre id="1.1clearStencil"><span onclick="showClick(type_null)"><a href="#" onclick="return false" onblur="hideClick()" onmouseover="show('clear stencil - очистить (буфер) трафарета')" onmouseout="hide()">.clearStencil</a></span>( )</pre>
Метод очищает буфер трафарета. Равнозначен вызову метода <tt><a href="#1.1clear" onmouseover="show('WebGLRenderer.clear')" onmouseout="hide()">.clear</a>( false, false, true )</tt>.<br><br>

<pre id="1.1clearTarget"><span onclick="showClick(type_null)"><a href="#" onclick="return false" onblur="hideClick()" onmouseover="show('clear target - очистить целевой (буфер визуализации)')" onmouseout="hide()">.clearTarget</a></span>( <a href="#1.2" onmouseover="show('WebGLRenderTarget.<br>render target - целевой (буфер) визуализации')" onmouseout="hide()">renderTarget</a>, <span onclick="showClick(type_bool)"><a href="#" onclick="return false" onblur="hideClick()" onmouseover="show('color - цвет')" onmouseout="hide()">color</a></span>, <span onclick="showClick(type_bool)"><a href="#" onclick="return false" onblur="hideClick()" onmouseover="show('depth - глубина')" onmouseout="hide()">depth</a></span>, <span onclick="showClick(type_bool)"><a href="#" onclick="return false" onblur="hideClick()" onmouseover="show('stencil - трафарет')" onmouseout="hide()">stencil</a></span> )</pre>
<div class=list><tt>renderTarget</tt> -- целевой буфер визуализации, который нужно очистить.</div>
<div class=list><tt>color</tt> -- если аргумент установлен, то буфер цвета очищается.</div>
<div class=list><tt>depth</tt> -- если аргумент установлен, то буфер глубины очищается.</div>
<div class=list><tt>stencil</tt> -- если аргумент установлен, то буфер трафарета очищается.</div>
Этот метод очищает целевой буфер визуализации. Чтобы сделать это, он активирует целевой буфер визуализации.<br><br>

<pre id="1.1compile"><span onclick="showClick(type_null)"><a href="#" onclick="return false" onblur="hideClick()" onmouseover="show('compile - собирать, составлять, накапливать')" onmouseout="hide()">.compile</a></span>( <a href="scenes.htm#3" onmouseover="show('Scene.<br>scene - сцена')" onmouseout="hide()">scene</a>, <a href="cameras.htm#1" onmouseover="show('Camera.<br>camera - камера')" onmouseout="hide()">camera</a> )</pre>
Compiles all materials in the scene with the camera. This is useful to precompile shaders before the first rendering.<br><br>

<pre id="1.1copyFramebufferToTexture"><span onclick="showClick(type_null)"><a href="#" onclick="return false" onblur="hideClick()" onmouseover="show('copy frame buffer to texture -<br>копировать буфер кадра в текстуру')" onmouseout="hide()">.copyFramebufferToTexture</a></span>( <a href="math.htm#18" onmouseover="show('Vector2.<br>position - положение, позиция')" onmouseout="hide()">position</a>, <a href="textures.htm#6" onmouseover="show('Texture.<br>texture - текстура')" onmouseout="hide()">texture</a>, <span onclick="showClick(type_number)"><a href="#" onclick="return false" onblur="hideClick()" onmouseover="show('level - уровень')" onmouseout="hide()">level</a></span> )</pre>
Метод копирует пикселы из текущего WebGLFramebuffer в двумерную текстуру. Включает доступ к <a href="https://developer.mozilla.org/en-US/docs/Web/API/WebGLRenderingContext/copyTexImage2D" target="_blank">WebGLRenderingContext.copyTexImage2D</a>.<br><br>

<pre id="1.1dispose"><span onclick="showClick(type_null)"><a href="#" onclick="return false" onblur="hideClick()" onmouseover="show('dispose - выбросить, избавиться')" onmouseout="hide()">.dispose</a></span>( )</pre>
Удаляет текущий контекст визуализации.<br><br>

<pre id="1.1extensions.get"><span onclick="showClick(type_obj)"><a href="#" onclick="return false" onblur="hideClick()" onmouseover="show('extensions.get - расширения.получить')" onmouseout="hide()">.extensions.get</a></span>( <span onclick="showClick(type_string)"><a href="#" onclick="return false" onblur="hideClick()" onmouseover="show('extension name - название расширения')" onmouseout="hide()">extensionName</a></span> )</pre>
Метод используется для проверки поддержки разных расширений и, если таковая имеется, возвращает объект с подробной информацией о расширении. Он может проверять следующие расширения:
<div class=list><tt><a href="https://developer.mozilla.org/en-US/docs/Web/API/WEBGL_depth_texture" target="_blank" onmouseover="show('Расширение WEBGL_depth_texture является частью API WebGL и<br>определяет глубину двумерных текстур и глубину текстур трафарета.')" onmouseout="hide()">WEBGL_depth_texture</a></tt></div>
<div class=list><tt><a href="https://developer.mozilla.org/en-US/docs/Web/API/EXT_texture_filter_anisotropic" target="_blank" onmouseover="show('Расширение EXT_texture_filter_anisotropic является частью API WebGL<br>и предоставляет две константы для анизотропной фильтрации.<br>Она улучшает качество доступа к текстуре с mip-картированием при<br>просмотре примитива текстуры под косым углом. При использовании<br>только mip-картирования, эти подстановки имеют тенденцию к<br>усреднению до серого цвета.')" onmouseout="hide()">EXT_texture_filter_anisotropic</a></tt></div>
<div class=list><tt><a href="https://developer.mozilla.org/en-US/docs/Web/API/WEBGL_compressed_texture_s3tc" target="_blank" onmouseover="show('Расширение WEBGL_compressed_texture_s3tc является частью API WebGL<br>и предоставляет четыре формата сжатия текстур S3TC.<br>Сжатые текстуры уменьшают объем памяти, необходимый для хранения<br>текстуры на графическом процессоре, что позволяет использовать<br>текстуры с более высоким разрешением или увеличить количество<br>текстур с одинаковым разрешением.')" onmouseout="hide()">WEBGL_compressed_texture_s3tc</a></tt></div>
<div class=list><tt><a href="https://developer.mozilla.org/en-US/docs/Web/API/WEBGL_compressed_texture_pvrtc" target="_blank" onmouseover="show('Расширение WEBGL_compressed_texture_pvrtc часть WebGL API<br>и представляет четыре формата сжатия текстур PVRTC.<br>Обычно PVRTC доступен только на мобильных устройствах с<br>чипсетом PowerVR. Используется во всех поколениях iPhone,<br>iPod Touch и iPad и поддерживается на определённых Android<br>устройствах, использующих PowerVR GPU.')" onmouseout="hide()">WEBGL_compressed_texture_pvrtc</a></tt></div>
<div class=list><tt><a href="https://developer.mozilla.org/en-US/docs/Web/API/WEBGL_compressed_texture_etc1" target="_blank" onmouseover="show('Расширение WEBGL_compressed_texture_etc1 является частью API WebGL<br>и предоставляет формат сжатия текстуры ETC1')" onmouseout="hide()">WEBGL_compressed_texture_etc1</a></tt></div><br>

<pre id="1.1forceContextLoss"><span onclick="showClick(type_null)"><a href="#" onclick="return false" onblur="hideClick()" onmouseover="show('force context loss - принудительная потеря контента')" onmouseout="hide()">.forceContextLoss</a></span>( )</pre>
Имитация потери контекста WebGL. Это требует поддержки расширения <a href="https://developer.mozilla.org/en-US/docs/Web/API/WEBGL_lose_context" target="_blank" onmouseover="show('Расширение WEBGL_lose_context является частью API WebGL и<br>предоставляет функции для имитации потери и восстановления<br>WebGLRenderingContext.')" onmouseout="hide()">WEBGL_lose_context</a>.
По данным <a href="https://webglstats.com/" target="_blank">WebGLStats</a>, по состоянию на февраль 2016 года, его поддерживают свыше 90% устройств совместимых с WebGL.<br><br>

<pre id="1.1getClearAlpha"><span onclick="showClick(type_float)"><a href="#" onclick="return false" onblur="hideClick()" onmouseover="show('get clear alpha - получить отдельно (значение) альфа(канала)')" onmouseout="hide()">.getClearAlpha</a></span>( )</pre>
Возвращает текущее значение альфа-канала прозрачности. Диапазон значений от&nbsp;<tt>0</tt> до&nbsp;<tt>1</tt>.<br><br>

<pre id="1.1getClearColor"><a href="math.htm#3" onmouseover="show('Color.<br>get clear color - получить цвет')" onmouseout="hide()">.getClearColor</a>( )</pre>
Метод возвращает экземпляр <a href="math.htm#3" onmouseover="show('Color')" onmouseout="hide()">THREE.Color</a> со значением текущего прозрачного цвета.<br><br>

<pre id="1.1getContext"><a href="https://developer.mozilla.org/en-US/docs/Web/API/WebGLRenderingContext" target="_blank" onmouseover="show('WebGLRenderingContext.<br>get context - получить контекст')" onmouseout="hide()">.getContext</a>( )</pre>
Метод возвращает текущий <a href="https://developer.mozilla.org/ru/docs/Web/API/WebGLRenderingContext" target="_blank">контекст WebGL</a>.<br><br>

<pre id="1.1getContextAttributes"><a href="https://developer.mozilla.org/en-US/docs/Web/API/WebGLRenderingContext/getContextAttributes" target="_blank" onmouseover="show('WebGLContextAttributes.<br>get context attributes - получить атрибуты контекста')" onmouseout="hide()">.getContextAttributes</a>( )</pre>
Возвращает объект с описанием атрибутов, установленных в контексте WebGL при его создании.<br><br>

<pre id="1.1getRenderTarget"><a href="#1.2" onmouseover="show('RenderTarget.<br>get RenderTarget - получить RenderTarget')" onmouseout="hide()">.getRenderTarget</a>( )</pre>
Метод возвращает текущий RenderTarget, если таковой имеется.<br><br>

<pre id="1.1getCurrentViewport"><a href="#1.2" onmouseover="show('RenderTarget.<br>get current viewport - получить (параметры) текущей области просмотра')" onmouseout="hide()">.getCurrentViewport</a>( )</pre>
Возвращает параметры текущей области просмотра (viewport).<br><br>

<pre id="1.1getDrawingBufferSize"><span onclick="showClick(type_obj)"><a href="#" onclick="return false" onblur="hideClick()" onmouseover="show('get drawing buffer size - получить размер буфера рисования')" onmouseout="hide()">.getDrawingBufferSize</a></span>( )</pre>
Метод возвращает объект, содержащий ширину и высоту буфера рисования визуализатора (рендерера) в пикселах.<br><br>

<pre id="1.1getPixelRatio"><span onclick="showClick(type_number)"><a href="#" onclick="return false" onblur="hideClick()" onmouseover="show('get pixel ratio - получить диапазон пикселей')" onmouseout="hide()">.getPixelRatio</a></span>( )</pre>
Возвращает используемый диапазон пикселей (количества точек на дюйм) текущего устройства.<br><br>

<pre id="1.1getSize"><span onclick="showClick(type_obj)"><a href="#" onclick="return false" onblur="hideClick()" onmouseover="show('get size - получить размер')" onmouseout="hide()">.getSize</a></span>( )</pre>
Метод возвращает объект, содержащий ширину и высоту выходного <tt>canvas</tt> визуализатора (рендерера) в пикселах.
Returns an object containing the width and height of the renderer's output canvas, in pixels.<br><br>

<pre id="1.1resetGLState"><span onclick="showClick(type_null)"><a href="#" onclick="return false" onblur="hideClick()" onmouseover="show('reset GL state - сбросить состояние GL')" onmouseout="hide()">.resetGLState</a></span>( )</pre>
Сбрасывает состояние GL в состояние, принятое по умолчанию. Вызывается внутренне при потере WebGL контекста.
Reset the GL state to default. Called internally if the WebGL context is lost.<br><br>

<pre id="1.1readRenderTargetPixels"><span onclick="showClick(type_null)"><a href="#" onclick="return false" onblur="hideClick()" onmouseover="show('read RenderTarget pixels - считать пиксели RenderTarget')" onmouseout="hide()">.readRenderTargetPixels</a></span>( <a href="#1.2" onmouseover="show('WebGLRenderTarget')" onmouseout="hide()">renderTarget</a>, <span onclick="showClick(type_float)"><a href="#" onclick="return false" onblur="hideClick()" onmouseover="show('x - координата x')" onmouseout="hide()">x</a></span>, <span onclick="showClick(type_float)"><a href="#" onclick="return false" onblur="hideClick()" onmouseover="show('y - координата y')" onmouseout="hide()">y</a></span>, <span onclick="showClick(type_float)"><a href="#" onclick="return false" onblur="hideClick()" onmouseover="show('width - ширина')" onmouseout="hide()">width</a></span>, <span onclick="showClick(type_float)"><a href="#" onclick="return false" onblur="hideClick()" onmouseover="show('height - высота')" onmouseout="hide()">height</a></span>, buffer )</pre>
Reads the pixel data from the renderTarget into the buffer you pass in. Buffer should be a Javascript Uint8Array instantiated with new Uint8Array( renderTargetWidth * renderTargetWidth * 4 ) to account for size and color information.
Это оболочка вокруг <tt><a href="https://developer.mozilla.org/en-US/docs/Web/API/WebGLRenderingContext/readPixels" target="_blank">gl.readPixels</a></tt>.<br>
Посмотрите пример <a href="https://threejs.org/examples/webgl_interactive_cubes_gpu.html" target="_blank">interactive / cubes / gpu</a>.<br><br>

<pre id="1.1render"><span onclick="showClick(type_null)"><a href="#" onclick="return false" onblur="hideClick()" onmouseover="show('render - представить, изобразить')" onmouseout="hide()">.render</a></span>( <a href="scenes.htm#3" onmouseover="show('Scene.<br>scene - сцена')" onmouseout="hide()">scene</a>, <a href="cameras.htm#1" onmouseover="show('Camera.<br>camera - камера')" onmouseout="hide()">camera</a>, <a href="#1.2" onmouseover="show('WebGLRenderTarget')" onmouseout="hide()">renderTarget</a>, <span onclick="showClick(type_bool)"><a href="#" onclick="return false" onblur="hideClick()" onmouseover="show('force clear - принудительная очистка')" onmouseout="hide()">forceClear</a></span> )</pre>
Метод отображает <a href="scenes.htm#3" onmouseover="show('Scene.<br>scene - сцена')" onmouseout="hide()">сцену</a> при помощи <a href="cameras.htm#1" onmouseover="show('Camera.<br>camera - камера')" onmouseout="hide()">камеры</a>.<br>
Прорисовка выполняется на <tt><a href="#1.2" onmouseover="show('WebGLRenderTarget')" onmouseout="hide()">renderTarget</a></tt> (если указан) или как обычно на <tt>canvas</tt>.<br>
Если аргумент <tt>forceClear</tt> установлен как <tt>true</tt>, буферы глубины, трафарета и цвета перед отображением будут очищены, даже если свойство рендерера <tt><a href="#1.1autoClear" onmouseover="show('WebGLRenderer.autoClear')" onmouseout="hide()">autoClear</a></tt> установлено как <tt>false</tt>.
Хотя, если аргумент <tt>forceClear</tt> установлен как <tt>true</tt>, возможно предотвратить очистку определенных буферов установкой любого из свойств <tt><a href="#1.1autoClearColor" onmouseover="show('WebGLRenderer.autoClearColor')" onmouseout="hide()">autoClearColor</a></tt>,
<tt><a href="#1.1autoClearStencil" onmouseover="show('WebGLRenderer.autoClearStencil')" onmouseout="hide()">autoClearStencil</a></tt> или <tt><a href="#1.1autoClearDepth" onmouseover="show('WebGLRenderer.autoClearDepth')" onmouseout="hide()">autoClearDepth</a></tt> как <tt>false</tt>.<br><br>

<pre id="1.1renderBufferDirect"><span onclick="showClick(type_null)"><a href="#" onclick="return false" onblur="hideClick()" onmouseover="show('render buffer direct - отобразить непосредственно буфер')" onmouseout="hide()">.renderBufferDirect</a></span>( <a href="cameras.htm#1" onmouseover="show('Camera.<br>camera - камера')" onmouseout="hide()">camera</a>, <span onclick="showClick(type_array)"><a href="#" onclick="return false" onblur="hideClick()" onmouseover="show('lights - огни')" onmouseout="hide()">lights</a></span>, <a href="scenes.htm#1" onmouseover="show('Fog.<br>fog - туман')" onmouseout="hide()">fog</a>, <a href="materials.htm#3" onmouseover="show('Material.<br>material - материал')" onmouseout="hide()">material</a>, <span onclick="showClick(type_obj)"><a href="#" onclick="return false" onblur="hideClick()" onmouseover="show('geometry group - группа геометрических (элементов)')" onmouseout="hide()">geometryGroup</a></span>, <a href="core.htm#14" onmouseover="show('Object3D.<br>object - объект')" onmouseout="hide()">object</a> )</pre>
Отображает группу буферных геометрических элементов при помощи камеры и с указанным материалом.<br><br>

<pre id="1.1renderBufferImmediate"><span onclick="showClick(type_null)"><a href="#" onclick="return false" onblur="hideClick()" onmouseover="show('render buffer immediate -<br>вывести (отобразить) буфер немедленно')" onmouseout="hide()">.renderBufferImmediate</a></span>( <a href="core.htm#14" onmouseover="show('Object3D.<br>object - объект')" onmouseout="hide()">object</a>, <span class="lnk" onmouseover="show('shaderProgram<br>program - программа')" onmouseout="hide()">program</span>, <a href="materials.htm#3" onmouseover="show('Material.<br>shading - затенение')" onmouseout="hide()">shading</a> )</pre>
<div class=list><tt>object</tt> - экземпляр <a href="core.htm#14" onmouseover="show('Object3D')" onmouseout="hide()">Object3D</a></div>
<div class=list><tt>program</tt> - экземпляр shaderProgram</div>
<div class=list><tt>shading</tt> - экземпляр <a href="materials.htm#3" onmouseover="show('Material')" onmouseout="hide()">Material</a></div>
Выводит ближайший буфер. Получает вызов от <tt>renderImmediateObject</tt>.<br><br>

<pre id="1.1setClearAlpha"><span onclick="showClick(type_null)"><a href="#" onclick="return false" onblur="hideClick()" onmouseover="show('set clear alpha - установить (значение) альфа(-канала)')" onmouseout="hide()">.setClearAlpha</a></span>( <span onclick="showClick(type_float)"><a href="#" onclick="return false" onblur="hideClick()" onmouseover="show('alpha - альфа, в данном случае значение альфа-канала (прозрачности)')" onmouseout="hide()">alpha</a></span> )</pre>
Установка значения альфа-канала. Допустимое входное значение - число с плавающей запятой в диапазоне от <tt>0.0</tt> до <tt>1.0</tt>.<br><br>

<pre id="1.1setClearColor"><span onclick="showClick(type_null)"><a href="#" onclick="return false" onblur="hideClick()" onmouseover="show('set clear color - установить чистый (прозрачный) цвет')" onmouseout="hide()">.setClearColor</a></span>( <a href="math.htm#3" onmouseover="show('Color.<br>color - цвет')" onmouseout="hide()">color</a>, <span onclick="showClick(type_float)"><a href="#" onclick="return false" onblur="hideClick()" onmouseover="show('alpha - альфа, в данном случае значение альфа-канала (прозрачности)')" onmouseout="hide()">alpha</a></span> )</pre>
Метод устанавливает прозрачный цвет и непрозрачность (opacity). Sets the clear color and opacity.<br><br>

<pre id="1.1setPixelRatio"><span onclick="showClick(type_null)"><a href="#" onclick="return false" onblur="hideClick()" onmouseover="show('set pixel ratio - установить пиксельный диапазон')" onmouseout="hide()">.setPixelRatio</a></span>( <span onclick="showClick(type_number)"><a href="#" onclick="return false" onblur="hideClick()" onmouseover="show('value - значение')" onmouseout="hide()">value</a></span> )</pre>
Метод устанавливает пиксельный диапазон устройства. Обычно он используется для <span class="lnk" onmouseover="show('Мониторы с HiDPI (от англ. слов High Dots Per Inch<br>- высокое разрешение в точках на дюйм), также<br>известные под торговым названием &quot;Retina Display&quot;<br>от компании Apple, это мониторы с экранами высокого<br>разрешения в относительно небольшом формате.<br>В основном они используются в ноутбуках и планшетах<br>высокого класса.<br>В режиме с высоким разрешением не всякое программное<br>обеспечение ведет себя правильно.')" onmouseout="hide()">HiDPI</span> устройства для предотвращения размытия выходного canvas.
Sets device pixel ratio. This is usually used for HiDPI device to prevent bluring output canvas.<br><br>

<pre id="1.setRenderTarget"><span onclick="showClick(type_null)"><a href="#" onclick="return false" onblur="hideClick()" onmouseover="show('set render target - установить целевой (буфер) визуализации')" onmouseout="hide()">.setRenderTarget</a></span>( <a href="#1.2" onmouseover="show('WebGLRenderTarget')" onmouseout="hide()">renderTarget</a> )</pre>
<div class=list><tt>renderTarget</tt> -- целевой буфер визуализации, который должен быть активирован (дополнительный, необязательный аргумент).</div>
Данный метод устанавливает действующий целевой буфер визуализации (<tt>renderTarget</tt>). Если параметр опущен, в качестве действующего <tt>renderTarget</tt> устанавливается <tt>canvas</tt>.<br><br>

<pre id="1.1setScissor"><span onclick="showClick(type_null)"><a href="#" onclick="return false" onblur="hideClick()" onmouseover="show('set scissor - установить (область) обрезки')" onmouseout="hide()">.setScissor</a></span>( <span onclick="showClick(type_int)"><a href="#" onclick="return false" onblur="hideClick()" onmouseover="show('x - координата x')" onmouseout="hide()">x</a></span>, <span onclick="showClick(type_int)"><a href="#" onclick="return false" onblur="hideClick()" onmouseover="show('y - координата y')" onmouseout="hide()">y</a></span>, <span onclick="showClick(type_int)"><a href="#" onclick="return false" onblur="hideClick()" onmouseover="show('width - ширина')" onmouseout="hide()">width</a></span>, <span onclick="showClick(type_int)"><a href="#" onclick="return false" onblur="hideClick()" onmouseover="show('height - высота')" onmouseout="hide()">height</a></span> )</pre>
Устанавливает область обрезки из <tt>(x, y)</tt> до <tt>(x + width, y + height)</tt><br><br>

<pre id="1.1setScissorTest"><span onclick="showClick(type_null)"><a href="#" onclick="return false" onblur="hideClick()" onmouseover="show('set scissor test - ')" onmouseout="hide()">.setScissorTest</a></span>( <span onclick="showClick(type_bool)"><a href="#" onclick="return false" onblur="hideClick()" onmouseover="show('boolean - логический, булев')" onmouseout="hide()">boolean</a></span> )</pre>
Включает или отключает проверку обрезки. Когда она включена, дальнейшие действия визуализатора будут затрагивать только пиксели внутри области, определяемой обрезкой.<br><br>

<pre id="1.1setSize"><span onclick="showClick(type_null)"><a href="#" onclick="return false" onblur="hideClick()" onmouseover="show('set size - установить размер')" onmouseout="hide()">.setSize</a></span>( <span onclick="showClick(type_int)"><a href="#" onclick="return false" onblur="hideClick()" onmouseover="show('width - ширина')" onmouseout="hide()">width</a></span>, <span onclick="showClick(type_int)"><a href="#" onclick="return false" onblur="hideClick()" onmouseover="show('height - высота')" onmouseout="hide()">height</a></span>, <span onclick="showClick(type_bool)"><a href="#" onclick="return false" onblur="hideClick()" onmouseover="show('update style - обновить стиль')" onmouseout="hide()">updateStyle</a></span> )</pre>
Изменяет размеры выходного холста (canvas) на <tt>(width, height)</tt> с учетом соотношения пикселей устройства, а также устанавливает область просмотра (viewport) в соответствии с этим размером, начиная с <tt>(0, 0)</tt>.
Установка параметра <tt><span onclick="showClick(type_bool)"><a href="#" onclick="return false" onblur="hideClick()" onmouseover="show('update style - обновить стиль')" onmouseout="hide()">updateStyle</a></span></tt> как <tt>false</tt> препятствует любым изменениям стиля выходного холста (canvas).<br><br>

<pre id="1.1setTexture2D"><span onclick="showClick(type_null)"><a href="#" onclick="return false" onblur="hideClick()" onmouseover="show('set texture 2D - установить двумерную текстуру')" onmouseout="hide()">.setTexture2D</a></span>( <a href="textures.htm#6" onmouseover="show('Texture.<br>texture - текстура')" onmouseout="hide()">texture</a>, <span onclick="showClick(type_number)"><a href="#" onclick="return false" onblur="hideClick()" onmouseover="show('slot - щель, прорезь, интервал')" onmouseout="hide()">slot</a></span> )</pre>
<div class=list><tt><a href="textures.htm#6" onmouseover="show('Texture.<br>texture - текстура')" onmouseout="hide()">texture</a></tt> -- текстура, которую нужно установить.</div>
<div class=list><tt><span onclick="showClick(type_number)"><a href="#" onclick="return false" onblur="hideClick()" onmouseover="show('slot - щель, прорезь, интервал')" onmouseout="hide()">slot</a></span></tt> -- число, показывающее с каким интервалом должна использоваться текстура.</div>
Данный метод устанавливает правильную текстуру с правильным интервалом для шейдера WebGL. Размер интервала можно найти как значение униформа выборки.
<div class=note><b>Примечание:</b> Этот метод заменяет устаревший метод <tt><span onclick="showClick(type_null)"><a href="#" onclick="return false" onblur="hideClick()" onmouseover="show('set texture - установить текстуру')" onmouseout="hide()">.setTexture</a></span></tt>.</div><br>

<pre id="1.1setTextureCube"><span onclick="showClick(type_null)"><a href="#" onclick="return false" onblur="hideClick()" onmouseover="show('set texture cube - установить текстуру куба')" onmouseout="hide()">.setTextureCube</a></span>( <a href="textures.htm#3" onmouseover="show('CubeTexture')" onmouseout="hide()">cubeTexture</a>, <span onclick="showClick(type_number)"><a href="#" onclick="return false" onblur="hideClick()" onmouseover="show('slot - щель, прорезь, интервал')" onmouseout="hide()">slot</a></span> )</pre>
<div class=list><tt><a href="textures.htm#3" onmouseover="show('CubeTexture')" onmouseout="hide()">cubeTexture</a></tt> -- устанавливаемая кубическая текстура.</div>
<div class=list><tt><span onclick="showClick(type_number)"><a href="#" onclick="return false" onblur="hideClick()" onmouseover="show('slot - щель, прорезь, интервал')" onmouseout="hide()">slot</a></span></tt> -- число, показывающее с каким интервалом должна использоваться текстура.</div>
Этот метод устанавливает правильную текстуру с правильным интервалом для шейдера WebGL. Размер интервала можно найти как значение униформа выборки.<br><br>

<pre id="1.1setViewport"><span onclick="showClick(type_null)"><a href="#" onclick="return false" onblur="hideClick()" onmouseover="show('set viewport - установить область (окно) просмотра')" onmouseout="hide()">.setViewport</a></span>( <span onclick="showClick(type_int)"><a href="#" onclick="return false" onblur="hideClick()" onmouseover="show('x - координата x')" onmouseout="hide()">x</a></span>, <span onclick="showClick(type_int)"><a href="#" onclick="return false" onblur="hideClick()" onmouseover="show('y - координата y')" onmouseout="hide()">y</a></span>, <span onclick="showClick(type_int)"><a href="#" onclick="return false" onblur="hideClick()" onmouseover="show('width - ширина')" onmouseout="hide()">width</a></span>, <span onclick="showClick(type_int)"><a href="#" onclick="return false" onblur="hideClick()" onmouseover="show('height - высота')" onmouseout="hide()">height</a></span> )</pre>
Метод устанавливает область просмотра (viewport) визуализации от <tt>(x, y)</tt> до <tt>(x + width, y + height)</tt>.</div><br>
<h4>Исходники</h4>
<div class=blockindent><a href="https://github.com/mrdoob/three.js/blob/master/src/renderers/WebGLRenderer.js" target="_blank">WebGLRenderer.js на github.com</a></div><br><br>


<h3 id="1.2">WebGLRenderTarget</h3>
<a href="https://msdn.microsoft.com/en-us/library/bb976073.aspx" target="_blank">Целевой буфер визуализации</a> - это буфер, где видеокарта рисует пиксели сцены, представленной на заднем плане.
Он используется в разных эффектах, вроде применения постобработки к отображаемому изображению перед показом его на экране.
<div class=note_trans><b>Примечание переводчика:</b> вот перевод вышеприведенной статьи о целевом буфере визуализации. <a class='link' onclick='javascript:spoiler(this)'>... читать далее</a>
<div style='display:none;'><h4>Что такое целевой буфер визуализации?</h4>
Целевой буфер визуализации - это буфер, где видеокарта рисует пиксели сцены, отображаемой <a href="https://msdn.microsoft.com/en-us/library/microsoft.xna.framework.graphics.effect.aspx" target="_blank">Effect Class</a>.<br><br>
Целевой буфер визуализации, назначенный по умолчанию, называется обратным буфером - это часть видеопамяти, которая содержит следующий кадр, что будет прорисован.
С помощью класса <a href="https://msdn.microsoft.com/en-us/library/microsoft.xna.framework.graphics.rendertarget2d.aspx" target="_blank">RenderTarget2D</a> можно создавать другие целевые буферы - по сути, резервируя новые области видеопамяти для рисования.
Большинство игр предоставляют множество контента другим целевым буферам визуализации ("вне экрана", ну или "за кадром", т.е. невидимо для пользователя), помимо обратного буфера, затем поэтапно собирают разные графические элементы, объединяя их, для создания окончательного варианта в обратном буфере.<br><br>
Целевой буфер визуализации имеет ширину и высоту. Ширина и высота обратного буфера - это конечное разрешение экрана вашей игры (хотя на Xbox 360 этот конечный результат масштабируется в соответствии с экраном пользователя).
Внеэкранный целевой буфер визуализации необязательно должен иметь те же самые ширину и высоту, что и обратный буфер.
Небольшие части конечного изображения могут быть визуализированы в меньших по размеру целевых буферах визуализации и впоследствии скопированы в другой целевой буфер визуализации.
Также у целевого буфера визуализации имеется формат поверхности, который описывает сколько бит выделяется для каждого пикселя и как они распределяются между красным (red), зеленым (green), синим (blue) значениями цвета и каналом прозрачности (alpha).
Например, <tt><a href="https://msdn.microsoft.com/en-us/library/microsoft.xna.framework.graphics.surfaceformat.aspx#SurfaceFormat.Bgr32" target="_blank">SurfaceFormat.Bgr32</a></tt> выделяет 32 бита на пиксель: 8 бит для каждого цвета и 8 бит для альфа-канала.
Как вариант, целевой буфер визуализации может выполнять сглаживание (антиалиасинг) на всех изображениях, представленных в нем.<br><br>
Для использования целевого буфера визуализации создайте объект <a href="https://msdn.microsoft.com/en-us/library/microsoft.xna.framework.graphics.rendertarget2d(v=xnagamestudio.31).aspx" target="_blank">RenderTarget2D</a> с шириной, высотой и другими, нужными параметрами.
Затем вызовите метод <a href="https://msdn.microsoft.com/en-us/library/microsoft.xna.framework.graphics.graphicsdevice.setrendertarget(v=xnagamestudio.31).aspx" target="_blank">GraphicsDevice.SetRenderTarget</a>, чтобы сделать целевой буфер визуализации текущим буфером визуализации.
С этого момента любые вызовы Draw будут отрисовываться в целевом буфере визуализации.
По окончании работы с целевым буфером визуализации вызывается GraphicsDevice.SetRenderTarget для нового целевого буфера визуализации (или значение <tt>null</tt> для обратного буфера).
Затем в любое время можно вызывать RenderTarget2D.GetTexture для получения содержимого целевого буфера визуализации для дальнейшей обработки.<br><br>
Целевые буферы визуализации работают в соединении с буфером глубины/трафарета. Если устанавливается новый буфер визуализации, он будет использовать существующий буфер глубины/трафарета.
Если новый буфер целевой визуализации имеет другие параметры мультивыборки, чем у буфера глубины/трафарета, или большую ширину и высоту, для соответствия потребуется новый буфер глубины/трафарета.
Также в буфере глубины/трафарета следует использовать формат глубины, совместимый с форматом поверхности цели визуализации.<br><br>
Иногда можно одновременно отображать содержимое нескольких целевых буферов визуализации. Число одновременных целевых буферов визуализации, поддерживаемых графическим устройством,
задается свойством <tt><a href="https://msdn.microsoft.com/en-us/library/microsoft.xna.framework.graphics.graphicsdevicecapabilities.maxsimultaneousrendertargets.aspx" target="_blank">MaxSimultaneousRenderTargets</a></tt>.
В случае применения нескольких целевых буферов визуализации существует множество предостережений. Более подробные сведения смотрите в статье <a href="https://msdn.microsoft.com/en-us/library/bb975911.aspx" target="_blank">Render Targets</a>.</div></div>

<h4>Конструктор</h4>
<pre>WebGLRenderTarget( <span onclick="showClick(type_number)"><a href="#" onclick="return false" onblur="hideClick()" onmouseover="show('width - ширина')" onmouseout="hide()">width</a></span>, <span onclick="showClick(type_number)"><a href="#" onclick="return false" onblur="hideClick()" onmouseover="show('height - высота')" onmouseout="hide()">height</a></span>, <span onclick="showClick(type_obj)"><a href="#" onclick="return false" onblur="hideClick()" onmouseover="show('options - опции')" onmouseout="hide()">options</a></span> )</pre>
<div class=list><tt><span onclick="showClick(type_number)"><a href="#" onclick="return false" onblur="hideClick()" onmouseover="show('width - ширина')" onmouseout="hide()">width</a></span></tt> -- ширина <tt>renderTarget</tt>.</div>
<div class=list><tt><span onclick="showClick(type_number)"><a href="#" onclick="return false" onblur="hideClick()" onmouseover="show('height - высота')" onmouseout="hide()">height</a></span></tt> -- высота <tt>renderTarget</tt>.</div>
<div class=list><tt><span onclick="showClick(type_obj)"><a href="#" onclick="return false" onblur="hideClick()" onmouseover="show('options - опции')" onmouseout="hide()">options</a></span></tt>
- дополнительный, необязательный объект, который содержит параметры текстуры для автоматической генерации целевой текстуры и логические значения буферов глубины/трафаретов (<tt>depthBuffer</tt>/<tt>stencilBuffer</tt>).
Пояснения к параметрам текстуры смотрите в статье <a href="textures.htm#6" onmouseover="show('Texture')" onmouseout="hide()">Texture</a>.</div>
<div class=blockindent>Возможны следующие опции:
<div class=list><tt><span onclick="showClick(type_const)"><a href="#" onclick="return false" onblur="hideClick()" onmouseover="show('wrap S - укладка текстуры по горизонтали (координата S)')" onmouseout="hide()">wrapS</a></span></tt>
- константа, значением по умолчанию является <tt><a href="constants.htm#7.2" onmouseover="show('clamp to edge wrapping - стыковать с краем оболочки')" onmouseout="hide()">THREE.ClampToEdgeWrapping</a></tt>.</div>
<div class=list><tt><span onclick="showClick(type_const)"><a href="#" onclick="return false" onblur="hideClick()" onmouseover="show('wrap T - укладка текстуры по вертикали (координата T)')" onmouseout="hide()">wrapT</a></span></tt>
- константа, значением по умолчанию является <tt><a href="constants.htm#7.2" onmouseover="show('clamp to edge wrapping - стыковать с краем оболочки')" onmouseout="hide()">THREE.ClampToEdgeWrapping</a></tt>.</div>
<div class=list><tt><span onclick="showClick(type_const)"><a href="#" onclick="return false" onblur="hideClick()" onmouseover="show('сокращ. от magnification filter - фильтр увеличения')" onmouseout="hide()">magFilter</a></span></tt>
- константа, значением по умолчанию является <tt><a href="constants.htm#7.3" onmouseover="show('linear filter - линейный фильтр')" onmouseout="hide()">THREE.LinearFilter</a></tt>.</div>
<div class=list><tt><span onclick="showClick(type_const)"><a href="#" onclick="return false" onblur="hideClick()" onmouseover="show('сокращ. от minification filter - фильтр уменьшения')" onmouseout="hide()">minFilter</a></span></tt>
- константа, значением по умолчанию является <tt><a href="constants.htm#7.4" onmouseover="show('linear filter - линейный фильтр')" onmouseout="hide()">THREE.LinearFilter</a></tt>.</div>
<div class=list><tt><span onclick="showClick(type_const)"><a href="#" onclick="return false" onblur="hideClick()" onmouseover="show('format - формат')" onmouseout="hide()">format</a></span></tt>
- константа, значением по умолчанию является <tt><a href="constants.htm#7.6" onmouseover="show('RGBA format - формат передачи цвета<br>(сокращ. по первым буквам) - красный (red),<br>зеленый (green), синий (blue), альфа-канал<br>(прозрачность)')" onmouseout="hide()">THREE.RGBAFormat</a></tt>.</div>
<div class=list><tt><span onclick="showClick(type_const)"><a href="#" onclick="return false" onblur="hideClick()" onmouseover="show('type - тип')" onmouseout="hide()">type</a></span></tt>
- константа, значением по умолчанию является <tt><a href="constants.htm#7.5" onmouseover="show('unsigned byte type - беззнаковый тип байтов')" onmouseout="hide()">THREE.UnsignedByteType</a></tt>.</div>
<div class=list><tt><span onclick="showClick(type_number)"><a href="#" onclick="return false" onblur="hideClick()" onmouseover="show('anisotropy - анизотропия, т.е. неравномерность<br>свойств среды по разным направлениям')" onmouseout="hide()">anisotropy</a></span></tt>
— значением по умолчанию является <tt>1</tt>. Смотрите описание свойства <tt><a href="textures.htm#6anisotropy" onmouseover="show('Texture.anisotropy')" onmouseout="hide()">Texture.anisotropy</a></tt>.</div>
<div class=list><tt><span onclick="showClick(type_const)"><a href="#" onclick="return false" onblur="hideClick()" onmouseover="show('encoding - кодировка')" onmouseout="hide()">encoding</a></span></tt>
- константа, значением по умолчанию является <tt><a href="constants.htm#7.10" onmouseover="show('linear encoding - линейное кодирование')" onmouseout="hide()">THREE.LinearEncoding</a></tt>.</div>
<div class=list><tt><span onclick="showClick(type_bool)"><a href="#" onclick="return false" onblur="hideClick()" onmouseover="show('depth buffer - буфер глубины')" onmouseout="hide()">depthBuffer</a></span></tt>
— логическое значение, по умолчанию равно <tt>true</tt>. Установите его как <tt>false</tt>, если буфер глубины не нужен.</div>
<div class=list><tt><span onclick="showClick(type_bool)"><a href="#" onclick="return false" onblur="hideClick()" onmouseover="show('stencil buffer - буфер трафарета')" onmouseout="hide()">stencilBuffer</a></span></tt>
— логическое значение, по умолчанию равно <tt>true</tt>. Установите его как <tt>false</tt>, если буфер трафарета не нужен.</div></div>
Создает новый буфер целевой визуализации (<tt>WebGLRenderTarget</tt>) с определенными шириной и высотой.<br><br>

<h4>Свойства</h4>
<div class=blockindent><br>
<pre id="1.2uuid"><span onclick="showClick(type_number)"><a href="#" onclick="return false" onblur="hideClick()" onmouseover="show('uuid - сокращ. англ. слов Universally Unique Identifier<br>- универсальный уникальный идентификатор')" onmouseout="hide()">.uuid</a></span></pre>
Уникальное число для данного экземпляра целевого буфера визуализации.<br><br>

<pre id="1.2width"><span onclick="showClick(type_number)"><a href="#" onclick="return false" onblur="hideClick()" onmouseover="show('width - ширина')" onmouseout="hide()">.width</a></span></pre>
Ширина целевого буфера визуализации.<br><br>

<pre id="1.2height"><span onclick="showClick(type_number)"><a href="#" onclick="return false" onblur="hideClick()" onmouseover="show('height - высота')" onmouseout="hide()">.height</a></span></pre>
Высота целевого буфера визуализации.<br><br>

<pre id="1.2scissor"><a href="math.htm#20" onmouseover="show('Vector4.<br>scissor - вырезать ножницами')" onmouseout="hide()">.scissor</a></pre>
Прямоугольная область внутри окна просмотра целевого буфера визуализации. Фрагменты, находящиеся за пределами этой области, будут отбрасываться.<br><br>

<pre id="1.2scissorTest"><span onclick="showClick(type_bool)"><a href="#" onclick="return false" onblur="hideClick()" onmouseover="show('scissor test - проверка обрезки')" onmouseout="hide()">.scissorTest</a></span></pre>
Свойство показывает, активна или нет проверка обрезки.<br><br>

<pre id="1.2viewport"><a href="math.htm#20" onmouseover="show('Vector4.<br>viewport - окно (область) просмотра')" onmouseout="hide()">.viewport</a></pre>
Область (окно) просмотра данного целевого буфера визуализации.<br><br>

<pre id="1.2texture"><a href="textures.htm#6" onmouseover="show('Texture.<br>texture - текстура')" onmouseout="hide()">.texture</a></pre>
Данный экземпляр текстуры содержит отображаемые пиксели. Используется в качестве входных данных для дальнешей обработки.<br><br>

<pre id="1.2depthBuffer"><span onclick="showClick(type_bool)"><a href="#" onclick="return false" onblur="hideClick()" onmouseover="show('depth buffer - буфер глубины')" onmouseout="hide()">.depthBuffer</a></span></pre>
Свойство определяет, представлять ли буфер глубины. Значением по умолчанию является <tt>true</tt>.<br><br>

<pre id="1.2stencilBuffer"><span onclick="showClick(type_bool)"><a href="#" onclick="return false" onblur="hideClick()" onmouseover="show('stencil buffer - буфер трафарета')" onmouseout="hide()">.stencilBuffer</a></span></pre>
Свойство определяет, представлять ли буфер трафаретов. Значением по умолчанию является <tt>true</tt>.<br><br>

<pre id="1.2depthTexture"><a href="textures.htm#5" onmouseover="show('DepthTexture.<br>depth texture - текстура глубины')" onmouseout="hide()">depthTexture</a></pre>
Если это свойство установлено, глубина сцены будет отображаться по данной текстуре. Значением по умолчанию является <tt>null</tt>.</div><br>

<h4>Методы</h4>
<div class=blockindent>
<pre id="1.2setSize"><span onclick="showClick(type_null)"><a href="#" onclick="return false" onblur="hideClick()" onmouseover="show('set size - установить размер')" onmouseout="hide()">.setSize</a></span>( <span onclick="showClick(type_number)"><a href="#" onclick="return false" onblur="hideClick()" onmouseover="show('width - ширина')" onmouseout="hide()">width</a></span>, <span onclick="showClick(type_number)"><a href="#" onclick="return false" onblur="hideClick()" onmouseover="show('height - высота')" onmouseout="hide()">height</a></span> )</pre>
Устанавливает размеры данного целевого буфера визуализации.<br><br>

<pre id="1.2clone"><a href="#1.2" onmouseover="show('WebGLRenderTarget.<br>clone - клонировать')" onmouseout="hide()">.clone</a>()</pre>
Создает копию данного целевого буфера визуализации.<br><br>

<pre id="1.2copy"><a href="#1.2" onmouseover="show('WebGLRenderTarget.<br>copy - копировать')" onmouseout="hide()">.copy</a>( <a href="#1.2" onmouseover="show('WebGLRenderTarget.<br>source - источник')" onmouseout="hide()">source</a> )</pre>
Перенимает настройки заданного (в параметре <tt>source</tt>) целевого буфера визуализации.<br><br>

<pre id="1.2dispose"><span onclick="showClick(type_null)"><a href="#" onclick="return false" onblur="hideClick()" onmouseover="show('dispose - выбросить, избавиться, удалить')" onmouseout="hide()">.dispose</a></span>()</pre>
Метод отправляет удаляемое событие.</div><br>

Для данного класса доступны методы <a href="core.htm#5" onmouseover="show('EventDispatcher')" onmouseout="hide()">EventDispatcher</a>.<br><br>

<h4>Исходники</h4>
<div class=blockindent><a href="https://github.com/mrdoob/three.js/blob/master/src/renderers/WebGLRenderTarget.js" target="_blank">WebGLRenderTarget.js на Гитхабе</a></div><br><br>


<span class="right_side"><a href="#1.2" title="Переход к родительскому классу"><tt>WebGLRenderTarget &rarr;</tt></a></span>
<h3 id="1.3">WebGLRenderTargetCube</h3>
Данный буфер целевой визуализации используется <tt><a href="cameras.htm#2" onmouseover="show('CubeCamera')" onmouseout="hide()">CubeCamera</a></tt>'ой в качестве своего <a href="#1.2" onmouseover="show('WebGLRenderTarget')" onmouseout="hide()"><tt>WebGLRenderTarget</tt></a>.<br><br>

<h4>Примеры</h4>
Примеры смотрите в описании <tt><a href="cameras.htm#2" onmouseover="show('CubeCamera')" onmouseout="hide()">CubeCamera</a></tt>.<br><br>

<h4>Конструктор</h4>
<pre>WebGLRenderTargetCube( <span onclick="showClick(type_number)"><a href="#" onclick="return false" onblur="hideClick()" onmouseover="show('width - ширина')" onmouseout="hide()">width</a></span>, <span onclick="showClick(type_number)"><a href="#" onclick="return false" onblur="hideClick()" onmouseover="show('height - высота')" onmouseout="hide()">height</a></span>, <span onclick="showClick(type_obj)"><a href="#" onclick="return false" onblur="hideClick()" onmouseover="show('options - опции')" onmouseout="hide()">options</a></span> )</pre>
<div class=list><tt><span onclick="showClick(type_float)"><a href="#" onclick="return false" onblur="hideClick()" onmouseover="show('width - ширина')" onmouseout="hide()">width</a></span></tt> -- ширина renderTarget.</div>
<div class=list><tt><span onclick="showClick(type_float)"><a href="#" onclick="return false" onblur="hideClick()" onmouseover="show('height - высота')" onmouseout="hide()">height</a></span></tt> -- высота renderTarget.</div>
<div class=list><tt><span onclick="showClick(type_obj)"><a href="#" onclick="return false" onblur="hideClick()" onmouseover="show('options - опции')" onmouseout="hide()">options</a></span></tt>
- дополнительный, необязательный объект, который содержит параметры текстуры для автоматической генерации целевой текстуры и логические значения буферов глубины/трафаретов (<tt>depthBuffer</tt>/<tt>stencilBuffer</tt>).
Пояснения к параметрам текстуры смотрите в статье <a href="textures.htm#6" onmouseover="show('Texture')" onmouseout="hide()">Texture</a>.</div>
<div class="blockindent">Возможны следующие опции:
<div class=list><tt><span onclick="showClick(type_const)"><a href="#" onclick="return false" onblur="hideClick()" onmouseover="show('wrap S - укладка текстуры по горизонтали (координата S)')" onmouseout="hide()">wrapS</a></span></tt>
- константа, значением по умолчанию является <tt><a href="constants.htm#7.2" onmouseover="show('clamp to edge wrapping - стыковать с краем оболочки')" onmouseout="hide()">THREE.ClampToEdgeWrapping</a></tt>.</div>
<div class=list><tt><span onclick="showClick(type_const)"><a href="#" onclick="return false" onblur="hideClick()" onmouseover="show('wrap T - укладка текстуры по вертикали (координата T)')" onmouseout="hide()">wrapT</a></span></tt>
- константа, значением по умолчанию является <tt><a href="constants.htm#7.2" onmouseover="show('clamp to edge wrapping - стыковать с краем оболочки')" onmouseout="hide()">THREE.ClampToEdgeWrapping</a></tt>.</div>
<div class=list><tt><span onclick="showClick(type_const)"><a href="#" onclick="return false" onblur="hideClick()" onmouseover="show('сокращ. от magnification filter - фильтр увеличения')" onmouseout="hide()">magFilter</a></span></tt>
- константа, значением по умолчанию является <tt><a href="constants.htm#7.3" onmouseover="show('linear filter - линейный фильтр')" onmouseout="hide()">THREE.LinearFilter</a></tt>.</div>
<div class=list><tt><span onclick="showClick(type_const)"><a href="#" onclick="return false" onblur="hideClick()" onmouseover="show('сокращ. от minification filter - фильтр уменьшения')" onmouseout="hide()">minFilter</a></span></tt>
- константа, значением по умолчанию является <tt><a href="constants.htm#7.4" onmouseover="show('linear filter - линейный фильтр')" onmouseout="hide()">THREE.LinearFilter</a></tt>.</div>
<div class=list><tt><span onclick="showClick(type_const)"><a href="#" onclick="return false" onblur="hideClick()" onmouseover="show('format - формат')" onmouseout="hide()">format</a></span></tt>
- константа, значением по умолчанию является <tt><a href="constants.htm#7.6" onmouseover="show('RGBA format - формат передачи цвета (сокращ. по первым буквам)<br>- красный, зеленый, синий, альфа-канал (прозрачность)')" onmouseout="hide()">THREE.RGBAFormat</a></tt>.</div>
<div class=list><tt><span onclick="showClick(type_const)"><a href="#" onclick="return false" onblur="hideClick()" onmouseover="show('type - тип')" onmouseout="hide()">type</a></span></tt>
- константа, значением по умолчанию является <tt><a href="constants.htm#7.5" onmouseover="show('unsigned byte type - беззнаковый тип байтов')" onmouseout="hide()">THREE.UnsignedByteType</a></tt>.</div>
<div class=list><tt><span onclick="showClick(type_number)"><a href="#" onclick="return false" onblur="hideClick()" onmouseover="show('anisotropy - анизотропия, т.е. неравномерность<br>свойств среды по разным направлениям')" onmouseout="hide()">anisotropy</a></span></tt> — значением по умолчанию является&nbsp;<tt>1</tt>.
Смотрите описание свойства <tt><a href="textures.htm#6anisotropy" onmouseover="show('Texture.anisotropy')" onmouseout="hide()">Texture.anisotropy</a></tt>.</div>
<div class=list><tt><span onclick="showClick(type_const)"><a href="#" onclick="return false" onblur="hideClick()" onmouseover="show('encoding - кодировка')" onmouseout="hide()">encoding</a></span></tt>
- константа, значением по умолчанию является <tt><a href="constants.htm#7.10" onmouseover="show('linear encoding - линейное кодирование')" onmouseout="hide()">THREE.LinearEncoding</a></tt>.</div>
<div class=list><tt><span onclick="showClick(type_bool)"><a href="#" onclick="return false" onblur="hideClick()" onmouseover="show('depth buffer - буфер глубины')" onmouseout="hide()">depthBuffer</a></span></tt>
— логическое значение, по умолчанию равно <tt>true</tt>. Установите его как <tt>false</tt>, если буфер глубины не нужен.</div>
<div class=list><tt><span onclick="showClick(type_bool)"><a href="#" onclick="return false" onblur="hideClick()" onmouseover="show('stencil buffer - буфер трафарета')" onmouseout="hide()">stencilBuffer</a></span></tt>
— логическое значение, по умолчанию равно <tt>true</tt>. Установите его как <tt>false</tt>, если буфер трафарета не нужен.</div></div>
Создает новый WebGLRenderTargetCube.<br><br>

<h4>Свойства</h4>
Для ознакомления с унаследованными свойствами смотрите <a href="#1.2" onmouseover="show('WebGLRenderTarget')" onmouseout="hide()"><tt>WebGLRenderTarget</tt></a>.
<div class=blockindent><br>
<pre id="1.3activeCubeFace"><span onclick="showClick(type_int)"><a href="#" onclick="return false" onblur="hideClick()" onmouseover="show('active cube face - активная грань куба')" onmouseout="hide()">.activeCubeFace</a></span></pre>
Свойство <tt>activeCubeFace</tt> соответствует стороне куба <span class="lnk1" onmouseover="show('здесь буквами X, Y и Z соответствуют осям координат,<br>а P и N обозначают positive - положительный и<br>negative - отрицательный')" onmouseout="hide()">(<tt>PX 0</tt>, <tt>NX 1</tt>, <tt>PY 2</tt>, <tt>NY 3</tt>, <tt>PZ 4</tt>, <tt>NZ 5</tt>)</span>, устанавливается и используется внутри <tt><a href="cameras.htm#2" onmouseover="show('CubeCamera')" onmouseout="hide()">CubeCamera</a></tt>.</div><br>

<h4>Методы</h4>
Для ознакомления с унаследованными методами смотрите <a href="#1.2" onmouseover="show('WebGLRenderTarget')" onmouseout="hide()"><tt>WebGLRenderTarget</tt></a>.<br><br>
<h4>Исходники</h4>
<div class=blockindent><a href="https://github.com/mrdoob/three.js/blob/master/src/renderers/WebGLRenderTargetCube.js" target="_blank">WebGLRenderTargetCube.js на Гитхабе</a></div><br><br>


<h2 id="2">Шейдеры</h2>

<h3 id="2.1">ShaderChunk</h3>
Блоки шейдеров для библиотеки WebLG Shader
<h4>Свойства</h4>
<h4>Методы</h4>
<h4>Исходники</h4>
<div class=blockindent><a href="https://github.com/mrdoob/three.js/blob/master/src/renderers/shaders/ShaderChunk.js" target="_blank">ShaderChunk.js на github.com</a></div><br><br>

<h3 id="2.2">ShaderLib</h3>
Библиотека Webgl Shader для <em>three.js</em>
<h4>Свойства</h4>
<h4>Методы</h4>
<h4>Исходники</h4>
<div class=blockindent><a href="https://github.com/mrdoob/three.js/blob/master/src/renderers/shaders/ShaderLib.js" target="_blank">ShaderLib.js на github.com</a></div><br><br>

<h3 id="2.3">UniformsLib</h3>
Библиотека переменных типа униформ (uniform) для общеиспользуемых webgl шейдеров.
<h4>Свойства</h4>
<h4>Методы</h4>
<h4>Исходники</h4>
<div class=blockindent><a href="https://github.com/mrdoob/three.js/blob/master/src/renderers/shaders/UniformsLib.js" target="_blank">UniformsLib.js на github.com</a></div><br><br>

<h3 id="2.4">UniformsUtils</h3>
Вспомогательные функции для переменных униформ. Поддерживает слияние и клонирование переменных типа униформ (uniform).
<h4>Свойства</h4>
<h4>Методы</h4>
<h4>Исходники</h4>
<div class=blockindent><a href="https://github.com/mrdoob/three.js/blob/master/src/renderers/shaders/UniformsUtils.js" target="_blank">UniformsUtils.js на github.com</a></div><br><br>
</body></html>
